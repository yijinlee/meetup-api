{
  "name": "Meetup",
  "apiVersion": 3,
  "description": "Meetup API v3 methods",
  "operations": {
    "ReportGroup": {
      "version": "3",
      "name": "ReportGroup",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "comments": {
          "location": "query",
          "required": false,
          "description": "An optional string of text that describes why you are submitting this report"
        },
        "type": {
          "location": "query",
          "required": true,
          "description": "A required identifier for type of abuse you are reporting. Acceptable values include dangerous, graphic_content, graphic_photo, harmful_activities, inappropriate:illegal, inappropriate:intellectual_property, inappropriate:licensed_services, inappropriate:misinformation, inappropriate:other, inappropriate:sexual_exploitation, inappropriate:sexually_explicit, inappropriate:underage, irl:hateful, irl:misrepresentation, irl:other, irl:violent, licensed_services, not_accurate, not_community, not_irl, nudity, other, poor_quality_or_spam:misinformation, poor_quality_or_spam:misleading_title, poor_quality_or_spam:no_description, poor_quality_or_spam:not_irl, poor_quality_or_spam:other, poor_quality_or_spam:spam, promotion_focus, sex, smyte_warn, transactional, violence, violent_or_hateful:hateful, violent_or_hateful:misinformation, violent_or_hateful:other, violent_or_hateful:violent"
        }
      },
      "summary": "Submits a new abuse report for a target group. Abuse reports will be followed up on by our Community Support team.",
      "uri": "/{urlname}/abuse_reports/",
      "notes": "This method requires the oauth reporting scope for oauth-authenticated requests"
    },
    "ReportEvent": {
      "version": "3",
      "name": "ReportEvent",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "comments": {
          "location": "query",
          "required": false,
          "description": "An optional string of text that describes why you are submitting this report"
        },
        "type": {
          "location": "query",
          "required": true,
          "description": "A required identifier for type of abuse you are reporting. Acceptable values include violent_or_hateful:violent, violent_or_hateful:hateful, violent_or_hateful:misinformation, violent_or_hateful:other, inappropriate:sexually_explicit, inappropriate:misinformation, inappropriate:sexual_exploitation, inappropriate:licensed_services, inappropriate:underage, inappropriate:illegal, inappropriate:intellectual_property, inappropriate:other, poor_quality_or_spam:spam, poor_quality_or_spam:misleading_title, poor_quality_or_spam:misinformation, poor_quality_or_spam:not_irl, poor_quality_or_spam:no_description, poor_quality_or_spam:other, irl:hateful, irl:violent, irl:misrepresentation, irl:no_host, irl:other"
        }
      },
      "summary": "Submits a new abuse report for a target event. Abuse reports will be followed up on by our Community Support team.",
      "uri": "/{urlname}/events/{event_id}/abuse_reports/",
      "notes": "This method requires the oauth reporting scope for oauth-authenticated requests"
    },
    "ReportAbuse": {
      "version": "3",
      "name": "ReportAbuse",
      "httpMethod": "POST",
      "parameters": {
        "comments": {
          "location": "query",
          "required": false,
          "description": "An optional string of text that describes why you are submitting this report"
        },
        "content_tag": {
          "location": "query",
          "required": false,
          "description": "An optional identifier for flagged content that identifies both the type and id, where possible, of the content reported. The type and id should be separated by a ':' character, e.g event_comment:{event_comment_id}. Valid content_tag types include conversation, conversation_message, convo, custom_list, email, event_comment, event_photo, group, mailing_list, member_photo, member_profile, message_board, pro_megaphone, reply, service_group_communication, service_group_communication_message. If member_id is not provided, content_tag should be provided to imply member_id"
        },
        "member_id": {
          "location": "query",
          "required": false,
          "description": "A numeric identifier for the member being reported. If not provided, this will be infered by the author of the content associated with the provided content_tag"
        },
        "type": {
          "location": "query",
          "required": true,
          "description": "A required identifier for type of abuse you are reporting. Acceptable values include general:underage, general:misrepresentation, general:sexually_explicit, general:hateful, general:violent, general:spam, general:intellectual_property, general:other, message:sexually_explicit, message:hateful, message:violent, message:misinformation, message:spam, message:other, photo:sexually_explicit, photo:hateful, photo:violent, photo:misleading_title, photo:intellectual_property, irl:misrepresentation, irl:hateful, irl:violent, irl:other, abuse, cron, dangerous, dislike_photo, fake, graphic_content, graphic_photo, impersonation, inappropriate, inappropriate_photo, join, licensed_services, offsite, not_accurate, not_irl, other, photo, sex, spam, transactional, underage, pay_dispute, nudity, violence, harmful_activities, not_community, promotion_focus"
        },
        "url": {
          "location": "query",
          "required": false,
          "description": "An optional URL for the location of the reported content if one exists"
        }
      },
      "summary": "Submits a new abuse report for a target member. Abuse reports will be followed up on by our Community Support team.",
      "uri": "/self/abuse_reports/",
      "notes": "This method requires the oauth reporting scope for oauth-authenticated requests"
    },
    "Blockstatus": {
      "version": "3",
      "name": "Blockstatus",
      "httpMethod": "GET",
      "parameters": {
        "member_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "The block status for the target member. This may be one of 'blocked' or 'none'"
        },
        "comments": {
          "location": "query",
          "required": false,
          "description": "An optional string of text describing why you have chosen to block this member"
        },
        "report": {
          "location": "query",
          "required": false,
          "description": "An optional value that represents a type of abuse the target member is being blocked for. Acceptable values include one of the following: fake, impersonation, inappropriate_photo, offsite, underage"
        }
      },
      "summary": "Checks the block status for a target member relative to the authenticated member",
      "uri": "/self/blocks/{member_id}/#status",
      "notes": null
    },
    "Blockmember": {
      "version": "3",
      "name": "Blockmember",
      "httpMethod": "POST",
      "parameters": {
        "member_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "comments": {
          "location": "query",
          "required": false,
          "description": "An optional string of text describing why you have chosen to block this member"
        },
        "report": {
          "location": "query",
          "required": false,
          "description": "An optional value that represents a type of abuse the target member is being blocked for. Acceptable values include one of the following: fake, impersonation, inappropriate_photo, offsite, underage"
        }
      },
      "summary": "Blocks a target member from various interactions with the authenticated member on the platform",
      "uri": "/self/blocks/{member_id}/#block",
      "notes": null
    },
    "Unblockmember": {
      "version": "3",
      "name": "Unblockmember",
      "httpMethod": "DELETE",
      "parameters": {
        "member_id": {
          "location": "uri",
          "required": true,
          "description": null
        }
      },
      "summary": "Unblocks a previously blocked member from various interactions with the authenticated member on the platform",
      "uri": "/self/blocks/{member_id}/#unblock",
      "notes": null
    },
    "batch": {
      "version": "3",
      "name": "batch",
      "httpMethod": "POST",
      "parameters": {
        "requests": {
          "location": "query",
          "required": true,
          "description": "JSON-encoding of multiple request objects as described in the parameter notes"
        }
      },
      "summary": "Performs multiple API requests in batch, useful for reducing HTTP network requests. This method is only available for OAuth authentication",
      "uri": "/batch/",
      "notes": "You may supply a limited number of API requests, typically 1 to 4, in one batch request using the required \"requests\" parameter.  Each of these individual batched requests will be tallied separately the same way they would when making individual requests.  The batch request itself will not be tallied. As such, batch requests can not be rate limited.  The only failures that you should account for are an authentication failure or a malformed JSON encoding of requests provided with the \"requests\" parameter. Composing batch requests Requests should be provided within a JSON-encoded array in the following format attached the requests parameter  within a POST body   [{    \"path\": \"/2/member/self\",    \"ref\":  \"me\",    \"params\": {      \"only\": \"name,id\"    }  }]  Only \"path\" is required for HTTP GET requests. \"path\" represents the API path for the method. \"ref\" provides a way to tag a request in a batch  with a label that you can associated with its response in the body of the batch response. This will default to the  provided \"path\". You may also supply a \"params\" key with a JSON object representing the parameters provided for the  request. At this time only HTTP GET, DELETE, and POST requests are supported. You may specify one of these as a \"method\" property of the request.  Methods requiring a multipart form POST are currently not supported. You may also supply headers on a per request basis by adding a \"headers\" field to the  JSON object representing the request as key value pairs of strings. Interpreting batch responses A response to a batch request will be in the format   [{    \"path\": \"/2/member/self\"    \"status\": 200,    \"ref\": \"me\",    \"body\": {      \"id\": 1234,      \"name\": \"Noah\"    },    \"headers\": {      \"key\": \"value\"     }  }]  \"path\" is the path of the method invoked. \"status\" represents the HTTP status code returned for the request.  \"ref\" is the name provided for the inbound request. \"body\" is the JSON-encoded response from the given API request.  \"headers\" is a JSON-encoded object representing the headers returned for that request.  These requests may fail the same way they would when making individual requests. The response will indicate these  failures. In order to preserve server resources and return batch responses within a reasonable amount of time, individual requests may timeout  if a response is not computed within a reasonable amount of time. This allows for some requests to fail and others to pass which is a nicer  alternative to an all or nothing response timeout.  A timed out request can be identified by inspecting its response's \"status\" field for a value of 504. A timed out response may look like.   [{    \"status\" : 504,    \"body\" : {     \"errors\" : [{\"code\": \"request_timeout\", \"message\":\"request timed out\"}]    },    \"headers\" : { ... },    \"path\" : \"/end/point\",    \"ref\" : \"request_ref\"  }] "
    },
    "DiscussionBoards": {
      "version": "3",
      "name": "DiscussionBoards",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time reply was posted in milliseconds since the epoch"
        },
        "discussion_count": {
          "location": "query",
          "required": false,
          "description": "Number of discussions on this board"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "The group associated with this board"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric ID of discussion board"
        },
        "latest_reply": {
          "location": "query",
          "required": false,
          "description": "The latest reply on this board"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "The posting member"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Discussion board name"
        },
        "post_count": {
          "location": "query",
          "required": false,
          "description": "Number of posts in discussions on this board"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time board was updated in milliseconds since the epoch"
        }
      },
      "summary": "Listings of Group discussion boards",
      "uri": "/{urlname}/boards/",
      "notes": "The :urlname path element may be any valid group urlname or domain name"
    },
    "Discussions": {
      "version": "3",
      "name": "Discussions",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "bid": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "last_post_date": {
          "location": "query",
          "required": false,
          "description": "(default) by post date"
        },
        "member_name": {
          "location": "query",
          "required": false,
          "description": "by posting member's name"
        },
        "thread_reply_count": {
          "location": "query",
          "required": false,
          "description": "by the threads reply count"
        },
        "thread_view_count": {
          "location": "query",
          "required": false,
          "description": "by the number of views a thread has"
        },
        "board": {
          "location": "query",
          "required": false,
          "description": "The board this discussion belongs to"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric discussion ID"
        },
        "body": {
          "location": "query",
          "required": false,
          "description": "The contents of the first post in this discussion"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time post was made in milliseconds since the epoch"
        },
        "last_post": {
          "location": "query",
          "required": false,
          "description": "The last post made in this discussion"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "The posting member"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Member name"
        },
        "reply_count": {
          "location": "query",
          "required": false,
          "description": "Number of replies this discussion has"
        },
        "started_by": {
          "location": "query",
          "required": false,
          "description": "The member that started this discussion"
        },
        "subject": {
          "location": "query",
          "required": false,
          "description": "The subject of the first post in this discussion"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time board was updated in milliseconds since the epoch"
        }
      },
      "summary": "Listings of group discussions",
      "uri": "/{urlname}/boards/{bid}/discussions/",
      "notes": "The :urlname path element may be any valid group urlname or domain name. The :bid path element may be any valid board ID for this group."
    },
    "DiscussionPosts": {
      "version": "3",
      "name": "DiscussionPosts",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "bid": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "did": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "body": {
          "location": "query",
          "required": false,
          "description": "content of the post"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time post was created in milliseconds since the epoch"
        },
        "discussion": {
          "location": "query",
          "required": false,
          "description": "The discussion this was posted in"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Member ID"
        },
        "in_reply_to": {
          "location": "query",
          "required": false,
          "description": "ID of the post this was in reply to"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "The member that started this discussion"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City, if provided, for the member"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country, if provided, for the member"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Member name"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Photo object for active member"
        },
        "thumb": {
          "location": "query",
          "required": false,
          "description": "Thumbnail photo url"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State if in the US"
        },
        "subject": {
          "location": "query",
          "required": false,
          "description": "subject of the post"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time post was updated in milliseconds since the epoch"
        }
      },
      "summary": "Listing Group discussion posts",
      "uri": "/{urlname}/boards/{bid}/discussions/{did}/",
      "notes": "The :urlname path element may be any valid group urlname or domain name. The :bid path element maybe any valid board ID for this group. The :did may be any valid discussion ID for this board"
    },
    "EventCommentsList": {
      "version": "3",
      "name": "EventCommentsList",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to append to the response. Currently only \"self\" is supported"
        },
        "comment": {
          "location": "query",
          "required": false,
          "description": "The comment the member left for the event"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the comment was posted in milliseconds since the epoch"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "in_reply_to": {
          "location": "query",
          "required": false,
          "description": "The id of the comment a reply was in relation to"
        },
        "like_count": {
          "location": "query",
          "required": false,
          "description": "The number of likes the comment has"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "The member that made the comment."
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of member"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "replies": {
          "location": "query",
          "required": false,
          "description": "A list of replies, with the same structure as a comment. This field may be absent in cases where there are no replies"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Context for the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "A list of actions the authenticated member may perform on the comment."
        },
        "liked": {
          "location": "query",
          "required": false,
          "description": "A boolean indicator of whether or not the authenticated member has liked the comment"
        },
        "notifications": {
          "location": "query",
          "required": false,
          "description": "Indicator of whether or not the authenticated member may               receive notifications about related comments. May be one of 'on' or 'off'"
        },
        "comment_error": {
          "location": "query",
          "required": false,
          "description": "Comment appeared to contain spam"
        },
        "event_error": {
          "location": "query",
          "required": false,
          "description": "Invalid event"
        },
        "in_reply_to_error": {
          "location": "query",
          "required": false,
          "description": "in_reply_to not a valid comment"
        },
        "post_error": {
          "location": "query",
          "required": false,
          "description": "Over daily limit of 20"
        }
      },
      "summary": "Lists the comments and replies posted in a given Meetup Event.To view the list of likes for a comment or replysee the likesendpoint",
      "uri": "/{urlname}/events/{event_id}/comments/#list",
      "notes": null
    },
    "Eventcommentandreply": {
      "version": "3",
      "name": "Eventcommentandreply",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "comment": {
          "location": "query",
          "required": false,
          "description": "The comment the member left for the event"
        },
        "in_reply_to": {
          "location": "query",
          "required": false,
          "description": "The id of the comment a reply was in relation to"
        },
        "notifications": {
          "location": "query",
          "required": false,
          "description": "Indicator of whether or not the authenticated member may               receive notifications about related comments. May be one of 'on' or 'off'"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the comment was posted in milliseconds since the epoch"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "like_count": {
          "location": "query",
          "required": false,
          "description": "The number of likes the comment has"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "The member that made the comment."
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of member"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "replies": {
          "location": "query",
          "required": false,
          "description": "A list of replies, with the same structure as a comment. This field may be absent in cases where there are no replies"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Context for the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "A list of actions the authenticated member may perform on the comment."
        },
        "liked": {
          "location": "query",
          "required": false,
          "description": "A boolean indicator of whether or not the authenticated member has liked the comment"
        },
        "comment_error": {
          "location": "query",
          "required": false,
          "description": "Comment appeared to contain spam"
        },
        "event_error": {
          "location": "query",
          "required": false,
          "description": "Invalid event"
        },
        "in_reply_to_error": {
          "location": "query",
          "required": false,
          "description": "in_reply_to not a valid comment"
        },
        "post_error": {
          "location": "query",
          "required": false,
          "description": "Over daily limit of 20"
        }
      },
      "summary": "Creates new comments and replies to existing comments within an Meetup event",
      "uri": "/{urlname}/events/{event_id}/comments/#create",
      "notes": null
    },
    "Eventcommentdelete": {
      "version": "3",
      "name": "Eventcommentdelete",
      "httpMethod": "DELETE",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "comment_id": {
          "location": "uri",
          "required": true,
          "description": null
        }
      },
      "summary": "Deletes comments posted in events",
      "uri": "/{urlname}/events/{event_id}/comments/{comment_id}/#delete",
      "notes": null
    },
    "EventCommentandReplyLikes": {
      "version": "3",
      "name": "EventCommentandReplyLikes",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "comment_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time of like, in milliseconds since the epoch"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member associated with the like"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of member"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time like was updated, in milliseconds since the epoch"
        }
      },
      "summary": "Returns lists of likes for an event comment or reply",
      "uri": "/{urlname}/events/{event_id}/comments/{comment_id}/likes/#list",
      "notes": null
    },
    "EventCommentLike": {
      "version": "3",
      "name": "EventCommentLike",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "comment_id": {
          "location": "uri",
          "required": true,
          "description": null
        }
      },
      "summary": "Like a given event comment",
      "uri": "/{urlname}/events/{event_id}/comments/{comment_id}/likes/#create",
      "notes": null
    },
    "EventCommentUnlike": {
      "version": "3",
      "name": "EventCommentUnlike",
      "httpMethod": "DELETE",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "comment_id": {
          "location": "uri",
          "required": true,
          "description": null
        }
      },
      "summary": "Unlike a given event comment",
      "uri": "/{urlname}/events/{event_id}/comments/{comment_id}/likes/#delete",
      "notes": null
    },
    "GroupEvents": {
      "version": "3",
      "name": "GroupEvents",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "desc": {
          "location": "query",
          "required": false,
          "description": "When true, sorts results in descending order. Defaults to false"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited list of optional field names to append to the response."
        },
        "has_ended": {
          "location": "query",
          "required": false,
          "description": "An optional boolean which returns events which have ended when true. When false, returns events which are ongoing or upcoming. Defaults to empty/none. If requested with no_earlier_than, no_later_than, and/or scroll, it returns the subset of events that would be returned when a request is made with those parameters, that also meets the criterion specified by has_ended. i.e. if scroll requests events that start in the future and has_ended is true, then returns an empty result set; if scroll requests events that start in the past and common.events.HasEnded is false, then returns events that started before now but have not yet ended."
        },
        "no_earlier_than": {
          "location": "query",
          "required": false,
          "description": "An optional timestamp that represents a lower time bound (inclusive) for the start time of events in the local time of the group. If provided, it must be a string in ISO 8601 format without a time zone specified, i.e. 2018-06-01T00:00:00.000. If provided, the API will not return events with a start time earlier than the time specified by this parameter. If both this parameter and scroll are present, such that scroll does not have a type of ctime and it requests events that start after the specified scroll time, then the API returns events after whichever of scroll and no_earlier_than comes later."
        },
        "no_later_than": {
          "location": "query",
          "required": false,
          "description": "An optional timestamp that represents an upper time bound (exclusive) for the start time of events in the local time of the group. If provided, it must be a string in ISO 8601 format without a time zone specified, i.e. 2018-06-01T00:00:00.000. If provided, the API will not return events with a start time later than or equal to the time specified by this parameter. If both this parameter and scroll are present, such that scroll does not have a type of ctime and it requests events before the specified scroll time, then the API returns events before whichever of scroll and no_later_than comes earlier."
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Number of results to return in a page. Must be an integer greater than or equal to 1. Defaults to 200"
        },
        "scroll": {
          "location": "query",
          "required": false,
          "description": "A string representing an alias for a point on a timeline."
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "\"cancelled\", \"upcoming\", \"past\", \"proposed\", \"suggested\", or \"draft\""
        },
        "attendance_count": {
          "location": "query",
          "required": false,
          "description": "Number of all members marked as attended, yes RSVPs that were not changed by attendance and their guests"
        },
        "attendance_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of members marked as attended and yes RSVPs that were not changed by attendance"
        },
        "attendee_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of attendance records of members marked as attended and yes RSVPs that were not changed by attendance. For upcoming events, this represents collection of yes RSVPs"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "An aggregate count of all comments and replies for a given event, returned when fields request parameter value includes 'comment_count'"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "description_images": {
          "location": "query",
          "required": false,
          "description": "A list of image urls included in the event description.  returned when \"fields\" request parameter value contains \"description_images, only supported for GET /event/:id currently\""
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "event_hosts": {
          "location": "query",
          "required": false,
          "description": "List of members hosting the event, returned when fields request parameter value includes 'event_hosts'"
        },
        "host_count": {
          "location": "query",
          "required": false,
          "description": "Number of times member hosted for group"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric venue id"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Host member's introduction"
        },
        "join_date": {
          "location": "query",
          "required": false,
          "description": "Group join date in milliseconds since epoch"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Venue name"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "featured": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of whether or not a given event is featured, returned when fields request parameter value includes 'featured'"
        },
        "featured_photo": {
          "location": "query",
          "required": false,
          "description": "A featured photo for this event, returned when the 'fields' request paramater includes 'featured_photo'"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Payment options for event ticketing, returned when the 'fields' request parameter value includes 'fee_options'"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Information about group hosting the event"
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Category group belongs to, returned when fields request parameter value includes 'group_category'"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Lists any questions requested when joining and required fields. Returned with \"fields\" request parameter value includes \"group_join_info\""
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo, returned when fields request parameter value includes 'group_key_photo'"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Membership dues information associated with hosting group, returned when \"fields\" request parameter value includes \"group_membership_dues\" and group has dues"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "The organizer-defined terms for refunds. If this is defined, you must provide the authenticated member a way to access this information before they can RSVP. They will need to agree to these terms before they RSVP"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one, returned when fields request parameter value inclues 'meta_category'"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "The number of past events belonging to the group, returned when \"fields\" includes \"group_past_event_count\""
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used to generate group duotone, returned when fields request parameter value includes 'group_photo_gradient'"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "pro_network": {
          "location": "query",
          "required": false,
          "description": "Information on group's Pro organization, returned when \"fields\" request parameter value includes \"group_pro_network\""
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "represents details particular to the authorized user, only present if requested and authenticated member is a member of the hosting group, returned when fields request parameter value includes 'self'"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially one or more of the following"
        },
        "profile": {
          "location": "query",
          "required": false,
          "description": "Profile of the authenticated member"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of venue where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Topics related to the group, returned when fields request parameter value includes 'group_topics'"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Event visibility: \"public\", \"public_limited\", or \"members\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public."
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "how_to_find_us": {
          "location": "query",
          "required": false,
          "description": "Additional information on how to find members at a venue when provided by an organizer, returned when fields request parameter value includes 'how_to_find_us'"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to event on meetup.com"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "manual_attendance_count": {
          "location": "query",
          "required": false,
          "description": "Manually entered total attendee headcount, if any exists"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event, returned when fields request parameter value includes 'photo_album'"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description without images. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_rules": {
          "location": "query",
          "required": false,
          "description": "Information about conditions that allow for member RSVPs, returned when fields request parameter value include 'rsvp_rules'"
        },
        "close_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that RSVPs will no longer be accepted, though organizers may close RSVPs earlier"
        },
        "closed": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not RSVPing was explicitly closed for the event."
        },
        "guest_limit": {
          "location": "query",
          "required": false,
          "description": "Number of guests members may include in their RSVP, 0 or more"
        },
        "open_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that members may begin to RSVP"
        },
        "days": {
          "location": "query",
          "required": false,
          "description": "if member_cancellation is present, it's relative to this many days before the event"
        },
        "notes": {
          "location": "query",
          "required": false,
          "description": "additional refund policy notes"
        },
        "policies": {
          "location": "query",
          "required": false,
          "description": "list of one or more of the following. 'no_refunds' if the organizer will not issue refunds', 'member_cancellation' if the organizer offers a refund for member cancellation, 'event_cancellation' if the organizer offers a refund if the event is canceled, 'event_rescheduled' if the organizer offers a refund when the event is rescheduled"
        },
        "waitlisting": {
          "location": "query",
          "required": false,
          "description": "Wait list handling when RSVP limit is reached. Value may be one of 'auto', 'manual' or 'off'"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when fields request parameter value includes 'rsvp_sample'"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's role in within the group, if any. This may be one of: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "rsvpable": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP or join the waitlist when the event is full. Returned when the \"fields\" request parameter value includes \"rsvpable\""
        },
        "rsvpable_after_join": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP after joining the hosting group. Returned when the \"fields\" request parameter includes \"rsvpable_after_join\" and the authenticated member is not a member of the group hosting this event"
        },
        "saved": {
          "location": "query",
          "required": false,
          "description": "Whether the authorized member has saved the event, returned when fields request parameter value includes 'saved'"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's payment status. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'"
        },
        "rsvp": {
          "location": "query",
          "required": false,
          "description": "Member's RSVP, if any"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "List of answers to event survey questions asked when the member RSVP'd in the order asked, only available to organizers and assistant organizers"
        },
        "guests": {
          "location": "query",
          "required": false,
          "description": "Number of guests the RSVP'd member will be bringing"
        },
        "response": {
          "location": "query",
          "required": false,
          "description": "May be \"yes\" or \"no\"."
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "day_of_week": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-7 (Monday-Sunday) for the day of week the recurrence occurs upon"
        },
        "interval": {
          "location": "query",
          "required": false,
          "description": "Integer number of weeks between each recurrence"
        },
        "week_of_month": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-5 representing the week number on which the event recurs. A value of 5 indicates the event recurs on the last week of every month"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "days_of_week": {
          "location": "query",
          "required": false,
          "description": "List of integers 1-7 (Monday-Sunday) of days of week recurrence occurs upon"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "A shortened link for the event on meetup.com, returned when fields request parameter value includes \"short_link\""
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the event, in simple HTML source format. If this event's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\"' request parameter contains \"simple_html_description\""
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "List of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\"' request parameter contains \"answers\""
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "venue_visibility": {
          "location": "query",
          "required": false,
          "description": "Represents who can see the venue with a potential value of \"members\" or \"public\", returned when fields request parameter value includes \"venue_visibility\" and the authenticated member is a member of the group hosting the event"
        },
        "web_actions": {
          "location": "query",
          "required": false,
          "description": "Set of \"Invite\" and google/yahoo/ical/outlook \"Add to calendar\" web actions"
        },
        "why": {
          "location": "query",
          "required": false,
          "description": "We should do this because..."
        }
      },
      "summary": "Gets a listing of all Meetup Events hosted by a target group, in ascending order by default",
      "uri": "/{urlname}/events/#list",
      "notes": null
    },
    "CreateEvent": {
      "version": "3",
      "name": "CreateEvent",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "announce": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not Meetup should announce this event to group members. This defaults to false."
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "event_hosts": {
          "location": "query",
          "required": false,
          "description": "List of members hosting the event, returned when fields request parameter value includes 'event_hosts'"
        },
        "featured_photo_id": {
          "location": "query",
          "required": false,
          "description": "Positive integer representing a numeric identifier for a photo, which must be one associated with this group. When undefined or 0, no photo is set."
        },
        "fee.accepts": {
          "location": "query",
          "required": false,
          "description": "String representing the payment method for the event fee if a fee is charged for the event. May be one of: stripe,wepay,paypal,none,cash"
        },
        "fee.amount": {
          "location": "query",
          "required": false,
          "description": "Positive decimal representing the amount of the event fee if a fee is charged for the event. If the group is in the United States, this may not exceed 4999 (for any currency). Otherwise, this may not exceed 1000000 (for any currency). If the event fee is charged with WePay, this must be at least 1.0 USD"
        },
        "fee.currency": {
          "location": "query",
          "required": false,
          "description": "String representing the currency for the event fee if a fee is charged for the event. May be one of: AUD,BRL,CAD,CHF,EUR,GBP,INR,JPY,KRW,PLN,RUB,THB,TRY,USD"
        },
        "fee.refund_policy": {
          "location": "query",
          "required": false,
          "description": "String setting the refund policy if the event has a fee. May not be longer than 250 characters."
        },
        "guest_limit": {
          "location": "query",
          "required": false,
          "description": "Number of guests members may include in their RSVP, 0 or more"
        },
        "how_to_find_us": {
          "location": "query",
          "required": false,
          "description": "Additional information on how to find members at a venue when provided by an organizer, returned when fields request parameter value includes 'how_to_find_us'"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Venue name"
        },
        "publish_status": {
          "location": "query",
          "required": false,
          "description": "String indicating whether an event will be published to the group or as a draft visible only to the leadership team. May be one of \"draft\" or \"published\". This defaults to \"published\"."
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "rsvp_close_time": {
          "location": "query",
          "required": false,
          "description": "Positive long representing the time before which members will be allowed to RSVP to the event in milliseconds since the epoch. This can only be set if there is a start time for the event. This defaults to no RSVP close time restriction."
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_time": {
          "location": "query",
          "required": false,
          "description": "Positive long representing the time after which members will be allowed to RSVP to the event in milliseconds since the epoch. This can only be set if there is a start time for the event. This defaults to no RSVP open time restriction."
        },
        "self_rsvp": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether the authenticated member will be RSVP'd to the event upon creation. This defaults to true."
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "venue_id": {
          "location": "query",
          "required": false,
          "description": "Positive integer representing a numeric identifier for a venue."
        },
        "venue_visibility": {
          "location": "query",
          "required": false,
          "description": "Represents who can see the venue with a potential value of \"members\" or \"public\", returned when fields request parameter value includes \"venue_visibility\" and the authenticated member is a member of the group hosting the event"
        },
        "attendance_count": {
          "location": "query",
          "required": false,
          "description": "Number of all members marked as attended, yes RSVPs that were not changed by attendance and their guests"
        },
        "attendance_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of members marked as attended and yes RSVPs that were not changed by attendance"
        },
        "attendee_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of attendance records of members marked as attended and yes RSVPs that were not changed by attendance. For upcoming events, this represents collection of yes RSVPs"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "An aggregate count of all comments and replies for a given event, returned when fields request parameter value includes 'comment_count'"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "description_images": {
          "location": "query",
          "required": false,
          "description": "A list of image urls included in the event description.  returned when \"fields\" request parameter value contains \"description_images, only supported for GET /event/:id currently\""
        },
        "host_count": {
          "location": "query",
          "required": false,
          "description": "Number of times member hosted for group"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric venue id"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Host member's introduction"
        },
        "join_date": {
          "location": "query",
          "required": false,
          "description": "Group join date in milliseconds since epoch"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "featured": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of whether or not a given event is featured, returned when fields request parameter value includes 'featured'"
        },
        "featured_photo": {
          "location": "query",
          "required": false,
          "description": "A featured photo for this event, returned when the 'fields' request paramater includes 'featured_photo'"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Payment options for event ticketing, returned when the 'fields' request parameter value includes 'fee_options'"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Information about group hosting the event"
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Category group belongs to, returned when fields request parameter value includes 'group_category'"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Lists any questions requested when joining and required fields. Returned with \"fields\" request parameter value includes \"group_join_info\""
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo, returned when fields request parameter value includes 'group_key_photo'"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Membership dues information associated with hosting group, returned when \"fields\" request parameter value includes \"group_membership_dues\" and group has dues"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "The organizer-defined terms for refunds. If this is defined, you must provide the authenticated member a way to access this information before they can RSVP. They will need to agree to these terms before they RSVP"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one, returned when fields request parameter value inclues 'meta_category'"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "The number of past events belonging to the group, returned when \"fields\" includes \"group_past_event_count\""
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used to generate group duotone, returned when fields request parameter value includes 'group_photo_gradient'"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "pro_network": {
          "location": "query",
          "required": false,
          "description": "Information on group's Pro organization, returned when \"fields\" request parameter value includes \"group_pro_network\""
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "represents details particular to the authorized user, only present if requested and authenticated member is a member of the hosting group, returned when fields request parameter value includes 'self'"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially one or more of the following"
        },
        "profile": {
          "location": "query",
          "required": false,
          "description": "Profile of the authenticated member"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "\"cancelled\", \"upcoming\", \"past\", \"proposed\", \"suggested\", or \"draft\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of venue where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Topics related to the group, returned when fields request parameter value includes 'group_topics'"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Event visibility: \"public\", \"public_limited\", or \"members\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public."
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to event on meetup.com"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "manual_attendance_count": {
          "location": "query",
          "required": false,
          "description": "Manually entered total attendee headcount, if any exists"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event, returned when fields request parameter value includes 'photo_album'"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description without images. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_rules": {
          "location": "query",
          "required": false,
          "description": "Information about conditions that allow for member RSVPs, returned when fields request parameter value include 'rsvp_rules'"
        },
        "close_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that RSVPs will no longer be accepted, though organizers may close RSVPs earlier"
        },
        "closed": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not RSVPing was explicitly closed for the event."
        },
        "open_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that members may begin to RSVP"
        },
        "days": {
          "location": "query",
          "required": false,
          "description": "if member_cancellation is present, it's relative to this many days before the event"
        },
        "notes": {
          "location": "query",
          "required": false,
          "description": "additional refund policy notes"
        },
        "policies": {
          "location": "query",
          "required": false,
          "description": "list of one or more of the following. 'no_refunds' if the organizer will not issue refunds', 'member_cancellation' if the organizer offers a refund for member cancellation, 'event_cancellation' if the organizer offers a refund if the event is canceled, 'event_rescheduled' if the organizer offers a refund when the event is rescheduled"
        },
        "waitlisting": {
          "location": "query",
          "required": false,
          "description": "Wait list handling when RSVP limit is reached. Value may be one of 'auto', 'manual' or 'off'"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when fields request parameter value includes 'rsvp_sample'"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's role in within the group, if any. This may be one of: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "rsvpable": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP or join the waitlist when the event is full. Returned when the \"fields\" request parameter value includes \"rsvpable\""
        },
        "rsvpable_after_join": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP after joining the hosting group. Returned when the \"fields\" request parameter includes \"rsvpable_after_join\" and the authenticated member is not a member of the group hosting this event"
        },
        "saved": {
          "location": "query",
          "required": false,
          "description": "Whether the authorized member has saved the event, returned when fields request parameter value includes 'saved'"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's payment status. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'"
        },
        "rsvp": {
          "location": "query",
          "required": false,
          "description": "Member's RSVP, if any"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "List of answers to event survey questions asked when the member RSVP'd in the order asked, only available to organizers and assistant organizers"
        },
        "guests": {
          "location": "query",
          "required": false,
          "description": "Number of guests the RSVP'd member will be bringing"
        },
        "response": {
          "location": "query",
          "required": false,
          "description": "May be \"yes\" or \"no\"."
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "day_of_week": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-7 (Monday-Sunday) for the day of week the recurrence occurs upon"
        },
        "interval": {
          "location": "query",
          "required": false,
          "description": "Integer number of weeks between each recurrence"
        },
        "week_of_month": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-5 representing the week number on which the event recurs. A value of 5 indicates the event recurs on the last week of every month"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "days_of_week": {
          "location": "query",
          "required": false,
          "description": "List of integers 1-7 (Monday-Sunday) of days of week recurrence occurs upon"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "A shortened link for the event on meetup.com, returned when fields request parameter value includes \"short_link\""
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the event, in simple HTML source format. If this event's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\"' request parameter contains \"simple_html_description\""
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "List of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\"' request parameter contains \"answers\""
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "web_actions": {
          "location": "query",
          "required": false,
          "description": "Set of \"Invite\" and google/yahoo/ical/outlook \"Add to calendar\" web actions"
        },
        "why": {
          "location": "query",
          "required": false,
          "description": "We should do this because..."
        },
        "announce_error": {
          "location": "query",
          "required": false,
          "description": "Error announcing event"
        },
        "description_error": {
          "location": "query",
          "required": false,
          "description": "Sorry, your Meetup description is too long"
        },
        "duration_error": {
          "location": "query",
          "required": false,
          "description": "This event duration is invalid"
        },
        "event_error": {
          "location": "query",
          "required": false,
          "description": "The id provided does not correspond to an event that can be edited"
        },
        "event_hosts_error": {
          "location": "query",
          "required": false,
          "description": "One or more of the members provided are not active members of this group"
        },
        "featured_photo_id_error": {
          "location": "query",
          "required": false,
          "description": "Something is wrong with the featured photo provided"
        },
        "fee.amount_error": {
          "location": "query",
          "required": false,
          "description": "If the group is in the United States, the fee amount may not exceed 4999. Otherwise, the amount may not exceed 1000000"
        },
        "fee.refund_policy_error": {
          "location": "query",
          "required": false,
          "description": "The fee refund policy may not exceed 250"
        },
        "guest_limit_error": {
          "location": "query",
          "required": false,
          "description": "The guest limit is invalid"
        },
        "how_to_find_us_error": {
          "location": "query",
          "required": false,
          "description": "Your \"How to find us\" description is too long"
        },
        "lat_error": {
          "location": "query",
          "required": false,
          "description": "Your location is invalid"
        },
        "local_date_error": {
          "location": "query",
          "required": false,
          "description": "If specifying a local date, your Meetup must also specify a local time"
        },
        "local_time_error": {
          "location": "query",
          "required": false,
          "description": "If specifying a local time, your Meetup must also specify a local date"
        },
        "name_error": {
          "location": "query",
          "required": false,
          "description": "A title is required to post your Meetup"
        },
        "publish_status_error": {
          "location": "query",
          "required": false,
          "description": "You cannot publish a draft meetup with a start time in the past"
        },
        "question_error": {
          "location": "query",
          "required": false,
          "description": "Something is not right with the RSVP question field"
        },
        "rsvp_close_time_error": {
          "location": "query",
          "required": false,
          "description": "Your Meetup needs to have a start time before you can set an RSVP close time"
        },
        "rsvp_limit_error": {
          "location": "query",
          "required": false,
          "description": "The RSVP limit is invalid"
        },
        "rsvp_open_time_error": {
          "location": "query",
          "required": false,
          "description": "Please make sure your RSVPs are open before they close"
        },
        "series.apply_to_error": {
          "location": "query",
          "required": false,
          "description": "A parameter was specified that is unsupported when editing a series"
        },
        "series.weekly.days_of_week_error": {
          "location": "query",
          "required": false,
          "description": "This value must be one or more numbers between 1 and 7 separated by commas - representative of Monday through Sunday"
        },
        "series_error": {
          "location": "query",
          "required": false,
          "description": "Something is wrong with the series"
        },
        "time_error": {
          "location": "query",
          "required": false,
          "description": "There is a problem with the Meetup start time"
        },
        "venue_id_error": {
          "location": "query",
          "required": false,
          "description": "Your location does not exist or can't be found"
        },
        "desc": {
          "location": "query",
          "required": false,
          "description": "When true, sorts results in descending order. Defaults to false"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited list of optional field names to append to the response."
        },
        "has_ended": {
          "location": "query",
          "required": false,
          "description": "An optional boolean which returns events which have ended when true. When false, returns events which are ongoing or upcoming. Defaults to empty/none. If requested with no_earlier_than, no_later_than, and/or scroll, it returns the subset of events that would be returned when a request is made with those parameters, that also meets the criterion specified by has_ended. i.e. if scroll requests events that start in the future and has_ended is true, then returns an empty result set; if scroll requests events that start in the past and common.events.HasEnded is false, then returns events that started before now but have not yet ended."
        },
        "no_earlier_than": {
          "location": "query",
          "required": false,
          "description": "An optional timestamp that represents a lower time bound (inclusive) for the start time of events in the local time of the group. If provided, it must be a string in ISO 8601 format without a time zone specified, i.e. 2018-06-01T00:00:00.000. If provided, the API will not return events with a start time earlier than the time specified by this parameter. If both this parameter and scroll are present, such that scroll does not have a type of ctime and it requests events that start after the specified scroll time, then the API returns events after whichever of scroll and no_earlier_than comes later."
        },
        "no_later_than": {
          "location": "query",
          "required": false,
          "description": "An optional timestamp that represents an upper time bound (exclusive) for the start time of events in the local time of the group. If provided, it must be a string in ISO 8601 format without a time zone specified, i.e. 2018-06-01T00:00:00.000. If provided, the API will not return events with a start time later than or equal to the time specified by this parameter. If both this parameter and scroll are present, such that scroll does not have a type of ctime and it requests events before the specified scroll time, then the API returns events before whichever of scroll and no_later_than comes earlier."
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Number of results to return in a page. Must be an integer greater than or equal to 1. Defaults to 200"
        },
        "scroll": {
          "location": "query",
          "required": false,
          "description": "A string representing an alias for a point on a timeline."
        }
      },
      "summary": "Creates a new Meetup group event",
      "uri": "/{urlname}/events/#create",
      "notes": null
    },
    "CloseRsvps": {
      "version": "3",
      "name": "CloseRsvps",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "closed_error": {
          "location": "query",
          "required": false,
          "description": "If you are closing rsvps, then you cannot set an rsvp deadline"
        }
      },
      "summary": "Closes rsvps for an event",
      "uri": "/{urlname}/events/{event_id}/rsvps/close/",
      "notes": "Valid path parameters for :urlname and :event_id are required. Only event hosts and members of the lead team may close rsvps. OAuth authenticated applications should request the event_management OAuth scope."
    },
    "OpenRsvps": {
      "version": "3",
      "name": "OpenRsvps",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        }
      },
      "summary": "Opens rsvps for an event",
      "uri": "/{urlname}/events/{event_id}/rsvps/open/",
      "notes": "Valid path parameters for :urlname and :event_id are required. Only event hosts and members of the lead team may open rsvps. OAuth authenticated applications should request the event_management OAuth scope."
    },
    "GetEvent": {
      "version": "3",
      "name": "GetEvent",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric venue id"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to append to the response"
        },
        "attendance_count": {
          "location": "query",
          "required": false,
          "description": "Number of all members marked as attended, yes RSVPs that were not changed by attendance and their guests"
        },
        "attendance_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of members marked as attended and yes RSVPs that were not changed by attendance"
        },
        "attendee_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of attendance records of members marked as attended and yes RSVPs that were not changed by attendance. For upcoming events, this represents collection of yes RSVPs"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "An aggregate count of all comments and replies for a given event, returned when fields request parameter value includes 'comment_count'"
        },
        "comment_sample": {
          "location": "query",
          "required": false,
          "description": "A sampling of recently past event comments.                Returned when the 'fields' request parameter                value contains 'comment_sample' and the group's                'visibility' setting permits it"
        },
        "comment": {
          "location": "query",
          "required": false,
          "description": "The comment the member left for the event"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "in_reply_to": {
          "location": "query",
          "required": false,
          "description": "The id of the comment a reply was in relation to"
        },
        "like_count": {
          "location": "query",
          "required": false,
          "description": "The number of likes the comment has"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Venue name"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's role in within the group, if any. This may be one of: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "replies": {
          "location": "query",
          "required": false,
          "description": "A list of replies, with the same structure as a comment. This field may be absent in cases where there are no replies"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "represents details particular to the authorized user, only present if requested and authenticated member is a member of the hosting group, returned when fields request parameter value includes 'self'"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially one or more of the following"
        },
        "liked": {
          "location": "query",
          "required": false,
          "description": "A boolean indicator of whether or not the authenticated member has liked the comment"
        },
        "notifications": {
          "location": "query",
          "required": false,
          "description": "Indicator of whether or not the authenticated member may               receive notifications about related comments. May be one of 'on' or 'off'"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "description_images": {
          "location": "query",
          "required": false,
          "description": "A list of image urls included in the event description.  returned when \"fields\" request parameter value contains \"description_images, only supported for GET /event/:id currently\""
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "event_hosts": {
          "location": "query",
          "required": false,
          "description": "List of members hosting the event, returned when fields request parameter value includes 'event_hosts'"
        },
        "host_count": {
          "location": "query",
          "required": false,
          "description": "Number of times member hosted for group"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Host member's introduction"
        },
        "join_date": {
          "location": "query",
          "required": false,
          "description": "Group join date in milliseconds since epoch"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "featured": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of whether or not a given event is featured, returned when fields request parameter value includes 'featured'"
        },
        "featured_photo": {
          "location": "query",
          "required": false,
          "description": "A featured photo for this event, returned when the 'fields' request paramater includes 'featured_photo'"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Payment options for event ticketing, returned when the 'fields' request parameter value includes 'fee_options'"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Information about group hosting the event"
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Category group belongs to, returned when fields request parameter value includes 'group_category'"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Lists any questions requested when joining and required fields. Returned with \"fields\" request parameter value includes \"group_join_info\""
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo, returned when fields request parameter value includes 'group_key_photo'"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Membership dues information associated with hosting group, returned when \"fields\" request parameter value includes \"group_membership_dues\" and group has dues"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "The organizer-defined terms for refunds. If this is defined, you must provide the authenticated member a way to access this information before they can RSVP. They will need to agree to these terms before they RSVP"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one, returned when fields request parameter value inclues 'meta_category'"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "The number of past events belonging to the group, returned when \"fields\" includes \"group_past_event_count\""
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used to generate group duotone, returned when fields request parameter value includes 'group_photo_gradient'"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "pro_network": {
          "location": "query",
          "required": false,
          "description": "Information on group's Pro organization, returned when \"fields\" request parameter value includes \"group_pro_network\""
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "profile": {
          "location": "query",
          "required": false,
          "description": "Profile of the authenticated member"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "\"cancelled\", \"upcoming\", \"past\", \"proposed\", \"suggested\", or \"draft\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of venue where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Topics related to the group, returned when fields request parameter value includes 'group_topics'"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Event visibility: \"public\", \"public_limited\", or \"members\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public."
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "how_to_find_us": {
          "location": "query",
          "required": false,
          "description": "Additional information on how to find members at a venue when provided by an organizer, returned when fields request parameter value includes 'how_to_find_us'"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to event on meetup.com"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "manual_attendance_count": {
          "location": "query",
          "required": false,
          "description": "Manually entered total attendee headcount, if any exists"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event, returned when fields request parameter value includes 'photo_album'"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description without images. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_rules": {
          "location": "query",
          "required": false,
          "description": "Information about conditions that allow for member RSVPs, returned when fields request parameter value include 'rsvp_rules'"
        },
        "close_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that RSVPs will no longer be accepted, though organizers may close RSVPs earlier"
        },
        "closed": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not RSVPing was explicitly closed for the event."
        },
        "guest_limit": {
          "location": "query",
          "required": false,
          "description": "Number of guests members may include in their RSVP, 0 or more"
        },
        "open_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that members may begin to RSVP"
        },
        "days": {
          "location": "query",
          "required": false,
          "description": "if member_cancellation is present, it's relative to this many days before the event"
        },
        "notes": {
          "location": "query",
          "required": false,
          "description": "additional refund policy notes"
        },
        "policies": {
          "location": "query",
          "required": false,
          "description": "list of one or more of the following. 'no_refunds' if the organizer will not issue refunds', 'member_cancellation' if the organizer offers a refund for member cancellation, 'event_cancellation' if the organizer offers a refund if the event is canceled, 'event_rescheduled' if the organizer offers a refund when the event is rescheduled"
        },
        "waitlisting": {
          "location": "query",
          "required": false,
          "description": "Wait list handling when RSVP limit is reached. Value may be one of 'auto', 'manual' or 'off'"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when fields request parameter value includes 'rsvp_sample'"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "rsvpable": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP or join the waitlist when the event is full. Returned when the \"fields\" request parameter value includes \"rsvpable\""
        },
        "rsvpable_after_join": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP after joining the hosting group. Returned when the \"fields\" request parameter includes \"rsvpable_after_join\" and the authenticated member is not a member of the group hosting this event"
        },
        "saved": {
          "location": "query",
          "required": false,
          "description": "Whether the authorized member has saved the event, returned when fields request parameter value includes 'saved'"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's payment status. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'"
        },
        "rsvp": {
          "location": "query",
          "required": false,
          "description": "Member's RSVP, if any"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "List of answers to event survey questions asked when the member RSVP'd in the order asked, only available to organizers and assistant organizers"
        },
        "guests": {
          "location": "query",
          "required": false,
          "description": "Number of guests the RSVP'd member will be bringing"
        },
        "response": {
          "location": "query",
          "required": false,
          "description": "May be \"yes\" or \"no\"."
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "day_of_week": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-7 (Monday-Sunday) for the day of week the recurrence occurs upon"
        },
        "interval": {
          "location": "query",
          "required": false,
          "description": "Integer number of weeks between each recurrence"
        },
        "week_of_month": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-5 representing the week number on which the event recurs. A value of 5 indicates the event recurs on the last week of every month"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "days_of_week": {
          "location": "query",
          "required": false,
          "description": "List of integers 1-7 (Monday-Sunday) of days of week recurrence occurs upon"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "A shortened link for the event on meetup.com, returned when fields request parameter value includes \"short_link\""
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the event, in simple HTML source format. If this event's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\"' request parameter contains \"simple_html_description\""
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "List of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\"' request parameter contains \"answers\""
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "venue_visibility": {
          "location": "query",
          "required": false,
          "description": "Represents who can see the venue with a potential value of \"members\" or \"public\", returned when fields request parameter value includes \"venue_visibility\" and the authenticated member is a member of the group hosting the event"
        },
        "web_actions": {
          "location": "query",
          "required": false,
          "description": "Set of \"Invite\" and google/yahoo/ical/outlook \"Add to calendar\" web actions"
        },
        "why": {
          "location": "query",
          "required": false,
          "description": "We should do this because..."
        }
      },
      "summary": "Fetches a Meetup Event by group urlname and event_id",
      "uri": "/{urlname}/events/{id}/#get",
      "notes": null
    },
    "UpdateEvent": {
      "version": "3",
      "name": "UpdateEvent",
      "httpMethod": "PATCH",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric venue id"
        },
        "announce": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not Meetup should announce this event to group members. This defaults to false."
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "event_hosts": {
          "location": "query",
          "required": false,
          "description": "List of members hosting the event, returned when fields request parameter value includes 'event_hosts'"
        },
        "featured_photo_id": {
          "location": "query",
          "required": false,
          "description": "Positive integer representing a numeric identifier for a photo, which must be one associated with this group. Use 0 to remove the existing photo."
        },
        "guest_limit": {
          "location": "query",
          "required": false,
          "description": "Number of guests members may include in their RSVP, 0 or more"
        },
        "how_to_find_us": {
          "location": "query",
          "required": false,
          "description": "Additional information on how to find members at a venue when provided by an organizer, returned when fields request parameter value includes 'how_to_find_us'"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Venue name"
        },
        "publish_status": {
          "location": "query",
          "required": false,
          "description": "String indicating whether an event will be published to the group or as a draft visible only to the leadership team. If editing a draft event, \"published\" will publish the event. That is the only valid use of this field when editing an event."
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "rsvp_close_time": {
          "location": "query",
          "required": false,
          "description": "Positive long representing the time before which members will be allowed to RSVP to the event in milliseconds since the epoch. Use 0 to remove the existing RSVP close time restriction. This can only be set if there is a start time for the event."
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_time": {
          "location": "query",
          "required": false,
          "description": "Positive long representing the time after which members will be allowed to RSVP to the event in milliseconds since the epoch. Use 0 to remove the existing RSVP open time restriction. This can only be set if there is a start time for the event."
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "venue_id": {
          "location": "query",
          "required": false,
          "description": "Positive integer representing a numeric identifier for a venue. Use 0 to remove existing venue. This will override any latitude/longitude values that have previously been set."
        },
        "venue_visibility": {
          "location": "query",
          "required": false,
          "description": "Represents who can see the venue with a potential value of \"members\" or \"public\", returned when fields request parameter value includes \"venue_visibility\" and the authenticated member is a member of the group hosting the event"
        },
        "attendance_count": {
          "location": "query",
          "required": false,
          "description": "Number of all members marked as attended, yes RSVPs that were not changed by attendance and their guests"
        },
        "attendance_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of members marked as attended and yes RSVPs that were not changed by attendance"
        },
        "attendee_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of attendance records of members marked as attended and yes RSVPs that were not changed by attendance. For upcoming events, this represents collection of yes RSVPs"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "An aggregate count of all comments and replies for a given event, returned when fields request parameter value includes 'comment_count'"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "description_images": {
          "location": "query",
          "required": false,
          "description": "A list of image urls included in the event description.  returned when \"fields\" request parameter value contains \"description_images, only supported for GET /event/:id currently\""
        },
        "host_count": {
          "location": "query",
          "required": false,
          "description": "Number of times member hosted for group"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Host member's introduction"
        },
        "join_date": {
          "location": "query",
          "required": false,
          "description": "Group join date in milliseconds since epoch"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "featured": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of whether or not a given event is featured, returned when fields request parameter value includes 'featured'"
        },
        "featured_photo": {
          "location": "query",
          "required": false,
          "description": "A featured photo for this event, returned when the 'fields' request paramater includes 'featured_photo'"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Payment options for event ticketing, returned when the 'fields' request parameter value includes 'fee_options'"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Information about group hosting the event"
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Category group belongs to, returned when fields request parameter value includes 'group_category'"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Lists any questions requested when joining and required fields. Returned with \"fields\" request parameter value includes \"group_join_info\""
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo, returned when fields request parameter value includes 'group_key_photo'"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Membership dues information associated with hosting group, returned when \"fields\" request parameter value includes \"group_membership_dues\" and group has dues"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "The organizer-defined terms for refunds. If this is defined, you must provide the authenticated member a way to access this information before they can RSVP. They will need to agree to these terms before they RSVP"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one, returned when fields request parameter value inclues 'meta_category'"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "The number of past events belonging to the group, returned when \"fields\" includes \"group_past_event_count\""
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used to generate group duotone, returned when fields request parameter value includes 'group_photo_gradient'"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "pro_network": {
          "location": "query",
          "required": false,
          "description": "Information on group's Pro organization, returned when \"fields\" request parameter value includes \"group_pro_network\""
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "represents details particular to the authorized user, only present if requested and authenticated member is a member of the hosting group, returned when fields request parameter value includes 'self'"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially one or more of the following"
        },
        "profile": {
          "location": "query",
          "required": false,
          "description": "Profile of the authenticated member"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "\"cancelled\", \"upcoming\", \"past\", \"proposed\", \"suggested\", or \"draft\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of venue where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Topics related to the group, returned when fields request parameter value includes 'group_topics'"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Event visibility: \"public\", \"public_limited\", or \"members\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public."
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to event on meetup.com"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "manual_attendance_count": {
          "location": "query",
          "required": false,
          "description": "Manually entered total attendee headcount, if any exists"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event, returned when fields request parameter value includes 'photo_album'"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description without images. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_rules": {
          "location": "query",
          "required": false,
          "description": "Information about conditions that allow for member RSVPs, returned when fields request parameter value include 'rsvp_rules'"
        },
        "close_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that RSVPs will no longer be accepted, though organizers may close RSVPs earlier"
        },
        "closed": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not RSVPing was explicitly closed for the event."
        },
        "open_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that members may begin to RSVP"
        },
        "days": {
          "location": "query",
          "required": false,
          "description": "if member_cancellation is present, it's relative to this many days before the event"
        },
        "notes": {
          "location": "query",
          "required": false,
          "description": "additional refund policy notes"
        },
        "policies": {
          "location": "query",
          "required": false,
          "description": "list of one or more of the following. 'no_refunds' if the organizer will not issue refunds', 'member_cancellation' if the organizer offers a refund for member cancellation, 'event_cancellation' if the organizer offers a refund if the event is canceled, 'event_rescheduled' if the organizer offers a refund when the event is rescheduled"
        },
        "waitlisting": {
          "location": "query",
          "required": false,
          "description": "Wait list handling when RSVP limit is reached. Value may be one of 'auto', 'manual' or 'off'"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when fields request parameter value includes 'rsvp_sample'"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's role in within the group, if any. This may be one of: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "rsvpable": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP or join the waitlist when the event is full. Returned when the \"fields\" request parameter value includes \"rsvpable\""
        },
        "rsvpable_after_join": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP after joining the hosting group. Returned when the \"fields\" request parameter includes \"rsvpable_after_join\" and the authenticated member is not a member of the group hosting this event"
        },
        "saved": {
          "location": "query",
          "required": false,
          "description": "Whether the authorized member has saved the event, returned when fields request parameter value includes 'saved'"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's payment status. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'"
        },
        "rsvp": {
          "location": "query",
          "required": false,
          "description": "Member's RSVP, if any"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "List of answers to event survey questions asked when the member RSVP'd in the order asked, only available to organizers and assistant organizers"
        },
        "guests": {
          "location": "query",
          "required": false,
          "description": "Number of guests the RSVP'd member will be bringing"
        },
        "response": {
          "location": "query",
          "required": false,
          "description": "May be \"yes\" or \"no\"."
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "day_of_week": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-7 (Monday-Sunday) for the day of week the recurrence occurs upon"
        },
        "interval": {
          "location": "query",
          "required": false,
          "description": "Integer number of weeks between each recurrence"
        },
        "week_of_month": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-5 representing the week number on which the event recurs. A value of 5 indicates the event recurs on the last week of every month"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "days_of_week": {
          "location": "query",
          "required": false,
          "description": "List of integers 1-7 (Monday-Sunday) of days of week recurrence occurs upon"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "A shortened link for the event on meetup.com, returned when fields request parameter value includes \"short_link\""
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the event, in simple HTML source format. If this event's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\"' request parameter contains \"simple_html_description\""
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "List of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\"' request parameter contains \"answers\""
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "web_actions": {
          "location": "query",
          "required": false,
          "description": "Set of \"Invite\" and google/yahoo/ical/outlook \"Add to calendar\" web actions"
        },
        "why": {
          "location": "query",
          "required": false,
          "description": "We should do this because..."
        },
        "announce_error": {
          "location": "query",
          "required": false,
          "description": "Error announcing event"
        },
        "description_error": {
          "location": "query",
          "required": false,
          "description": "Sorry, your Meetup description is too long"
        },
        "duration_error": {
          "location": "query",
          "required": false,
          "description": "This event duration is invalid"
        },
        "event_error": {
          "location": "query",
          "required": false,
          "description": "The id provided does not correspond to an event that can be edited"
        },
        "event_hosts_error": {
          "location": "query",
          "required": false,
          "description": "One or more of the members provided are not active members of this group"
        },
        "featured_photo_id_error": {
          "location": "query",
          "required": false,
          "description": "Something is wrong with the featured photo provided"
        },
        "fee.amount_error": {
          "location": "query",
          "required": false,
          "description": "If the group is in the United States, the fee amount may not exceed 4999. Otherwise, the amount may not exceed 1000000"
        },
        "fee.refund_policy_error": {
          "location": "query",
          "required": false,
          "description": "The fee refund policy may not exceed 250"
        },
        "guest_limit_error": {
          "location": "query",
          "required": false,
          "description": "The guest limit is invalid"
        },
        "how_to_find_us_error": {
          "location": "query",
          "required": false,
          "description": "Your \"How to find us\" description is too long"
        },
        "lat_error": {
          "location": "query",
          "required": false,
          "description": "Your location is invalid"
        },
        "local_date_error": {
          "location": "query",
          "required": false,
          "description": "If specifying a local date, your Meetup must also specify a local time"
        },
        "local_time_error": {
          "location": "query",
          "required": false,
          "description": "If specifying a local time, your Meetup must also specify a local date"
        },
        "name_error": {
          "location": "query",
          "required": false,
          "description": "A title is required to post your Meetup"
        },
        "publish_status_error": {
          "location": "query",
          "required": false,
          "description": "You cannot publish a draft meetup with a start time in the past"
        },
        "question_error": {
          "location": "query",
          "required": false,
          "description": "Something is not right with the RSVP question field"
        },
        "rsvp_close_time_error": {
          "location": "query",
          "required": false,
          "description": "Your Meetup needs to have a start time before you can set an RSVP close time"
        },
        "rsvp_limit_error": {
          "location": "query",
          "required": false,
          "description": "The RSVP limit is invalid"
        },
        "rsvp_open_time_error": {
          "location": "query",
          "required": false,
          "description": "Please make sure your RSVPs are open before they close"
        },
        "series.apply_to_error": {
          "location": "query",
          "required": false,
          "description": "A parameter was specified that is unsupported when editing a series"
        },
        "series.weekly.days_of_week_error": {
          "location": "query",
          "required": false,
          "description": "This value must be one or more numbers between 1 and 7 separated by commas - representative of Monday through Sunday"
        },
        "series_error": {
          "location": "query",
          "required": false,
          "description": "Something is wrong with the series"
        },
        "time_error": {
          "location": "query",
          "required": false,
          "description": "There is a problem with the Meetup start time"
        },
        "venue_id_error": {
          "location": "query",
          "required": false,
          "description": "Your location does not exist or can't be found"
        },
        "remove_from_calendar": {
          "location": "query",
          "required": false,
          "description": "Optional boolean parameter that, when set to true, fully deletes the event. If set to false, this operation cancels the event instead of completely removing it from the group's calendar. This defaults to true when not set explicitly."
        },
        "update_series": {
          "location": "query",
          "required": false,
          "description": "Optional boolean parameter that, when set to true, will update all future recurrences of this event if this event belongs to an event series. Requesting this for an event that doesn't belong to an active series will result in an error. You can detect an event's association with a series by sending fields=series when requesting event data. This defaults to false, when not set explicitly"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to append to the response"
        },
        "comment_sample": {
          "location": "query",
          "required": false,
          "description": "A sampling of recently past event comments.                Returned when the 'fields' request parameter                value contains 'comment_sample' and the group's                'visibility' setting permits it"
        },
        "comment": {
          "location": "query",
          "required": false,
          "description": "The comment the member left for the event"
        },
        "in_reply_to": {
          "location": "query",
          "required": false,
          "description": "The id of the comment a reply was in relation to"
        },
        "like_count": {
          "location": "query",
          "required": false,
          "description": "The number of likes the comment has"
        },
        "replies": {
          "location": "query",
          "required": false,
          "description": "A list of replies, with the same structure as a comment. This field may be absent in cases where there are no replies"
        },
        "liked": {
          "location": "query",
          "required": false,
          "description": "A boolean indicator of whether or not the authenticated member has liked the comment"
        },
        "notifications": {
          "location": "query",
          "required": false,
          "description": "Indicator of whether or not the authenticated member may               receive notifications about related comments. May be one of 'on' or 'off'"
        }
      },
      "summary": "Updates an existing Meetup group event's details",
      "uri": "/{urlname}/events/{id}/#edit",
      "notes": null
    },
    "EventDelete": {
      "version": "3",
      "name": "EventDelete",
      "httpMethod": "DELETE",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric venue id"
        },
        "remove_from_calendar": {
          "location": "query",
          "required": false,
          "description": "Optional boolean parameter that, when set to true, fully deletes the event. If set to false, this operation cancels the event instead of completely removing it from the group's calendar. This defaults to true when not set explicitly."
        },
        "update_series": {
          "location": "query",
          "required": false,
          "description": "Optional boolean parameter that, when set to true, will update all future recurrences of this event if this event belongs to an event series. Requesting this for an event that doesn't belong to an active series will result in an error. You can detect an event's association with a series by sending fields=series when requesting event data. This defaults to false, when not set explicitly"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to append to the response"
        },
        "attendance_count": {
          "location": "query",
          "required": false,
          "description": "Number of all members marked as attended, yes RSVPs that were not changed by attendance and their guests"
        },
        "attendance_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of members marked as attended and yes RSVPs that were not changed by attendance"
        },
        "attendee_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of attendance records of members marked as attended and yes RSVPs that were not changed by attendance. For upcoming events, this represents collection of yes RSVPs"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "An aggregate count of all comments and replies for a given event, returned when fields request parameter value includes 'comment_count'"
        },
        "comment_sample": {
          "location": "query",
          "required": false,
          "description": "A sampling of recently past event comments.                Returned when the 'fields' request parameter                value contains 'comment_sample' and the group's                'visibility' setting permits it"
        },
        "comment": {
          "location": "query",
          "required": false,
          "description": "The comment the member left for the event"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "in_reply_to": {
          "location": "query",
          "required": false,
          "description": "The id of the comment a reply was in relation to"
        },
        "like_count": {
          "location": "query",
          "required": false,
          "description": "The number of likes the comment has"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Venue name"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's role in within the group, if any. This may be one of: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "replies": {
          "location": "query",
          "required": false,
          "description": "A list of replies, with the same structure as a comment. This field may be absent in cases where there are no replies"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "represents details particular to the authorized user, only present if requested and authenticated member is a member of the hosting group, returned when fields request parameter value includes 'self'"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially one or more of the following"
        },
        "liked": {
          "location": "query",
          "required": false,
          "description": "A boolean indicator of whether or not the authenticated member has liked the comment"
        },
        "notifications": {
          "location": "query",
          "required": false,
          "description": "Indicator of whether or not the authenticated member may               receive notifications about related comments. May be one of 'on' or 'off'"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "description_images": {
          "location": "query",
          "required": false,
          "description": "A list of image urls included in the event description.  returned when \"fields\" request parameter value contains \"description_images, only supported for GET /event/:id currently\""
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "event_hosts": {
          "location": "query",
          "required": false,
          "description": "List of members hosting the event, returned when fields request parameter value includes 'event_hosts'"
        },
        "host_count": {
          "location": "query",
          "required": false,
          "description": "Number of times member hosted for group"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Host member's introduction"
        },
        "join_date": {
          "location": "query",
          "required": false,
          "description": "Group join date in milliseconds since epoch"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "featured": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of whether or not a given event is featured, returned when fields request parameter value includes 'featured'"
        },
        "featured_photo": {
          "location": "query",
          "required": false,
          "description": "A featured photo for this event, returned when the 'fields' request paramater includes 'featured_photo'"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Payment options for event ticketing, returned when the 'fields' request parameter value includes 'fee_options'"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Information about group hosting the event"
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Category group belongs to, returned when fields request parameter value includes 'group_category'"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Lists any questions requested when joining and required fields. Returned with \"fields\" request parameter value includes \"group_join_info\""
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo, returned when fields request parameter value includes 'group_key_photo'"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Membership dues information associated with hosting group, returned when \"fields\" request parameter value includes \"group_membership_dues\" and group has dues"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "The organizer-defined terms for refunds. If this is defined, you must provide the authenticated member a way to access this information before they can RSVP. They will need to agree to these terms before they RSVP"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one, returned when fields request parameter value inclues 'meta_category'"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "The number of past events belonging to the group, returned when \"fields\" includes \"group_past_event_count\""
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used to generate group duotone, returned when fields request parameter value includes 'group_photo_gradient'"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "pro_network": {
          "location": "query",
          "required": false,
          "description": "Information on group's Pro organization, returned when \"fields\" request parameter value includes \"group_pro_network\""
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "profile": {
          "location": "query",
          "required": false,
          "description": "Profile of the authenticated member"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "\"cancelled\", \"upcoming\", \"past\", \"proposed\", \"suggested\", or \"draft\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of venue where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Topics related to the group, returned when fields request parameter value includes 'group_topics'"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Event visibility: \"public\", \"public_limited\", or \"members\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public."
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "how_to_find_us": {
          "location": "query",
          "required": false,
          "description": "Additional information on how to find members at a venue when provided by an organizer, returned when fields request parameter value includes 'how_to_find_us'"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to event on meetup.com"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "manual_attendance_count": {
          "location": "query",
          "required": false,
          "description": "Manually entered total attendee headcount, if any exists"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event, returned when fields request parameter value includes 'photo_album'"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description without images. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_rules": {
          "location": "query",
          "required": false,
          "description": "Information about conditions that allow for member RSVPs, returned when fields request parameter value include 'rsvp_rules'"
        },
        "close_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that RSVPs will no longer be accepted, though organizers may close RSVPs earlier"
        },
        "closed": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not RSVPing was explicitly closed for the event."
        },
        "guest_limit": {
          "location": "query",
          "required": false,
          "description": "Number of guests members may include in their RSVP, 0 or more"
        },
        "open_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that members may begin to RSVP"
        },
        "days": {
          "location": "query",
          "required": false,
          "description": "if member_cancellation is present, it's relative to this many days before the event"
        },
        "notes": {
          "location": "query",
          "required": false,
          "description": "additional refund policy notes"
        },
        "policies": {
          "location": "query",
          "required": false,
          "description": "list of one or more of the following. 'no_refunds' if the organizer will not issue refunds', 'member_cancellation' if the organizer offers a refund for member cancellation, 'event_cancellation' if the organizer offers a refund if the event is canceled, 'event_rescheduled' if the organizer offers a refund when the event is rescheduled"
        },
        "waitlisting": {
          "location": "query",
          "required": false,
          "description": "Wait list handling when RSVP limit is reached. Value may be one of 'auto', 'manual' or 'off'"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when fields request parameter value includes 'rsvp_sample'"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "rsvpable": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP or join the waitlist when the event is full. Returned when the \"fields\" request parameter value includes \"rsvpable\""
        },
        "rsvpable_after_join": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP after joining the hosting group. Returned when the \"fields\" request parameter includes \"rsvpable_after_join\" and the authenticated member is not a member of the group hosting this event"
        },
        "saved": {
          "location": "query",
          "required": false,
          "description": "Whether the authorized member has saved the event, returned when fields request parameter value includes 'saved'"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's payment status. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'"
        },
        "rsvp": {
          "location": "query",
          "required": false,
          "description": "Member's RSVP, if any"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "List of answers to event survey questions asked when the member RSVP'd in the order asked, only available to organizers and assistant organizers"
        },
        "guests": {
          "location": "query",
          "required": false,
          "description": "Number of guests the RSVP'd member will be bringing"
        },
        "response": {
          "location": "query",
          "required": false,
          "description": "May be \"yes\" or \"no\"."
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "day_of_week": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-7 (Monday-Sunday) for the day of week the recurrence occurs upon"
        },
        "interval": {
          "location": "query",
          "required": false,
          "description": "Integer number of weeks between each recurrence"
        },
        "week_of_month": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-5 representing the week number on which the event recurs. A value of 5 indicates the event recurs on the last week of every month"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "days_of_week": {
          "location": "query",
          "required": false,
          "description": "List of integers 1-7 (Monday-Sunday) of days of week recurrence occurs upon"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "A shortened link for the event on meetup.com, returned when fields request parameter value includes \"short_link\""
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the event, in simple HTML source format. If this event's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\"' request parameter contains \"simple_html_description\""
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "List of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\"' request parameter contains \"answers\""
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "venue_visibility": {
          "location": "query",
          "required": false,
          "description": "Represents who can see the venue with a potential value of \"members\" or \"public\", returned when fields request parameter value includes \"venue_visibility\" and the authenticated member is a member of the group hosting the event"
        },
        "web_actions": {
          "location": "query",
          "required": false,
          "description": "Set of \"Invite\" and google/yahoo/ical/outlook \"Add to calendar\" web actions"
        },
        "why": {
          "location": "query",
          "required": false,
          "description": "We should do this because..."
        }
      },
      "summary": "Cancels or removes an event from a groups calendar",
      "uri": "/{urlname}/events/{id}/#delete",
      "notes": null
    },
    "Attendance": {
      "version": "3",
      "name": "Attendance",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique identifier for the rsvp"
        },
        "desc": {
          "location": "query",
          "required": false,
          "description": "Boolean value controlling sort order of results. Defaults to false"
        },
        "order": {
          "location": "query",
          "required": false,
          "description": "The sort order of returned attendees.  The attendees are sorted in ascending order, use 'desc' to sort in descending order instead.  Valid values include \"name\", \"social\", or \"time\".  'name' sorts alphabetically using the member's name. Attendees with no name will be moved to the bottom of the list, regardless of the value of 'desc'.  'time' sorts using either the rsvp response time or the time the attendance was taken. If an attendee has both an rsvp status and attendance status we always use the time the attendance status was changed in the sort over the rsvp response time. Attendees with no rsvp response time or attendance time will be moved to the bottom of the list regardless of the 'desc' value.  'social' sorts the attendees by the amount of friends and groups that they have in common with the authenticated member. If there is no authenticated member we default to 'name'.  Default sort is: name."
        },
        "guests": {
          "location": "query",
          "required": false,
          "description": "Number of guests when the member rsvped"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of member"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The member's pay status for ticketed events returned with \"pay_status\" is requested with the \"fields\" parameter."
        },
        "rsvp": {
          "location": "query",
          "required": false,
          "description": "RSVP, if member originally RSVP'd"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "Answers to event survey questions. Visible only to the posting member, hosts and the lead team"
        },
        "answer": {
          "location": "query",
          "required": false,
          "description": "Answer text for question"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "question_id": {
          "location": "query",
          "required": false,
          "description": "Unique number identifier for question"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time of the attendance status, in milliseconds since the epoch"
        },
        "response": {
          "location": "query",
          "required": false,
          "description": "Member's original RSVP response. May be one of: 'yes', 'no', 'waitlist'. If there is no corresponding attendance status for the memer, only 'yes' and 'no' will be returned."
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "The member's attendance status. May be one of: 'attended', 'absent', 'noshow'"
        }
      },
      "summary": "Lists attendance records for Meetup events. Getting the list of attendance records for private groups is limited only to members of that group. The endpoint returns all members that have rsvped 'yes' or 'no' and members that were marked as either 'attended', 'noshow', or 'absent'",
      "uri": "/{urlname}/events/{id}/attendance/#list",
      "notes": null
    },
    "AttendanceTaking": {
      "version": "3",
      "name": "AttendanceTaking",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique identifier for the rsvp"
        },
        "guests": {
          "location": "query",
          "required": false,
          "description": "Number of guests when the member rsvped"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "The member's attendance status. May be one of: 'attended', 'absent', 'noshow'"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of member"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The member's pay status for ticketed events returned with \"pay_status\" is requested with the \"fields\" parameter."
        },
        "rsvp": {
          "location": "query",
          "required": false,
          "description": "RSVP, if member originally RSVP'd"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "Answers to event survey questions. Visible only to the posting member, hosts and the lead team"
        },
        "answer": {
          "location": "query",
          "required": false,
          "description": "Answer text for question"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "question_id": {
          "location": "query",
          "required": false,
          "description": "Unique number identifier for question"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time of the attendance status, in milliseconds since the epoch"
        },
        "response": {
          "location": "query",
          "required": false,
          "description": "Member's original RSVP response. May be one of: 'yes', 'no', 'waitlist'. If there is no corresponding attendance status for the memer, only 'yes' and 'no' will be returned."
        }
      },
      "summary": "Takes member attendance for an event. Limited for use by administrative members.",
      "uri": "/{urlname}/events/{id}/attendance/#edit",
      "notes": null
    },
    "EventPayments": {
      "version": "3",
      "name": "EventPayments",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique identifier for the payment"
        },
        "amount": {
          "location": "query",
          "required": true,
          "description": "The monetary amount of money the member submitted"
        },
        "member": {
          "location": "query",
          "required": true,
          "description": "Member Id of member who made a payment"
        },
        "paid_on": {
          "location": "query",
          "required": false,
          "description": "The time the payment was made in milliseconds from the epoc. Defaults to now"
        },
        "quantity": {
          "location": "query",
          "required": false,
          "description": "The number of payments made. Defaults to 1"
        },
        "confirm_code": {
          "location": "query",
          "required": false,
          "description": "Confirmation code for the payment"
        }
      },
      "summary": "Allows organizers of a group to note payments made by members for an event. This is the 'Mark Paid' feature seen in the RSVP listings on event details pages and affects the 'pay_status' response fields in 2/rsvps for paid events",
      "uri": "/{urlname}/events/{id}/payments/",
      "notes": "Only organizer may submit payment information for members and only one payment may be submitted for a member for a given event"
    },
    "FindUpcomingEvents": {
      "version": "3",
      "name": "FindUpcomingEvents",
      "httpMethod": "GET",
      "parameters": {
        "end_date_range": {
          "location": "query",
          "required": false,
          "description": "Return events that start before this date. The date must follow this format: YYYY-MM-DDTHH:MM:SS."
        },
        "end_time_range": {
          "location": "query",
          "required": false,
          "description": "Return events that start before this time. The time must follow this format: HH:MM:SS. The time is exlusive. A start_time_range must also be present"
        },
        "excluded_groups": {
          "location": "query",
          "required": false,
          "description": "IDs for groups to exclude from the returned events. excluded_groups overrides the include and only values for self_groups. In other words, if excluded_groups is nonempty, then groups specified in excluded_groups will be excluded even if they are in the set of groups the authenticated member belongs to."
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to populate in the response"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "order": {
          "location": "query",
          "required": false,
          "description": "The sort order of returned events. Valid values include: 'best' and 'time'. 'best' orders events by recommendation score, while 'time' orders events by the by the event's start time in increasing order. Defaults to 'best'."
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "A target minimum number of events to return in a single page of results. The number returned is non-deterministic but a best-effort attempt will be made to return at least some. Defaults to 32"
        },
        "radius": {
          "location": "query",
          "required": false,
          "description": "Radius in miles. May be 0.0-100.0, 'global' or 'smart', a dynamic radius based on the number of active groups in the area. Defaults to member's preferred radius"
        },
        "self_groups": {
          "location": "query",
          "required": false,
          "description": "set to 'include' or 'exclude' or 'only' get groups that the member belongs to. Defaults to 'include.' When self_groups is set to only and the order is set to time, the following fields are disregarded: page, end_date_range, lat and lon."
        },
        "start_date_range": {
          "location": "query",
          "required": false,
          "description": "Return events that start after this date. The date must follow this format: YYYY-MM-DDTHH:MM:SS. It defaults to the current date and time."
        },
        "start_time_range": {
          "location": "query",
          "required": false,
          "description": "Return events that start after this time. The time must follow this format: HH:MM:SS. The time is inclusive. An end_time_range must also be present."
        },
        "text": {
          "location": "query",
          "required": false,
          "description": "Full text search query"
        },
        "topic_category": {
          "location": "query",
          "required": false,
          "description": "Numeric topic category identifier for filtering recommendations by a topic category"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric venue id"
        },
        "member_count": {
          "location": "query",
          "required": false,
          "description": "The number of Meetup members in the city"
        },
        "name_string": {
          "location": "query",
          "required": false,
          "description": "The full name of the city, as returned by query search, if applicable"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of venue where available"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "events": {
          "location": "query",
          "required": false,
          "description": "List of events"
        },
        "attendance_count": {
          "location": "query",
          "required": false,
          "description": "Number of all members marked as attended, yes RSVPs that were not changed by attendance and their guests"
        },
        "attendance_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of members marked as attended and yes RSVPs that were not changed by attendance"
        },
        "attendee_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of attendance records of members marked as attended and yes RSVPs that were not changed by attendance. For upcoming events, this represents collection of yes RSVPs"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "An aggregate count of all comments and replies for a given event, returned when fields request parameter value includes 'comment_count'"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "description_images": {
          "location": "query",
          "required": false,
          "description": "A list of image urls included in the event description.  returned when \"fields\" request parameter value contains \"description_images, only supported for GET /event/:id currently\""
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "event_hosts": {
          "location": "query",
          "required": false,
          "description": "List of members hosting the event, returned when fields request parameter value includes 'event_hosts'"
        },
        "host_count": {
          "location": "query",
          "required": false,
          "description": "Number of times member hosted for group"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Host member's introduction"
        },
        "join_date": {
          "location": "query",
          "required": false,
          "description": "Group join date in milliseconds since epoch"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Venue name"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Photo associated with group, returned when fields request parameter value includes 'group_photo'"
        },
        "featured": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of whether or not a given event is featured, returned when fields request parameter value includes 'featured'"
        },
        "featured_photo": {
          "location": "query",
          "required": false,
          "description": "A featured photo for this event, returned when the 'fields' request paramater includes 'featured_photo'"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of Set(stripe, wepay, paypal, none, cash)"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Ticketing fee information for events that support payments"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "Boolean flag indicating if this fee is required to RSVP"
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Payment options for event ticketing, returned when the 'fields' request parameter value includes 'fee_options'"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Information about group hosting the event"
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Category group belongs to, returned when fields request parameter value includes 'group_category'"
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Lists any questions requested when joining and required fields. Returned with \"fields\" request parameter value includes \"group_join_info\""
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo, returned when fields request parameter value includes 'group_key_photo'"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Membership dues information associated with hosting group, returned when fields request parameter value includes 'group_membership_dues'"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one, returned when fields request parameter value inclues 'meta_category'"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "The number of past events belonging to the group, returned when \"fields\" includes \"group_past_event_count\""
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used to generate group duotone, returned when fields request parameter value includes 'group_photo_gradient'"
        },
        "pro_network": {
          "location": "query",
          "required": false,
          "description": "Information on group's Pro organization, returned when \"fields\" request parameter value includes \"group_pro_network\""
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "represents details particular to the authorized user, only present if requested and authenticated member is a member of the hosting group, returned when fields request parameter value includes 'self'"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Topics related to the group, returned when fields request parameter value includes 'group_topics'"
        },
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Event visibility: \"public\", \"public_limited\", or \"members\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public."
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "how_to_find_us": {
          "location": "query",
          "required": false,
          "description": "Additional information on how to find members at a venue when provided by an organizer, returned when fields request parameter value includes 'how_to_find_us'"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to event on meetup.com"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "manual_attendance_count": {
          "location": "query",
          "required": false,
          "description": "Manually entered total attendee headcount, if any exists"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event, returned when fields request parameter value includes 'photo_album'"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description without images. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_rules": {
          "location": "query",
          "required": false,
          "description": "Information about conditions that allow for member RSVPs, returned when fields request parameter value include 'rsvp_rules'"
        },
        "close_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that RSVPs will no longer be accepted, though organizers may close RSVPs earlier"
        },
        "closed": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not RSVPing was explicitly closed for the event."
        },
        "guest_limit": {
          "location": "query",
          "required": false,
          "description": "Number of guests members may include in their RSVP, 0 or more"
        },
        "open_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that members may begin to RSVP"
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "The organizer-defined terms for refunds. If this is defined, you must provide the authenticated member a way to access this information before they can RSVP. They will need to agree to these terms before they RSVP"
        },
        "waitlisting": {
          "location": "query",
          "required": false,
          "description": "Wait list handling when RSVP limit is reached. Value may be one of 'auto', 'manual' or 'off'"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when fields request parameter value includes 'rsvp_sample'"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "rsvpable": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP or join the waitlist when the event is full. Returned when the \"fields\" request parameter value includes \"rsvpable\""
        },
        "rsvpable_after_join": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP after joining the hosting group. Returned when the \"fields\" request parameter includes \"rsvpable_after_join\" and the authenticated member is not a member of the group hosting this event"
        },
        "saved": {
          "location": "query",
          "required": false,
          "description": "Whether the authorized member has saved the event, returned when fields request parameter value includes 'saved'"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially one or more of the following"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's payment status. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's role in within the group, if any. This may be one of: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "rsvp": {
          "location": "query",
          "required": false,
          "description": "Member's RSVP, if any"
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "A shortened link for the event on meetup.com, returned when fields request parameter value includes \"short_link\""
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the event, in simple HTML source format. If this event's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\"' request parameter contains \"simple_html_description\""
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "\"cancelled\", \"upcoming\", \"past\", \"proposed\", \"suggested\", or \"draft\""
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "List of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\"' request parameter contains \"answers\""
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "venue_visibility": {
          "location": "query",
          "required": false,
          "description": "Represents who can see the venue with a potential value of \"members\" or \"public\", returned when fields request parameter value includes \"venue_visibility\" and the authenticated member is a member of the group hosting the event"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "web_actions": {
          "location": "query",
          "required": false,
          "description": "Set of \"Invite\" and google/yahoo/ical/outlook \"Add to calendar\" web actions"
        },
        "why": {
          "location": "query",
          "required": false,
          "description": "We should do this because..."
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        }
      },
      "summary": "Returns a list of upcoming events",
      "uri": "/find/upcoming_events/",
      "notes": "By default, the events returned will be based on the hosting groups near the authenticated member's location. To customize this location, send a valid \"lat\" and \"lon\" parameter combination reflecting a desired location. You may filter results using an topic category identifier from the Topic Categories API You may specify 'fields' to expand response events with corresponded fields"
    },
    "MemberCalendar": {
      "version": "3",
      "name": "MemberCalendar",
      "httpMethod": "GET",
      "parameters": {
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields names which may be appended to the response"
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Number of results to return in a page. Defaults to 200"
        },
        "attendance_count": {
          "location": "query",
          "required": false,
          "description": "Number of all members marked as attended, yes RSVPs that were not changed by attendance and their guests"
        },
        "attendance_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of members marked as attended and yes RSVPs that were not changed by attendance"
        },
        "attendee_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of attendance records of members marked as attended and yes RSVPs that were not changed by attendance. For upcoming events, this represents collection of yes RSVPs"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "An aggregate count of all comments and replies for a given event, returned when fields request parameter value includes 'comment_count'"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "description_images": {
          "location": "query",
          "required": false,
          "description": "A list of image urls included in the event description.  returned when \"fields\" request parameter value contains \"description_images, only supported for GET /event/:id currently\""
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "event_hosts": {
          "location": "query",
          "required": false,
          "description": "List of members hosting the event, returned when fields request parameter value includes 'event_hosts'"
        },
        "host_count": {
          "location": "query",
          "required": false,
          "description": "Number of times member hosted for group"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric venue id"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Host member's introduction"
        },
        "join_date": {
          "location": "query",
          "required": false,
          "description": "Group join date in milliseconds since epoch"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Venue name"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "featured": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of whether or not a given event is featured, returned when fields request parameter value includes 'featured'"
        },
        "featured_photo": {
          "location": "query",
          "required": false,
          "description": "A featured photo for this event, returned when the 'fields' request paramater includes 'featured_photo'"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Payment options for event ticketing, returned when the 'fields' request parameter value includes 'fee_options'"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Information about group hosting the event"
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Category group belongs to, returned when fields request parameter value includes 'group_category'"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Lists any questions requested when joining and required fields. Returned with \"fields\" request parameter value includes \"group_join_info\""
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo, returned when fields request parameter value includes 'group_key_photo'"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Membership dues information associated with hosting group, returned when \"fields\" request parameter value includes \"group_membership_dues\" and group has dues"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "The organizer-defined terms for refunds. If this is defined, you must provide the authenticated member a way to access this information before they can RSVP. They will need to agree to these terms before they RSVP"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one, returned when fields request parameter value inclues 'meta_category'"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "The number of past events belonging to the group, returned when \"fields\" includes \"group_past_event_count\""
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used to generate group duotone, returned when fields request parameter value includes 'group_photo_gradient'"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "pro_network": {
          "location": "query",
          "required": false,
          "description": "Information on group's Pro organization, returned when \"fields\" request parameter value includes \"group_pro_network\""
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "represents details particular to the authorized user, only present if requested and authenticated member is a member of the hosting group, returned when fields request parameter value includes 'self'"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially one or more of the following"
        },
        "profile": {
          "location": "query",
          "required": false,
          "description": "Profile of the authenticated member"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "\"cancelled\", \"upcoming\", \"past\", \"proposed\", \"suggested\", or \"draft\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of venue where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Topics related to the group, returned when fields request parameter value includes 'group_topics'"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Event visibility: \"public\", \"public_limited\", or \"members\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public."
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "how_to_find_us": {
          "location": "query",
          "required": false,
          "description": "Additional information on how to find members at a venue when provided by an organizer, returned when fields request parameter value includes 'how_to_find_us'"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to event on meetup.com"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "manual_attendance_count": {
          "location": "query",
          "required": false,
          "description": "Manually entered total attendee headcount, if any exists"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event, returned when fields request parameter value includes 'photo_album'"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description without images. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_rules": {
          "location": "query",
          "required": false,
          "description": "Information about conditions that allow for member RSVPs, returned when fields request parameter value include 'rsvp_rules'"
        },
        "close_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that RSVPs will no longer be accepted, though organizers may close RSVPs earlier"
        },
        "closed": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not RSVPing was explicitly closed for the event."
        },
        "guest_limit": {
          "location": "query",
          "required": false,
          "description": "Number of guests members may include in their RSVP, 0 or more"
        },
        "open_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that members may begin to RSVP"
        },
        "days": {
          "location": "query",
          "required": false,
          "description": "if member_cancellation is present, it's relative to this many days before the event"
        },
        "notes": {
          "location": "query",
          "required": false,
          "description": "additional refund policy notes"
        },
        "policies": {
          "location": "query",
          "required": false,
          "description": "list of one or more of the following. 'no_refunds' if the organizer will not issue refunds', 'member_cancellation' if the organizer offers a refund for member cancellation, 'event_cancellation' if the organizer offers a refund if the event is canceled, 'event_rescheduled' if the organizer offers a refund when the event is rescheduled"
        },
        "waitlisting": {
          "location": "query",
          "required": false,
          "description": "Wait list handling when RSVP limit is reached. Value may be one of 'auto', 'manual' or 'off'"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when fields request parameter value includes 'rsvp_sample'"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's role in within the group, if any. This may be one of: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "rsvpable": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP or join the waitlist when the event is full. Returned when the \"fields\" request parameter value includes \"rsvpable\""
        },
        "rsvpable_after_join": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP after joining the hosting group. Returned when the \"fields\" request parameter includes \"rsvpable_after_join\" and the authenticated member is not a member of the group hosting this event"
        },
        "saved": {
          "location": "query",
          "required": false,
          "description": "Whether the authorized member has saved the event, returned when fields request parameter value includes 'saved'"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's payment status. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'"
        },
        "rsvp": {
          "location": "query",
          "required": false,
          "description": "Member's RSVP, if any"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "List of answers to event survey questions asked when the member RSVP'd in the order asked, only available to organizers and assistant organizers"
        },
        "guests": {
          "location": "query",
          "required": false,
          "description": "Number of guests the RSVP'd member will be bringing"
        },
        "response": {
          "location": "query",
          "required": false,
          "description": "May be \"yes\" or \"no\"."
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "day_of_week": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-7 (Monday-Sunday) for the day of week the recurrence occurs upon"
        },
        "interval": {
          "location": "query",
          "required": false,
          "description": "Integer number of weeks between each recurrence"
        },
        "week_of_month": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-5 representing the week number on which the event recurs. A value of 5 indicates the event recurs on the last week of every month"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "days_of_week": {
          "location": "query",
          "required": false,
          "description": "List of integers 1-7 (Monday-Sunday) of days of week recurrence occurs upon"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "A shortened link for the event on meetup.com, returned when fields request parameter value includes \"short_link\""
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the event, in simple HTML source format. If this event's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\"' request parameter contains \"simple_html_description\""
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "List of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\"' request parameter contains \"answers\""
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "venue_visibility": {
          "location": "query",
          "required": false,
          "description": "Represents who can see the venue with a potential value of \"members\" or \"public\", returned when fields request parameter value includes \"venue_visibility\" and the authenticated member is a member of the group hosting the event"
        },
        "web_actions": {
          "location": "query",
          "required": false,
          "description": "Set of \"Invite\" and google/yahoo/ical/outlook \"Add to calendar\" web actions"
        },
        "why": {
          "location": "query",
          "required": false,
          "description": "We should do this because..."
        }
      },
      "summary": "Get a listing of all upcoming Meetup events for the authenticated member",
      "uri": "/self/calendar/#list",
      "notes": null
    },
    "MemberEvents": {
      "version": "3",
      "name": "MemberEvents",
      "httpMethod": "GET",
      "parameters": {
        "desc": {
          "location": "query",
          "required": false,
          "description": "When true, sorts results in descending order. Defaults to false"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields names which may be appended to the response"
        },
        "no_earlier_than": {
          "location": "query",
          "required": false,
          "description": "An optional timestamp that represents a lower time bound (inclusive) for the start time of events in the local time of the group. If provided, it must be a string in ISO 8601 format without a time zone specified, i.e. 2018-06-01T00:00:00.000. If provided, the API will not return events with a start time earlier than the time specified by this parameter. If both this parameter and scroll are present, such that scroll does not have a type of ctime and it requests events that start after the specified scroll time, then the API returns events after whichever of scroll and no_earlier_than comes later."
        },
        "no_later_than": {
          "location": "query",
          "required": false,
          "description": "An optional timestamp that represents an upper time bound (exclusive) for the start time of events in the local time of the group. If provided, it must be a string in ISO 8601 format without a time zone specified, i.e. 2018-06-01T00:00:00.000. If provided, the API will not return events with a start time later than or equal to the time specified by this parameter. If both this parameter and scroll are present, such that scroll does not have a type of ctime and it requests events before the specified scroll time, then the API returns events before whichever of scroll and no_later_than comes earlier."
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Number of results to return. Defaults to 200."
        },
        "rsvp": {
          "location": "query",
          "required": false,
          "description": "Member's RSVP, if any"
        },
        "scroll": {
          "location": "query",
          "required": false,
          "description": "A string representing an alias for a point on a timeline."
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the event. May be one of \"upcoming\" or \"past\""
        },
        "attendance_count": {
          "location": "query",
          "required": false,
          "description": "Number of all members marked as attended, yes RSVPs that were not changed by attendance and their guests"
        },
        "attendance_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of members marked as attended and yes RSVPs that were not changed by attendance"
        },
        "attendee_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of attendance records of members marked as attended and yes RSVPs that were not changed by attendance. For upcoming events, this represents collection of yes RSVPs"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "An aggregate count of all comments and replies for a given event, returned when fields request parameter value includes 'comment_count'"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "description_images": {
          "location": "query",
          "required": false,
          "description": "A list of image urls included in the event description.  returned when \"fields\" request parameter value contains \"description_images, only supported for GET /event/:id currently\""
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "event_hosts": {
          "location": "query",
          "required": false,
          "description": "List of members hosting the event, returned when fields request parameter value includes 'event_hosts'"
        },
        "host_count": {
          "location": "query",
          "required": false,
          "description": "Number of times member hosted for group"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric venue id"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Host member's introduction"
        },
        "join_date": {
          "location": "query",
          "required": false,
          "description": "Group join date in milliseconds since epoch"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Venue name"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "featured": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of whether or not a given event is featured, returned when fields request parameter value includes 'featured'"
        },
        "featured_photo": {
          "location": "query",
          "required": false,
          "description": "A featured photo for this event, returned when the 'fields' request paramater includes 'featured_photo'"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Payment options for event ticketing, returned when the 'fields' request parameter value includes 'fee_options'"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Information about group hosting the event"
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Category group belongs to, returned when fields request parameter value includes 'group_category'"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Lists any questions requested when joining and required fields. Returned with \"fields\" request parameter value includes \"group_join_info\""
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo, returned when fields request parameter value includes 'group_key_photo'"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Membership dues information associated with hosting group, returned when \"fields\" request parameter value includes \"group_membership_dues\" and group has dues"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "The organizer-defined terms for refunds. If this is defined, you must provide the authenticated member a way to access this information before they can RSVP. They will need to agree to these terms before they RSVP"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one, returned when fields request parameter value inclues 'meta_category'"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "The number of past events belonging to the group, returned when \"fields\" includes \"group_past_event_count\""
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used to generate group duotone, returned when fields request parameter value includes 'group_photo_gradient'"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "pro_network": {
          "location": "query",
          "required": false,
          "description": "Information on group's Pro organization, returned when \"fields\" request parameter value includes \"group_pro_network\""
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "represents details particular to the authorized user, only present if requested and authenticated member is a member of the hosting group, returned when fields request parameter value includes 'self'"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially one or more of the following"
        },
        "profile": {
          "location": "query",
          "required": false,
          "description": "Profile of the authenticated member"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of venue where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Topics related to the group, returned when fields request parameter value includes 'group_topics'"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Event visibility: \"public\", \"public_limited\", or \"members\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public."
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "how_to_find_us": {
          "location": "query",
          "required": false,
          "description": "Additional information on how to find members at a venue when provided by an organizer, returned when fields request parameter value includes 'how_to_find_us'"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to event on meetup.com"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "manual_attendance_count": {
          "location": "query",
          "required": false,
          "description": "Manually entered total attendee headcount, if any exists"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event, returned when fields request parameter value includes 'photo_album'"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Plain text version of the event description without images. Email addresses and photo numbers will be masked for non-members. Returned when \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_rules": {
          "location": "query",
          "required": false,
          "description": "Information about conditions that allow for member RSVPs, returned when fields request parameter value include 'rsvp_rules'"
        },
        "close_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that RSVPs will no longer be accepted, though organizers may close RSVPs earlier"
        },
        "closed": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not RSVPing was explicitly closed for the event."
        },
        "guest_limit": {
          "location": "query",
          "required": false,
          "description": "Number of guests members may include in their RSVP, 0 or more"
        },
        "open_time": {
          "location": "query",
          "required": false,
          "description": "UTC time that members may begin to RSVP"
        },
        "days": {
          "location": "query",
          "required": false,
          "description": "if member_cancellation is present, it's relative to this many days before the event"
        },
        "notes": {
          "location": "query",
          "required": false,
          "description": "additional refund policy notes"
        },
        "policies": {
          "location": "query",
          "required": false,
          "description": "list of one or more of the following. 'no_refunds' if the organizer will not issue refunds', 'member_cancellation' if the organizer offers a refund for member cancellation, 'event_cancellation' if the organizer offers a refund if the event is canceled, 'event_rescheduled' if the organizer offers a refund when the event is rescheduled"
        },
        "waitlisting": {
          "location": "query",
          "required": false,
          "description": "Wait list handling when RSVP limit is reached. Value may be one of 'auto', 'manual' or 'off'"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when fields request parameter value includes 'rsvp_sample'"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's role in within the group, if any. This may be one of: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "rsvpable": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP or join the waitlist when the event is full. Returned when the \"fields\" request parameter value includes \"rsvpable\""
        },
        "rsvpable_after_join": {
          "location": "query",
          "required": false,
          "description": "Boolean value indicating whether or not the authenticated member can RSVP after joining the hosting group. Returned when the \"fields\" request parameter includes \"rsvpable_after_join\" and the authenticated member is not a member of the group hosting this event"
        },
        "saved": {
          "location": "query",
          "required": false,
          "description": "Whether the authorized member has saved the event, returned when fields request parameter value includes 'saved'"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's payment status. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "List of answers to event survey questions asked when the member RSVP'd in the order asked, only available to organizers and assistant organizers"
        },
        "guests": {
          "location": "query",
          "required": false,
          "description": "Number of guests the RSVP'd member will be bringing"
        },
        "response": {
          "location": "query",
          "required": false,
          "description": "May be \"yes\" or \"no\"."
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "day_of_week": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-7 (Monday-Sunday) for the day of week the recurrence occurs upon"
        },
        "interval": {
          "location": "query",
          "required": false,
          "description": "Integer number of weeks between each recurrence"
        },
        "week_of_month": {
          "location": "query",
          "required": false,
          "description": "Integer value between 1-5 representing the week number on which the event recurs. A value of 5 indicates the event recurs on the last week of every month"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "days_of_week": {
          "location": "query",
          "required": false,
          "description": "List of integers 1-7 (Monday-Sunday) of days of week recurrence occurs upon"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "A shortened link for the event on meetup.com, returned when fields request parameter value includes \"short_link\""
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the event, in simple HTML source format. If this event's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\"' request parameter contains \"simple_html_description\""
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "List of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\"' request parameter contains \"answers\""
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "venue_visibility": {
          "location": "query",
          "required": false,
          "description": "Represents who can see the venue with a potential value of \"members\" or \"public\", returned when fields request parameter value includes \"venue_visibility\" and the authenticated member is a member of the group hosting the event"
        },
        "web_actions": {
          "location": "query",
          "required": false,
          "description": "Set of \"Invite\" and google/yahoo/ical/outlook \"Add to calendar\" web actions"
        },
        "why": {
          "location": "query",
          "required": false,
          "description": "We should do this because..."
        }
      },
      "summary": "Gets a listing of all scheduled Meetup Events the authenticated member has RSVP'd tothat have been announced to the group.This listing is ordered from oldest to most recent by default",
      "uri": "/self/events/",
      "notes": "This endpoint uses HTTP Link header based pagination. Clients may use the scroll request parameter to jump to a target scroll location. Valid values for scroll targets are defined below. A 'page' parameter may be provided to control the number of results returned."
    },
    "Findlocations": {
      "version": "3",
      "name": "Findlocations",
      "httpMethod": "GET",
      "parameters": {
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate location latitude"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate location longitude"
        },
        "offset": {
          "location": "query",
          "required": false,
          "description": "The current offset in the paginated set, represented as an incrementing value"
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "The desired number of locations to return in a single set of results. Defaults to 200"
        },
        "query": {
          "location": "query",
          "required": false,
          "description": "Search for locations based on city name or zip code"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "Name of city"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Two character country code"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "Localized name of country based on request's language information"
        },
        "name_string": {
          "location": "query",
          "required": false,
          "description": "The full name of the location as preformatted string"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "Enclosing location state, if the location's country declares one"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "The location's zip code. For locations in countries without zip codes, a placeholder will be returned"
        }
      },
      "summary": "Provides a query interface for finding known locations",
      "uri": "/find/locations/",
      "notes": "This endpoint uses HTTP Link header based pagination."
    },
    "GetGroup": {
      "version": "3",
      "name": "GetGroup",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to append to the response"
        },
        "approved": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this Group has been approved or not. New Groups are generally approved (or removed) soon after creation. Returned when the \"fields\" request parameter value includes \"approved\""
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "The primary category of the group, if the group has one"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of the group"
        },
        "city_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a URL for the group's city"
        },
        "contributions": {
          "location": "query",
          "required": false,
          "description": "Optional field containing the contribution details of the group"
        },
        "enabled": {
          "location": "query",
          "required": false,
          "description": "Boolean stating if contributions are enabled for the group"
        },
        "potential": {
          "location": "query",
          "required": false,
          "description": "Boolean stating that potential contributions are enabled for the group"
        },
        "reason": {
          "location": "query",
          "required": false,
          "description": "The reason a member might consider contributing"
        },
        "thanks": {
          "location": "query",
          "required": false,
          "description": "The 'thank you' message to be given when a contribution is made"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country of the group"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the group was created in milliseconds since the epoch"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Short description of group"
        },
        "discussion_count": {
          "location": "query",
          "required": false,
          "description": "The total number of the group's discussions. Returned when the 'fields' request parameter value contains 'discussion_count' and the group's 'visibility' setting permits it"
        },
        "discussion_preferences": {
          "location": "query",
          "required": false,
          "description": "Optional field that contains preference and permission data for group discussions"
        },
        "discussion_sample": {
          "location": "query",
          "required": false,
          "description": "A small sampling of the group's discussions. Returned when the 'fields' request parameter value contains 'discussion_sample' and the group's 'visibility' setting permits it"
        },
        "creator": {
          "location": "query",
          "required": false,
          "description": "Member who created the discussion"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Bio of member"
        },
        "birthday": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes 'birthday' and only for the authenticated member when defined"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "Member email address. Provided only if a profile belongs to the authenticated member"
        },
        "gender": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes \"gender\" and only for the authenticated member. Value may be one of \"female\", \"male\", \"none\", or \"other\". This field may be absent where gender is not defined"
        },
        "group_profile": {
          "location": "query",
          "required": false,
          "description": "Meetup Group profile information. This field is only returned when profile is requested in group contexts"
        },
        "is_pro_admin": {
          "location": "query",
          "required": false,
          "description": "Returns true if the member is an active admin of an active meetup pro network"
        },
        "joined": {
          "location": "query",
          "required": false,
          "description": "Time member joined, represented as milliseconds since the epoch"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Latitude"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "Name of country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Longitude"
        },
        "messaging_pref": {
          "location": "query",
          "required": false,
          "description": "The member's preference for being contacted from other members on the platform. Returned only when the fields request parameter value includes \"messaging_pref\". May be one of the following: \"all_members\", \"groups_only\", or \"orgs_only\""
        },
        "other_services": {
          "location": "query",
          "required": false,
          "description": "An object whose key's are the names of associated external networks and values are identities within those networks. The keys may be one of facebook, flickr, linkedin, tumblr or twitter. Returned only when \"fields\" request parameter value includes \"other_services\""
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Organizer photo, where defined"
        },
        "privacy": {
          "location": "query",
          "required": false,
          "description": "Member's privacy preferences Returned only when the \"fields\" request parameter value includes \"privacy\""
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Optional field, contains details specific to the authorized user in this Meetup Group"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of the group, if in US or Canada"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "deleted": {
          "location": "query",
          "required": false,
          "description": "boolean representing whether the discussion is deleted"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "The Group associated with the discussion"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "like_count": {
          "location": "query",
          "required": false,
          "description": "an integer representing the number of likes for this discussion"
        },
        "num_comments": {
          "location": "query",
          "required": false,
          "description": "an integer representing the number of comments in this discussion"
        },
        "num_follows": {
          "location": "query",
          "required": false,
          "description": "an integer representing the number of follows in this discussion"
        },
        "report_link": {
          "location": "query",
          "required": false,
          "description": "string representing the url for reporting abuse on this discussion"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially \"broadcast_message\": the ability to broadcast messages to group members via the \"announce\" mailing list, \"event_create\": the ability to create new events, \"event_draft\": the ability to save new events as drafts, \"role_assign\": the ability to assign member roles, \"edit\": the ability to edit group settings, \"member_approval\": the ability to approve or decline member requests to join, or \"subscription_upgrade\": the ability to upgrade this group's subscription plan"
        },
        "followed": {
          "location": "query",
          "required": false,
          "description": "a boolean representing whether the member is following the discussion"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "visible": {
          "location": "query",
          "required": false,
          "description": "boolean representing whether the discussion is visible"
        },
        "draft_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of draft events belonging to the group."
        },
        "event_sample": {
          "location": "query",
          "required": false,
          "description": "A small sampling of recent past events with photos. Returned when the \"fields\" request parameter value contains \"event_sample\"  and the group's \"visibility\" setting permits it"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when the \"fields\" request parameter value includes \"rsvp_sample\""
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "Contains a list of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\" request parameter contains \"survey_questions\""
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "The text of the question"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "The ZIP code of the city"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Optional field, returns payment options for event ticketing"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "ga_code": {
          "location": "query",
          "required": false,
          "description": "Optional field return the Google Analytics code for the group. Only members that can edit group settings can see this"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "is_simplehtml": {
          "location": "query",
          "required": false,
          "description": "Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise."
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Optional field, lists any questions requested when joining and required fields"
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last hosted event, if the group has one. Returned when the \"fields\" request parameter value contains \"last_event\""
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "leader_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup leaders limit in group (4 leaders for the Basic Subscription), note this info available only for orgs and coorgs"
        },
        "leads": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the number of members on this group's leadership team. Returned when the \"fields\" request parameter value contains \"leads\""
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to group on meetup.com"
        },
        "list_addr": {
          "location": "query",
          "required": false,
          "description": "Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this"
        },
        "list_mode": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the policy for who can post the group mailing list. Returned when the \"fields\" request parameter value contains \"list_mode\". Value may be one of \"moderated\", \"off\", \"open\", or \"orgs_only\""
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "member_cap": {
          "location": "query",
          "required": false,
          "description": "Number representing the maximum number of active members this group can have if capped. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "member_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup members limit in group (now it's 50 members in the Basic Subscription)"
        },
        "member_sample": {
          "location": "query",
          "required": false,
          "description": "A small sampling of active members. Returned when the 'fields' request parameter value contains 'member_sample' and the group's 'visibility' setting permits it"
        },
        "day": {
          "location": "query",
          "required": false,
          "description": "Numeric day member was born. May be absent if not defined"
        },
        "month": {
          "location": "query",
          "required": false,
          "description": "Numeric month member was born. May be absent if not defined"
        },
        "year": {
          "location": "query",
          "required": false,
          "description": "Year member was born"
        },
        "identifier": {
          "location": "query",
          "required": false,
          "description": "A unique string identifier"
        },
        "url": {
          "location": "query",
          "required": false,
          "description": "A url for this identity. May be the same as identifier in some cases"
        },
        "facebook": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' of 'visible'. If absent, the member has not connected their Facebook account to Meetup"
        },
        "groups": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' or 'visible"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the group's topics"
        },
        "blocks": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member blocks this member"
        },
        "common": {
          "location": "query",
          "required": false,
          "description": "Information the authenticated member has in common with this member"
        },
        "friends": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member is a friend of the member"
        },
        "members": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup members in this group"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues if the group has membership dues"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "amazon_payments": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Amazon Payments are accepted"
        },
        "credit_card": {
          "location": "query",
          "required": false,
          "description": "(Deprecated - use wepay instead) Boolean indicator that credit cards are accepted"
        },
        "other": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that other forms of payment are accepted"
        },
        "paypal": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Paypal payments are accepted"
        },
        "wepay": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Wepay payments are accepted"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "Conditions for refunds"
        },
        "custom": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of a custom refund policy"
        },
        "group_closes": {
          "location": "query",
          "required": false,
          "description": "refund applies when the group closes"
        },
        "member_banned": {
          "location": "query",
          "required": false,
          "description": "refund applies when the member is banned"
        },
        "member_leaves": {
          "location": "query",
          "required": false,
          "description": "refund applies when member leaves the group"
        },
        "none": {
          "location": "query",
          "required": false,
          "description": "indicates there is no refund policy"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "The current ongoing or next upcoming event, if one is scheduled"
        },
        "nominated_member": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns if the logged in member has been nominated to take over the group."
        },
        "nomination_acceptable": {
          "location": "query",
          "required": false,
          "description": "True if the group currently allows nominees to accept their handover nomination, false otherwise"
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Group's primary organizer"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of past events belonging to the group."
        },
        "pending_members": {
          "location": "query",
          "required": false,
          "description": "Number representing the count of members pending organizer approval to join. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "photos": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. A small set of photos from the group"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format. Returned when then \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format with no images. Returned when then \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "proposed_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of proposed events belonging to the group."
        },
        "cancelled": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that membership dues were cancelled"
        },
        "exempt": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that the member is exempt from payment."
        },
        "paid_until": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns the time in milliseconds since the epoch that the member's next payment is due"
        },
        "period_status": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns one of the following values grace paid pending unpaid"
        },
        "total_amount": {
          "location": "query",
          "required": false,
          "description": "Total amount paid"
        },
        "transaction_time": {
          "location": "query",
          "required": false,
          "description": "Time the transaction was made in milliseconds since the epoch"
        },
        "trial": {
          "location": "query",
          "required": false,
          "description": "If the group offers a trial membership, this indicates information for unpaid members."
        },
        "previous_membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues history when currently not a part of group i.e Status=none if the group has membership dues"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "Member's role in group, if any: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "Member's last visit to the group site, in milliseconds since the epoch"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a shorted URL for the group"
        },
        "similar_groups": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns up to 5 groups similar to this groups, best suited for the authenticated member when a single group is queried for. Note: this field is being deprecated in favor of making a separate request to /:urlname/similar_groups"
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in simple HTML source format. If this group's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\" request parameter value contains \"simple_html_description\""
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "This represents the universal timezone identifier for the group"
        },
        "untranslated_city": {
          "location": "query",
          "required": false,
          "description": "City of the group, not translated"
        },
        "upcoming_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of upcoming events belonging to the group."
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Who can see this group. One of members, public or public_limited"
        },
        "welcome_message": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the Group's default welcome message if the authenticated member is the organizer of the group"
        },
        "add_topics": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited list of topic ids to associate with group"
        },
        "dryrun": {
          "location": "query",
          "required": false,
          "description": "Boolean parameter that will cause this endpoint to apply all validation rules without actually saving changes in which case the response will only reflect the group's current attributes"
        },
        "question_edit_{id}": {
          "location": "query",
          "required": false,
          "description": "Edits a current profile question identified by an id in the parameter name. The index updated index should also be encoded in the parameter name. To delete a question, set this to an empty string. Groups that require profile questions must have at least one question"
        },
        "question_{index}": {
          "location": "query",
          "required": false,
          "description": "A new profile question defined in the order of index provided in the request parameter name"
        },
        "remove_topics": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited list of topic ids to disassociate with group"
        },
        "{service}_uri": {
          "location": "query",
          "required": false,
          "description": "A URI for a social network service. Service must be one of facebook, flickr, linkedin, other, tumblr, twitter"
        }
      },
      "summary": "Fetches a Meetup group by urlname",
      "uri": "/{urlname}/#get",
      "notes": null
    },
    "GroupEdit": {
      "version": "3",
      "name": "GroupEdit",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "add_topics": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited list of topic ids to associate with group"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country of the group"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Short description of group"
        },
        "dryrun": {
          "location": "query",
          "required": false,
          "description": "Boolean parameter that will cause this endpoint to apply all validation rules without actually saving changes in which case the response will only reflect the group's current attributes"
        },
        "ga_code": {
          "location": "query",
          "required": false,
          "description": "Optional field return the Google Analytics code for the group. Only members that can edit group settings can see this"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "list_addr": {
          "location": "query",
          "required": false,
          "description": "Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this"
        },
        "list_mode": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the policy for who can post the group mailing list. Returned when the \"fields\" request parameter value contains \"list_mode\". Value may be one of \"moderated\", \"off\", \"open\", or \"orgs_only\""
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "question_edit_{id}": {
          "location": "query",
          "required": false,
          "description": "Edits a current profile question identified by an id in the parameter name. The index updated index should also be encoded in the parameter name. To delete a question, set this to an empty string. Groups that require profile questions must have at least one question"
        },
        "question_{index}": {
          "location": "query",
          "required": false,
          "description": "A new profile question defined in the order of index provided in the request parameter name"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "remove_topics": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited list of topic ids to disassociate with group"
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Who can see this group. One of members, public or public_limited"
        },
        "welcome_message": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the Group's default welcome message if the authenticated member is the organizer of the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "The ZIP code of the city"
        },
        "{service}_uri": {
          "location": "query",
          "required": false,
          "description": "A URI for a social network service. Service must be one of facebook, flickr, linkedin, other, tumblr, twitter"
        },
        "approved": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this Group has been approved or not. New Groups are generally approved (or removed) soon after creation. Returned when the \"fields\" request parameter value includes \"approved\""
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "The primary category of the group, if the group has one"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of the group"
        },
        "city_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a URL for the group's city"
        },
        "contributions": {
          "location": "query",
          "required": false,
          "description": "Optional field containing the contribution details of the group"
        },
        "enabled": {
          "location": "query",
          "required": false,
          "description": "Boolean stating if contributions are enabled for the group"
        },
        "potential": {
          "location": "query",
          "required": false,
          "description": "Boolean stating that potential contributions are enabled for the group"
        },
        "reason": {
          "location": "query",
          "required": false,
          "description": "The reason a member might consider contributing"
        },
        "thanks": {
          "location": "query",
          "required": false,
          "description": "The 'thank you' message to be given when a contribution is made"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the group was created in milliseconds since the epoch"
        },
        "discussion_preferences": {
          "location": "query",
          "required": false,
          "description": "Optional field that contains preference and permission data for group discussions"
        },
        "draft_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of draft events belonging to the group."
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Optional field, returns payment options for event ticketing"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "is_simplehtml": {
          "location": "query",
          "required": false,
          "description": "Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise."
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Optional field, lists any questions requested when joining and required fields"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "The text of the question"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last hosted event, if the group has one. Returned when the \"fields\" request parameter value contains \"last_event\""
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Latitude"
        },
        "leader_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup leaders limit in group (4 leaders for the Basic Subscription), note this info available only for orgs and coorgs"
        },
        "leads": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the number of members on this group's leadership team. Returned when the \"fields\" request parameter value contains \"leads\""
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to group on meetup.com"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "Name of country of the group"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Longitude"
        },
        "member_cap": {
          "location": "query",
          "required": false,
          "description": "Number representing the maximum number of active members this group can have if capped. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "member_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup members limit in group (now it's 50 members in the Basic Subscription)"
        },
        "members": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup members in this group"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues if the group has membership dues"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "amazon_payments": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Amazon Payments are accepted"
        },
        "credit_card": {
          "location": "query",
          "required": false,
          "description": "(Deprecated - use wepay instead) Boolean indicator that credit cards are accepted"
        },
        "other": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that other forms of payment are accepted"
        },
        "paypal": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Paypal payments are accepted"
        },
        "wepay": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Wepay payments are accepted"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "Conditions for refunds"
        },
        "custom": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of a custom refund policy"
        },
        "group_closes": {
          "location": "query",
          "required": false,
          "description": "refund applies when the group closes"
        },
        "member_banned": {
          "location": "query",
          "required": false,
          "description": "refund applies when the member is banned"
        },
        "member_leaves": {
          "location": "query",
          "required": false,
          "description": "refund applies when member leaves the group"
        },
        "none": {
          "location": "query",
          "required": false,
          "description": "indicates there is no refund policy"
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Organizer photo, where defined"
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "The current ongoing or next upcoming event, if one is scheduled"
        },
        "nominated_member": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns if the logged in member has been nominated to take over the group."
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Group's primary organizer"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Bio of member"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of past events belonging to the group."
        },
        "pending_members": {
          "location": "query",
          "required": false,
          "description": "Number representing the count of members pending organizer approval to join. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "photos": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. A small set of photos from the group"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format. Returned when then \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format with no images. Returned when then \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "proposed_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of proposed events belonging to the group."
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Optional field, contains details specific to the authorized user in this Meetup Group"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially \"broadcast_message\": the ability to broadcast messages to group members via the \"announce\" mailing list, \"event_create\": the ability to create new events, \"event_draft\": the ability to save new events as drafts, \"role_assign\": the ability to assign member roles, \"edit\": the ability to edit group settings, \"member_approval\": the ability to approve or decline member requests to join, or \"subscription_upgrade\": the ability to upgrade this group's subscription plan"
        },
        "cancelled": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that membership dues were cancelled"
        },
        "exempt": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that the member is exempt from payment."
        },
        "paid_until": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns the time in milliseconds since the epoch that the member's next payment is due"
        },
        "period_status": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns one of the following values grace paid pending unpaid"
        },
        "total_amount": {
          "location": "query",
          "required": false,
          "description": "Total amount paid"
        },
        "transaction_time": {
          "location": "query",
          "required": false,
          "description": "Time the transaction was made in milliseconds since the epoch"
        },
        "trial": {
          "location": "query",
          "required": false,
          "description": "If the group offers a trial membership, this indicates information for unpaid members."
        },
        "previous_membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues history when currently not a part of group i.e Status=none if the group has membership dues"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "Member's role in group, if any: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "Member's last visit to the group site, in milliseconds since the epoch"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a shorted URL for the group"
        },
        "similar_groups": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns up to 5 groups similar to this groups, best suited for the authenticated member when a single group is queried for. Note: this field is being deprecated in favor of making a separate request to /:urlname/similar_groups"
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in simple HTML source format. If this group's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\" request parameter value contains \"simple_html_description\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of the group, if in US or Canada"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "This represents the universal timezone identifier for the group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the group's topics"
        },
        "untranslated_city": {
          "location": "query",
          "required": false,
          "description": "City of the group, not translated"
        },
        "upcoming_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of upcoming events belonging to the group."
        }
      },
      "summary": "Allows organizers to edit their Meetup group information. To change group topics, see the add and remove topics endpoints. To change group photo use the Group photo upload endpoint. OAuth authenticated requests require an additional group_edit permission.",
      "uri": "/{urlname}/#edit",
      "notes": null
    },
    "Similargroups": {
      "version": "3",
      "name": "Similargroups",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "approved": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this Group has been approved or not. New Groups are generally approved (or removed) soon after creation. Returned when the \"fields\" request parameter value includes \"approved\""
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "The primary category of the group, if the group has one"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of the group"
        },
        "city_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a URL for the group's city"
        },
        "contributions": {
          "location": "query",
          "required": false,
          "description": "Optional field containing the contribution details of the group"
        },
        "enabled": {
          "location": "query",
          "required": false,
          "description": "Boolean stating if contributions are enabled for the group"
        },
        "potential": {
          "location": "query",
          "required": false,
          "description": "Boolean stating that potential contributions are enabled for the group"
        },
        "reason": {
          "location": "query",
          "required": false,
          "description": "The reason a member might consider contributing"
        },
        "thanks": {
          "location": "query",
          "required": false,
          "description": "The 'thank you' message to be given when a contribution is made"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country of the group"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the group was created in milliseconds since the epoch"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Short description of group"
        },
        "discussion_preferences": {
          "location": "query",
          "required": false,
          "description": "Optional field that contains preference and permission data for group discussions"
        },
        "draft_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of draft events belonging to the group."
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Optional field, returns payment options for event ticketing"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "ga_code": {
          "location": "query",
          "required": false,
          "description": "Optional field return the Google Analytics code for the group. Only members that can edit group settings can see this"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "is_simplehtml": {
          "location": "query",
          "required": false,
          "description": "Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise."
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Optional field, lists any questions requested when joining and required fields"
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "The text of the question"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last hosted event, if the group has one. Returned when the \"fields\" request parameter value contains \"last_event\""
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Latitude"
        },
        "leader_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup leaders limit in group (4 leaders for the Basic Subscription), note this info available only for orgs and coorgs"
        },
        "leads": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the number of members on this group's leadership team. Returned when the \"fields\" request parameter value contains \"leads\""
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to group on meetup.com"
        },
        "list_addr": {
          "location": "query",
          "required": false,
          "description": "Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this"
        },
        "list_mode": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the policy for who can post the group mailing list. Returned when the \"fields\" request parameter value contains \"list_mode\". Value may be one of \"moderated\", \"off\", \"open\", or \"orgs_only\""
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "Name of country of the group"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Longitude"
        },
        "member_cap": {
          "location": "query",
          "required": false,
          "description": "Number representing the maximum number of active members this group can have if capped. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "member_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup members limit in group (now it's 50 members in the Basic Subscription)"
        },
        "members": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup members in this group"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues if the group has membership dues"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "amazon_payments": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Amazon Payments are accepted"
        },
        "credit_card": {
          "location": "query",
          "required": false,
          "description": "(Deprecated - use wepay instead) Boolean indicator that credit cards are accepted"
        },
        "other": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that other forms of payment are accepted"
        },
        "paypal": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Paypal payments are accepted"
        },
        "wepay": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Wepay payments are accepted"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "Conditions for refunds"
        },
        "custom": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of a custom refund policy"
        },
        "group_closes": {
          "location": "query",
          "required": false,
          "description": "refund applies when the group closes"
        },
        "member_banned": {
          "location": "query",
          "required": false,
          "description": "refund applies when the member is banned"
        },
        "member_leaves": {
          "location": "query",
          "required": false,
          "description": "refund applies when member leaves the group"
        },
        "none": {
          "location": "query",
          "required": false,
          "description": "indicates there is no refund policy"
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Organizer photo, where defined"
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "The current ongoing or next upcoming event, if one is scheduled"
        },
        "nominated_member": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns if the logged in member has been nominated to take over the group."
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Group's primary organizer"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Bio of member"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of past events belonging to the group."
        },
        "pending_members": {
          "location": "query",
          "required": false,
          "description": "Number representing the count of members pending organizer approval to join. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "photos": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. A small set of photos from the group"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format. Returned when then \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format with no images. Returned when then \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "proposed_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of proposed events belonging to the group."
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Optional field, contains details specific to the authorized user in this Meetup Group"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially \"broadcast_message\": the ability to broadcast messages to group members via the \"announce\" mailing list, \"event_create\": the ability to create new events, \"event_draft\": the ability to save new events as drafts, \"role_assign\": the ability to assign member roles, \"edit\": the ability to edit group settings, \"member_approval\": the ability to approve or decline member requests to join, or \"subscription_upgrade\": the ability to upgrade this group's subscription plan"
        },
        "cancelled": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that membership dues were cancelled"
        },
        "exempt": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that the member is exempt from payment."
        },
        "paid_until": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns the time in milliseconds since the epoch that the member's next payment is due"
        },
        "period_status": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns one of the following values grace paid pending unpaid"
        },
        "total_amount": {
          "location": "query",
          "required": false,
          "description": "Total amount paid"
        },
        "transaction_time": {
          "location": "query",
          "required": false,
          "description": "Time the transaction was made in milliseconds since the epoch"
        },
        "trial": {
          "location": "query",
          "required": false,
          "description": "If the group offers a trial membership, this indicates information for unpaid members."
        },
        "previous_membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues history when currently not a part of group i.e Status=none if the group has membership dues"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "Member's role in group, if any: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "Member's last visit to the group site, in milliseconds since the epoch"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a shorted URL for the group"
        },
        "similar_groups": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns up to 5 groups similar to this groups, best suited for the authenticated member when a single group is queried for. Note: this field is being deprecated in favor of making a separate request to /:urlname/similar_groups"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in simple HTML source format. If this group's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\" request parameter value contains \"simple_html_description\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of the group, if in US or Canada"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "This represents the universal timezone identifier for the group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the group's topics"
        },
        "untranslated_city": {
          "location": "query",
          "required": false,
          "description": "City of the group, not translated"
        },
        "upcoming_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of upcoming events belonging to the group."
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Who can see this group. One of members, public or public_limited"
        },
        "welcome_message": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the Group's default welcome message if the authenticated member is the organizer of the group"
        }
      },
      "summary": "Renders a list of similar groups",
      "uri": "/{urlname}/similar_groups/",
      "notes": "The :urlname path element may be any valid group urlname or domain name."
    },
    "GroupTopicsAdd": {
      "version": "3",
      "name": "GroupTopicsAdd",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "topic_id": {
          "location": "query",
          "required": true,
          "description": "Comma-delimited list of topic ids to disassociate with group"
        },
        "approved": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this Group has been approved or not. New Groups are generally approved (or removed) soon after creation. Returned when the \"fields\" request parameter value includes \"approved\""
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "The primary category of the group, if the group has one"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of the group"
        },
        "city_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a URL for the group's city"
        },
        "contributions": {
          "location": "query",
          "required": false,
          "description": "Optional field containing the contribution details of the group"
        },
        "enabled": {
          "location": "query",
          "required": false,
          "description": "Boolean stating if contributions are enabled for the group"
        },
        "potential": {
          "location": "query",
          "required": false,
          "description": "Boolean stating that potential contributions are enabled for the group"
        },
        "reason": {
          "location": "query",
          "required": false,
          "description": "The reason a member might consider contributing"
        },
        "thanks": {
          "location": "query",
          "required": false,
          "description": "The 'thank you' message to be given when a contribution is made"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country of the group"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the group was created in milliseconds since the epoch"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Short description of group"
        },
        "discussion_preferences": {
          "location": "query",
          "required": false,
          "description": "Optional field that contains preference and permission data for group discussions"
        },
        "draft_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of draft events belonging to the group."
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Optional field, returns payment options for event ticketing"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "ga_code": {
          "location": "query",
          "required": false,
          "description": "Optional field return the Google Analytics code for the group. Only members that can edit group settings can see this"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "is_simplehtml": {
          "location": "query",
          "required": false,
          "description": "Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise."
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Optional field, lists any questions requested when joining and required fields"
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "The text of the question"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last hosted event, if the group has one. Returned when the \"fields\" request parameter value contains \"last_event\""
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Latitude"
        },
        "leader_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup leaders limit in group (4 leaders for the Basic Subscription), note this info available only for orgs and coorgs"
        },
        "leads": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the number of members on this group's leadership team. Returned when the \"fields\" request parameter value contains \"leads\""
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to group on meetup.com"
        },
        "list_addr": {
          "location": "query",
          "required": false,
          "description": "Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this"
        },
        "list_mode": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the policy for who can post the group mailing list. Returned when the \"fields\" request parameter value contains \"list_mode\". Value may be one of \"moderated\", \"off\", \"open\", or \"orgs_only\""
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "Name of country of the group"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Longitude"
        },
        "member_cap": {
          "location": "query",
          "required": false,
          "description": "Number representing the maximum number of active members this group can have if capped. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "member_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup members limit in group (now it's 50 members in the Basic Subscription)"
        },
        "members": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup members in this group"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues if the group has membership dues"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "amazon_payments": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Amazon Payments are accepted"
        },
        "credit_card": {
          "location": "query",
          "required": false,
          "description": "(Deprecated - use wepay instead) Boolean indicator that credit cards are accepted"
        },
        "other": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that other forms of payment are accepted"
        },
        "paypal": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Paypal payments are accepted"
        },
        "wepay": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Wepay payments are accepted"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "Conditions for refunds"
        },
        "custom": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of a custom refund policy"
        },
        "group_closes": {
          "location": "query",
          "required": false,
          "description": "refund applies when the group closes"
        },
        "member_banned": {
          "location": "query",
          "required": false,
          "description": "refund applies when the member is banned"
        },
        "member_leaves": {
          "location": "query",
          "required": false,
          "description": "refund applies when member leaves the group"
        },
        "none": {
          "location": "query",
          "required": false,
          "description": "indicates there is no refund policy"
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Organizer photo, where defined"
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "The current ongoing or next upcoming event, if one is scheduled"
        },
        "nominated_member": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns if the logged in member has been nominated to take over the group."
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Group's primary organizer"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Bio of member"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of past events belonging to the group."
        },
        "pending_members": {
          "location": "query",
          "required": false,
          "description": "Number representing the count of members pending organizer approval to join. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "photos": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. A small set of photos from the group"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format. Returned when then \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format with no images. Returned when then \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "proposed_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of proposed events belonging to the group."
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Optional field, contains details specific to the authorized user in this Meetup Group"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially \"broadcast_message\": the ability to broadcast messages to group members via the \"announce\" mailing list, \"event_create\": the ability to create new events, \"event_draft\": the ability to save new events as drafts, \"role_assign\": the ability to assign member roles, \"edit\": the ability to edit group settings, \"member_approval\": the ability to approve or decline member requests to join, or \"subscription_upgrade\": the ability to upgrade this group's subscription plan"
        },
        "cancelled": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that membership dues were cancelled"
        },
        "exempt": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that the member is exempt from payment."
        },
        "paid_until": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns the time in milliseconds since the epoch that the member's next payment is due"
        },
        "period_status": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns one of the following values grace paid pending unpaid"
        },
        "total_amount": {
          "location": "query",
          "required": false,
          "description": "Total amount paid"
        },
        "transaction_time": {
          "location": "query",
          "required": false,
          "description": "Time the transaction was made in milliseconds since the epoch"
        },
        "trial": {
          "location": "query",
          "required": false,
          "description": "If the group offers a trial membership, this indicates information for unpaid members."
        },
        "previous_membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues history when currently not a part of group i.e Status=none if the group has membership dues"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "Member's role in group, if any: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "Member's last visit to the group site, in milliseconds since the epoch"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a shorted URL for the group"
        },
        "similar_groups": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns up to 5 groups similar to this groups, best suited for the authenticated member when a single group is queried for. Note: this field is being deprecated in favor of making a separate request to /:urlname/similar_groups"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in simple HTML source format. If this group's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\" request parameter value contains \"simple_html_description\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of the group, if in US or Canada"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "This represents the universal timezone identifier for the group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the group's topics"
        },
        "untranslated_city": {
          "location": "query",
          "required": false,
          "description": "City of the group, not translated"
        },
        "upcoming_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of upcoming events belonging to the group."
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Who can see this group. One of members, public or public_limited"
        },
        "welcome_message": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the Group's default welcome message if the authenticated member is the organizer of the group"
        }
      },
      "summary": "Associates topics with a given Meetup group. Limited to organizers of the group. OAuth authenticated requests require an additional group_edit permission.",
      "uri": "/{urlname}/topics/#add",
      "notes": null
    },
    "GroupTopicsRemove": {
      "version": "3",
      "name": "GroupTopicsRemove",
      "httpMethod": "DELETE",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "topic_id": {
          "location": "query",
          "required": true,
          "description": "Comma-delimited list of topic ids to disassociate with group"
        },
        "approved": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this Group has been approved or not. New Groups are generally approved (or removed) soon after creation. Returned when the \"fields\" request parameter value includes \"approved\""
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "The primary category of the group, if the group has one"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of the group"
        },
        "city_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a URL for the group's city"
        },
        "contributions": {
          "location": "query",
          "required": false,
          "description": "Optional field containing the contribution details of the group"
        },
        "enabled": {
          "location": "query",
          "required": false,
          "description": "Boolean stating if contributions are enabled for the group"
        },
        "potential": {
          "location": "query",
          "required": false,
          "description": "Boolean stating that potential contributions are enabled for the group"
        },
        "reason": {
          "location": "query",
          "required": false,
          "description": "The reason a member might consider contributing"
        },
        "thanks": {
          "location": "query",
          "required": false,
          "description": "The 'thank you' message to be given when a contribution is made"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country of the group"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the group was created in milliseconds since the epoch"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Short description of group"
        },
        "discussion_preferences": {
          "location": "query",
          "required": false,
          "description": "Optional field that contains preference and permission data for group discussions"
        },
        "draft_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of draft events belonging to the group."
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Optional field, returns payment options for event ticketing"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "ga_code": {
          "location": "query",
          "required": false,
          "description": "Optional field return the Google Analytics code for the group. Only members that can edit group settings can see this"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "is_simplehtml": {
          "location": "query",
          "required": false,
          "description": "Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise."
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Optional field, lists any questions requested when joining and required fields"
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "The text of the question"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last hosted event, if the group has one. Returned when the \"fields\" request parameter value contains \"last_event\""
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Latitude"
        },
        "leader_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup leaders limit in group (4 leaders for the Basic Subscription), note this info available only for orgs and coorgs"
        },
        "leads": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the number of members on this group's leadership team. Returned when the \"fields\" request parameter value contains \"leads\""
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to group on meetup.com"
        },
        "list_addr": {
          "location": "query",
          "required": false,
          "description": "Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this"
        },
        "list_mode": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the policy for who can post the group mailing list. Returned when the \"fields\" request parameter value contains \"list_mode\". Value may be one of \"moderated\", \"off\", \"open\", or \"orgs_only\""
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "Name of country of the group"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Longitude"
        },
        "member_cap": {
          "location": "query",
          "required": false,
          "description": "Number representing the maximum number of active members this group can have if capped. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "member_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup members limit in group (now it's 50 members in the Basic Subscription)"
        },
        "members": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup members in this group"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues if the group has membership dues"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "amazon_payments": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Amazon Payments are accepted"
        },
        "credit_card": {
          "location": "query",
          "required": false,
          "description": "(Deprecated - use wepay instead) Boolean indicator that credit cards are accepted"
        },
        "other": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that other forms of payment are accepted"
        },
        "paypal": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Paypal payments are accepted"
        },
        "wepay": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Wepay payments are accepted"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "Conditions for refunds"
        },
        "custom": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of a custom refund policy"
        },
        "group_closes": {
          "location": "query",
          "required": false,
          "description": "refund applies when the group closes"
        },
        "member_banned": {
          "location": "query",
          "required": false,
          "description": "refund applies when the member is banned"
        },
        "member_leaves": {
          "location": "query",
          "required": false,
          "description": "refund applies when member leaves the group"
        },
        "none": {
          "location": "query",
          "required": false,
          "description": "indicates there is no refund policy"
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Organizer photo, where defined"
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "The current ongoing or next upcoming event, if one is scheduled"
        },
        "nominated_member": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns if the logged in member has been nominated to take over the group."
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Group's primary organizer"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Bio of member"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of past events belonging to the group."
        },
        "pending_members": {
          "location": "query",
          "required": false,
          "description": "Number representing the count of members pending organizer approval to join. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "photos": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. A small set of photos from the group"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format. Returned when then \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format with no images. Returned when then \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "proposed_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of proposed events belonging to the group."
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Optional field, contains details specific to the authorized user in this Meetup Group"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially \"broadcast_message\": the ability to broadcast messages to group members via the \"announce\" mailing list, \"event_create\": the ability to create new events, \"event_draft\": the ability to save new events as drafts, \"role_assign\": the ability to assign member roles, \"edit\": the ability to edit group settings, \"member_approval\": the ability to approve or decline member requests to join, or \"subscription_upgrade\": the ability to upgrade this group's subscription plan"
        },
        "cancelled": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that membership dues were cancelled"
        },
        "exempt": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that the member is exempt from payment."
        },
        "paid_until": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns the time in milliseconds since the epoch that the member's next payment is due"
        },
        "period_status": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns one of the following values grace paid pending unpaid"
        },
        "total_amount": {
          "location": "query",
          "required": false,
          "description": "Total amount paid"
        },
        "transaction_time": {
          "location": "query",
          "required": false,
          "description": "Time the transaction was made in milliseconds since the epoch"
        },
        "trial": {
          "location": "query",
          "required": false,
          "description": "If the group offers a trial membership, this indicates information for unpaid members."
        },
        "previous_membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues history when currently not a part of group i.e Status=none if the group has membership dues"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "Member's role in group, if any: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "Member's last visit to the group site, in milliseconds since the epoch"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a shorted URL for the group"
        },
        "similar_groups": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns up to 5 groups similar to this groups, best suited for the authenticated member when a single group is queried for. Note: this field is being deprecated in favor of making a separate request to /:urlname/similar_groups"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in simple HTML source format. If this group's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\" request parameter value contains \"simple_html_description\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of the group, if in US or Canada"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "This represents the universal timezone identifier for the group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the group's topics"
        },
        "untranslated_city": {
          "location": "query",
          "required": false,
          "description": "City of the group, not translated"
        },
        "upcoming_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of upcoming events belonging to the group."
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Who can see this group. One of members, public or public_limited"
        },
        "welcome_message": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the Group's default welcome message if the authenticated member is the organizer of the group"
        }
      },
      "summary": "Disassociates topics with a given Meetup group. Limited to organizers of the group. OAuth authenticated requests require an additional group_edit permission.",
      "uri": "/{urlname}/topics/#remove",
      "notes": null
    },
    "FindGroups": {
      "version": "3",
      "name": "FindGroups",
      "httpMethod": "GET",
      "parameters": {
        "category": {
          "location": "query",
          "required": false,
          "description": "The primary category of the group, if the group has one"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country of the group"
        },
        "fallback_suggestions": {
          "location": "query",
          "required": false,
          "description": "boolean indicator of whether or not to return a list of curated suggestions for groups if we can't find groups matching your criteria"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "Request that additional fields (separated by commas) be included in the output."
        },
        "filter": {
          "location": "query",
          "required": false,
          "description": "Determines which groups are returned. If 'all' (default), the text and category parameters are applied. If 'friends', groups your friends are in are returned. The value of this parameter may be one of all, friends"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Latitude"
        },
        "location": {
          "location": "query",
          "required": false,
          "description": "Raw text location query"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Longitude"
        },
        "radius": {
          "location": "query",
          "required": false,
          "description": "Radius in miles. May be 0.0-100.0, 'global' or 'smart', a dynamic radius based on the number of active groups in the area. Defaults to member's preferred radius"
        },
        "self_groups": {
          "location": "query",
          "required": false,
          "description": "set to 'include' or 'exclude' Meetups the authorized member belongs to; default is 'include'"
        },
        "text": {
          "location": "query",
          "required": false,
          "description": "Raw full text search query"
        },
        "topic_id": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited list of numeric topic ids"
        },
        "upcoming_events": {
          "location": "query",
          "required": false,
          "description": "If true, filters text and category based searches on groups that have upcoming events. Defaults to false"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "Zipcode of location to limit search to"
        },
        "distance": {
          "location": "query",
          "required": false,
          "description": "Order by distance"
        },
        "members": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup members in this group"
        },
        "most_active": {
          "location": "query",
          "required": false,
          "description": "Order by group with most active members"
        },
        "newest": {
          "location": "query",
          "required": false,
          "description": "Order by date group was founded"
        },
        "approved": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this Group has been approved or not. New Groups are generally approved (or removed) soon after creation. Returned when the \"fields\" request parameter value includes \"approved\""
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of the group"
        },
        "city_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a URL for the group's city"
        },
        "contributions": {
          "location": "query",
          "required": false,
          "description": "Optional field containing the contribution details of the group"
        },
        "enabled": {
          "location": "query",
          "required": false,
          "description": "Boolean stating if contributions are enabled for the group"
        },
        "potential": {
          "location": "query",
          "required": false,
          "description": "Boolean stating that potential contributions are enabled for the group"
        },
        "reason": {
          "location": "query",
          "required": false,
          "description": "The reason a member might consider contributing"
        },
        "thanks": {
          "location": "query",
          "required": false,
          "description": "The 'thank you' message to be given when a contribution is made"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the group was created in milliseconds since the epoch"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Short description of group"
        },
        "discussion_preferences": {
          "location": "query",
          "required": false,
          "description": "Optional field that contains preference and permission data for group discussions"
        },
        "draft_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of draft events belonging to the group."
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Optional field, returns payment options for event ticketing"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "ga_code": {
          "location": "query",
          "required": false,
          "description": "Optional field return the Google Analytics code for the group. Only members that can edit group settings can see this"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "is_simplehtml": {
          "location": "query",
          "required": false,
          "description": "Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise."
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Optional field, lists any questions requested when joining and required fields"
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "The text of the question"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last hosted event, if the group has one. Returned when the \"fields\" request parameter value contains \"last_event\""
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "leader_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup leaders limit in group (4 leaders for the Basic Subscription), note this info available only for orgs and coorgs"
        },
        "leads": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the number of members on this group's leadership team. Returned when the \"fields\" request parameter value contains \"leads\""
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to group on meetup.com"
        },
        "list_addr": {
          "location": "query",
          "required": false,
          "description": "Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this"
        },
        "list_mode": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the policy for who can post the group mailing list. Returned when the \"fields\" request parameter value contains \"list_mode\". Value may be one of \"moderated\", \"off\", \"open\", or \"orgs_only\""
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "Name of country of the group"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "member_cap": {
          "location": "query",
          "required": false,
          "description": "Number representing the maximum number of active members this group can have if capped. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "member_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup members limit in group (now it's 50 members in the Basic Subscription)"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues if the group has membership dues"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "amazon_payments": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Amazon Payments are accepted"
        },
        "credit_card": {
          "location": "query",
          "required": false,
          "description": "(Deprecated - use wepay instead) Boolean indicator that credit cards are accepted"
        },
        "other": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that other forms of payment are accepted"
        },
        "paypal": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Paypal payments are accepted"
        },
        "wepay": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Wepay payments are accepted"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "Conditions for refunds"
        },
        "custom": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of a custom refund policy"
        },
        "group_closes": {
          "location": "query",
          "required": false,
          "description": "refund applies when the group closes"
        },
        "member_banned": {
          "location": "query",
          "required": false,
          "description": "refund applies when the member is banned"
        },
        "member_leaves": {
          "location": "query",
          "required": false,
          "description": "refund applies when member leaves the group"
        },
        "none": {
          "location": "query",
          "required": false,
          "description": "indicates there is no refund policy"
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Organizer photo, where defined"
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "The current ongoing or next upcoming event, if one is scheduled"
        },
        "nominated_member": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns if the logged in member has been nominated to take over the group."
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Group's primary organizer"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Bio of member"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of past events belonging to the group."
        },
        "pending_members": {
          "location": "query",
          "required": false,
          "description": "Number representing the count of members pending organizer approval to join. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "photos": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. A small set of photos from the group"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format. Returned when then \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format with no images. Returned when then \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "proposed_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of proposed events belonging to the group."
        },
        "score": {
          "location": "query",
          "required": false,
          "description": "A numeric value representing how the relevancy of the group in this search context"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Optional field, contains details specific to the authorized user in this Meetup Group"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially \"broadcast_message\": the ability to broadcast messages to group members via the \"announce\" mailing list, \"event_create\": the ability to create new events, \"event_draft\": the ability to save new events as drafts, \"role_assign\": the ability to assign member roles, \"edit\": the ability to edit group settings, \"member_approval\": the ability to approve or decline member requests to join, or \"subscription_upgrade\": the ability to upgrade this group's subscription plan"
        },
        "cancelled": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that membership dues were cancelled"
        },
        "exempt": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that the member is exempt from payment."
        },
        "paid_until": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns the time in milliseconds since the epoch that the member's next payment is due"
        },
        "period_status": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns one of the following values grace paid pending unpaid"
        },
        "total_amount": {
          "location": "query",
          "required": false,
          "description": "Total amount paid"
        },
        "transaction_time": {
          "location": "query",
          "required": false,
          "description": "Time the transaction was made in milliseconds since the epoch"
        },
        "trial": {
          "location": "query",
          "required": false,
          "description": "If the group offers a trial membership, this indicates information for unpaid members."
        },
        "previous_membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues history when currently not a part of group i.e Status=none if the group has membership dues"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "Member's role in group, if any: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "Member's last visit to the group site, in milliseconds since the epoch"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a shorted URL for the group"
        },
        "similar_groups": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns up to 5 groups similar to this groups, best suited for the authenticated member when a single group is queried for. Note: this field is being deprecated in favor of making a separate request to /:urlname/similar_groups"
        },
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in simple HTML source format. If this group's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\" request parameter value contains \"simple_html_description\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of the group, if in US or Canada"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "This represents the universal timezone identifier for the group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the group's topics"
        },
        "untranslated_city": {
          "location": "query",
          "required": false,
          "description": "City of the group, not translated"
        },
        "upcoming_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of upcoming events belonging to the group."
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Who can see this group. One of members, public or public_limited"
        },
        "welcome_message": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the Group's default welcome message if the authenticated member is the organizer of the group"
        }
      },
      "summary": "Text, location, category and friend-based group searches",
      "uri": "/find/groups/",
      "notes": "All parameters are optional. If you do not supply some explicit form of location, the results will be based on your registered Meetup profile location, falling back on your IP's geographic location. If we can't find find Meetup groups matching your criteria you may optionally request that a small set of suggestions are returned in their place. To do so, send a request parameter named fallback_suggestions set to true. You can infer that a list of Meetup groups return are fallback suggestions when the X-Total-Count pagination response header has a 0 value. See the 'filter' parameter for more information controlling the results returned. Ordering does not apply to friend-filtered queries."
    },
    "RecommendedGroups": {
      "version": "3",
      "name": "RecommendedGroups",
      "httpMethod": "GET",
      "parameters": {
        "category": {
          "location": "query",
          "required": false,
          "description": "The primary category of the group, if the group has one"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country of the group"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "Request that additional fields (separated by commas) be included in the output."
        },
        "instant_join_only": {
          "location": "query",
          "required": false,
          "description": "Recommend only groups without join requirements and that can be joined instantly"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Latitude"
        },
        "location": {
          "location": "query",
          "required": false,
          "description": "Raw text location query"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Longitude"
        },
        "radius": {
          "location": "query",
          "required": false,
          "description": "Radius in miles. May be 0.0-100.0, 'global' or 'smart', a dynamic radius based on the number of active groups in the area. Defaults to member's preferred radius"
        },
        "sort": {
          "location": "query",
          "required": false,
          "description": "How to order the results. Valid values are \"default\" or \"static\"."
        },
        "topic_id": {
          "location": "query",
          "required": false,
          "description": "Comma delimited list of up to 100 topic ids to help inform recommendations"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "Zip code you are searching for recommendations in"
        },
        "approved": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this Group has been approved or not. New Groups are generally approved (or removed) soon after creation. Returned when the \"fields\" request parameter value includes \"approved\""
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of the group"
        },
        "city_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a URL for the group's city"
        },
        "contributions": {
          "location": "query",
          "required": false,
          "description": "Optional field containing the contribution details of the group"
        },
        "enabled": {
          "location": "query",
          "required": false,
          "description": "Boolean stating if contributions are enabled for the group"
        },
        "potential": {
          "location": "query",
          "required": false,
          "description": "Boolean stating that potential contributions are enabled for the group"
        },
        "reason": {
          "location": "query",
          "required": false,
          "description": "The reason a member might consider contributing"
        },
        "thanks": {
          "location": "query",
          "required": false,
          "description": "The 'thank you' message to be given when a contribution is made"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the group was created in milliseconds since the epoch"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Short description of group"
        },
        "discussion_preferences": {
          "location": "query",
          "required": false,
          "description": "Optional field that contains preference and permission data for group discussions"
        },
        "draft_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of draft events belonging to the group."
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Optional field, returns payment options for event ticketing"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "ga_code": {
          "location": "query",
          "required": false,
          "description": "Optional field return the Google Analytics code for the group. Only members that can edit group settings can see this"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "is_simplehtml": {
          "location": "query",
          "required": false,
          "description": "Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise."
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Optional field, lists any questions requested when joining and required fields"
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "The text of the question"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last hosted event, if the group has one. Returned when the \"fields\" request parameter value contains \"last_event\""
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "leader_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup leaders limit in group (4 leaders for the Basic Subscription), note this info available only for orgs and coorgs"
        },
        "leads": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the number of members on this group's leadership team. Returned when the \"fields\" request parameter value contains \"leads\""
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to group on meetup.com"
        },
        "list_addr": {
          "location": "query",
          "required": false,
          "description": "Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this"
        },
        "list_mode": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the policy for who can post the group mailing list. Returned when the \"fields\" request parameter value contains \"list_mode\". Value may be one of \"moderated\", \"off\", \"open\", or \"orgs_only\""
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "Name of country of the group"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "member_cap": {
          "location": "query",
          "required": false,
          "description": "Number representing the maximum number of active members this group can have if capped. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "member_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup members limit in group (now it's 50 members in the Basic Subscription)"
        },
        "members": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup members in this group"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues if the group has membership dues"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "amazon_payments": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Amazon Payments are accepted"
        },
        "credit_card": {
          "location": "query",
          "required": false,
          "description": "(Deprecated - use wepay instead) Boolean indicator that credit cards are accepted"
        },
        "other": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that other forms of payment are accepted"
        },
        "paypal": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Paypal payments are accepted"
        },
        "wepay": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Wepay payments are accepted"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "Conditions for refunds"
        },
        "custom": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of a custom refund policy"
        },
        "group_closes": {
          "location": "query",
          "required": false,
          "description": "refund applies when the group closes"
        },
        "member_banned": {
          "location": "query",
          "required": false,
          "description": "refund applies when the member is banned"
        },
        "member_leaves": {
          "location": "query",
          "required": false,
          "description": "refund applies when member leaves the group"
        },
        "none": {
          "location": "query",
          "required": false,
          "description": "indicates there is no refund policy"
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Organizer photo, where defined"
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "The current ongoing or next upcoming event, if one is scheduled"
        },
        "nominated_member": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns if the logged in member has been nominated to take over the group."
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Group's primary organizer"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Bio of member"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of past events belonging to the group."
        },
        "pending_members": {
          "location": "query",
          "required": false,
          "description": "Number representing the count of members pending organizer approval to join. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "photos": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. A small set of photos from the group"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format. Returned when then \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format with no images. Returned when then \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "proposed_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of proposed events belonging to the group."
        },
        "score": {
          "location": "query",
          "required": false,
          "description": "A numeric value representing how the relevancy of the group in this search context"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Optional field, contains details specific to the authorized user in this Meetup Group"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially \"broadcast_message\": the ability to broadcast messages to group members via the \"announce\" mailing list, \"event_create\": the ability to create new events, \"event_draft\": the ability to save new events as drafts, \"role_assign\": the ability to assign member roles, \"edit\": the ability to edit group settings, \"member_approval\": the ability to approve or decline member requests to join, or \"subscription_upgrade\": the ability to upgrade this group's subscription plan"
        },
        "cancelled": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that membership dues were cancelled"
        },
        "exempt": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that the member is exempt from payment."
        },
        "paid_until": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns the time in milliseconds since the epoch that the member's next payment is due"
        },
        "period_status": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns one of the following values grace paid pending unpaid"
        },
        "total_amount": {
          "location": "query",
          "required": false,
          "description": "Total amount paid"
        },
        "transaction_time": {
          "location": "query",
          "required": false,
          "description": "Time the transaction was made in milliseconds since the epoch"
        },
        "trial": {
          "location": "query",
          "required": false,
          "description": "If the group offers a trial membership, this indicates information for unpaid members."
        },
        "previous_membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues history when currently not a part of group i.e Status=none if the group has membership dues"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "Member's role in group, if any: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "Member's last visit to the group site, in milliseconds since the epoch"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a shorted URL for the group"
        },
        "similar_groups": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns up to 5 groups similar to this groups, best suited for the authenticated member when a single group is queried for. Note: this field is being deprecated in favor of making a separate request to /:urlname/similar_groups"
        },
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in simple HTML source format. If this group's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\" request parameter value contains \"simple_html_description\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of the group, if in US or Canada"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "This represents the universal timezone identifier for the group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the group's topics"
        },
        "untranslated_city": {
          "location": "query",
          "required": false,
          "description": "City of the group, not translated"
        },
        "upcoming_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of upcoming events belonging to the group."
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Who can see this group. One of members, public or public_limited"
        },
        "welcome_message": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the Group's default welcome message if the authenticated member is the organizer of the group"
        }
      },
      "summary": "Returns groups Meetup finds relevant to you",
      "uri": "/recommended/groups/",
      "notes": "All parameters are optional. You may change the 'location' and 'radius' for the request. If you do not supply a location your request will be based on your IP's geographic location. If the server is unable to produce recommendations in a suitable amount of time, a 503 error will be returned."
    },
    "RecommendedGroupsIgnore": {
      "version": "3",
      "name": "RecommendedGroupsIgnore",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        }
      },
      "summary": "Provides a form of feedback by requesting to remove a group from future recommendations",
      "uri": "/recommended/groups/ignores/{urlname}/",
      "notes": "Only the path parameter :urlname is required. You are limited to 100 of these requests in a 24 hour period of time."
    },
    "Membergroups": {
      "version": "3",
      "name": "Membergroups",
      "httpMethod": "GET",
      "parameters": {
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to append to the response"
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Number of groups to return in a single page of results. By default, this is 200"
        },
        "approved": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this Group has been approved or not. New Groups are generally approved (or removed) soon after creation. Returned when the \"fields\" request parameter value includes \"approved\""
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "The primary category of the group, if the group has one"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of the group"
        },
        "city_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a URL for the group's city"
        },
        "contributions": {
          "location": "query",
          "required": false,
          "description": "Optional field containing the contribution details of the group"
        },
        "enabled": {
          "location": "query",
          "required": false,
          "description": "Boolean stating if contributions are enabled for the group"
        },
        "potential": {
          "location": "query",
          "required": false,
          "description": "Boolean stating that potential contributions are enabled for the group"
        },
        "reason": {
          "location": "query",
          "required": false,
          "description": "The reason a member might consider contributing"
        },
        "thanks": {
          "location": "query",
          "required": false,
          "description": "The 'thank you' message to be given when a contribution is made"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country of the group"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the group was created in milliseconds since the epoch"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "discussion_preferences": {
          "location": "query",
          "required": false,
          "description": "Optional field that contains preference and permission data for group discussions"
        },
        "draft_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of draft events belonging to the group."
        },
        "event_sample": {
          "location": "query",
          "required": false,
          "description": "A small sampling of upcoming events. Returned when the \"fields\" request parameter value contains \"event_sample\""
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Optional field, contains details specific to the authorized user in this Meetup Group"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform, potentially \"broadcast_message\": the ability to broadcast messages to group members via the \"announce\" mailing list, \"event_create\": the ability to create new events, \"event_draft\": the ability to save new events as drafts, \"role_assign\": the ability to assign member roles, \"edit\": the ability to edit group settings, \"member_approval\": the ability to approve or decline member requests to join, or \"subscription_upgrade\": the ability to upgrade this group's subscription plan"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The authenticated member's payment status. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "Member's role in group, if any: Organizer, Assistant Organizer, Event Organizer, etc."
        },
        "rsvp": {
          "location": "query",
          "required": false,
          "description": "Member's RSVP, if any"
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes  \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "Contains a list of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\" request parameter"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "The text of the question"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "fee_options": {
          "location": "query",
          "required": false,
          "description": "Optional field, returns payment options for event ticketing"
        },
        "currencies": {
          "location": "query",
          "required": false,
          "description": "Acceptable currencies for the payment method specified by type"
        },
        "code": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "default": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the currency is the group's default currency, false otherwise"
        },
        "is_setup": {
          "location": "query",
          "required": false,
          "description": "A boolean set to true if the payment method specified by 'type' is set up for the group"
        },
        "setup_link": {
          "location": "query",
          "required": false,
          "description": "The URL for setting up the payment method specified by 'type'. This is returned if the payment method specified by 'type' is not set up for the group and the member has the permission to set it up"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "ga_code": {
          "location": "query",
          "required": false,
          "description": "Optional field return the Google Analytics code for the group. Only members that can edit group settings can see this"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "is_simplehtml": {
          "location": "query",
          "required": false,
          "description": "Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise."
        },
        "join_info": {
          "location": "query",
          "required": false,
          "description": "Optional field, lists any questions requested when joining and required fields"
        },
        "photo_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "questions": {
          "location": "query",
          "required": false,
          "description": "List of profile questions organizer would like new members to answer prior to joining"
        },
        "questions_req": {
          "location": "query",
          "required": false,
          "description": "true if required, false otherwise"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last hosted event, if the group has one. Returned when the \"fields\" request parameter value contains \"last_event\""
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Latitude"
        },
        "leader_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup leaders limit in group (4 leaders for the Basic Subscription), note this info available only for orgs and coorgs"
        },
        "leads": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the number of members on this group's leadership team. Returned when the \"fields\" request parameter value contains \"leads\""
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to group on meetup.com"
        },
        "list_addr": {
          "location": "query",
          "required": false,
          "description": "Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this"
        },
        "list_mode": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the policy for who can post the group mailing list. Returned when the \"fields\" request parameter value contains \"list_mode\". Value may be one of \"moderated\", \"off\", \"open\", or \"orgs_only\""
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "Name of country of the group"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Longitude"
        },
        "member_cap": {
          "location": "query",
          "required": false,
          "description": "Number representing the maximum number of active members this group can have if capped. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "member_limit": {
          "location": "query",
          "required": false,
          "description": "Meetup members limit in group (now it's 50 members in the Basic Subscription)"
        },
        "members": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup members in this group"
        },
        "membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues if the group has membership dues"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency in which the fee is declared"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Numeric fee value"
        },
        "fee_desc": {
          "location": "query",
          "required": false,
          "description": "The interval at which dues must be paid. Possible values may include: \"month\", \"year\", \"day\", or \"every other day\""
        },
        "methods": {
          "location": "query",
          "required": false,
          "description": "Methods of payments"
        },
        "amazon_payments": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Amazon Payments are accepted"
        },
        "credit_card": {
          "location": "query",
          "required": false,
          "description": "(Deprecated - use wepay instead) Boolean indicator that credit cards are accepted"
        },
        "other": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that other forms of payment are accepted"
        },
        "paypal": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Paypal payments are accepted"
        },
        "wepay": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator that Wepay payments are accepted"
        },
        "reasons": {
          "location": "query",
          "required": false,
          "description": "Array of reasons containing one or more of the following values compensate_organizer, cover_costs, encourage_engagement, improve_meetups, other, provide_supplies, reserve_fund"
        },
        "reasons_other": {
          "location": "query",
          "required": false,
          "description": "An additional reason if specified."
        },
        "refund_policy": {
          "location": "query",
          "required": false,
          "description": "Conditions for refunds"
        },
        "custom": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator of a custom refund policy"
        },
        "group_closes": {
          "location": "query",
          "required": false,
          "description": "refund applies when the group closes"
        },
        "member_banned": {
          "location": "query",
          "required": false,
          "description": "refund applies when the member is banned"
        },
        "member_leaves": {
          "location": "query",
          "required": false,
          "description": "refund applies when member leaves the group"
        },
        "none": {
          "location": "query",
          "required": false,
          "description": "indicates there is no refund policy"
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "true if dues are required"
        },
        "required_to": {
          "location": "query",
          "required": false,
          "description": "If the dues are required this indicates what they are required for. Currently may only be 'join'"
        },
        "self_payment_required": {
          "location": "query",
          "required": false,
          "description": "Returns true if the authorized user is prevented from participating in the group until a payment is made"
        },
        "trial_days": {
          "location": "query",
          "required": false,
          "description": "When present, returns the number of days the group is offering a free trial period for to new members. When not present, this indicates that the group does not offer a trial membership period"
        },
        "meta_category": {
          "location": "query",
          "required": false,
          "description": "The meta category of the group, if the group has one"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Organizer photo, where defined"
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "The current ongoing or next upcoming event, if one is scheduled"
        },
        "nominated_member": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns if the logged in member has been nominated to take over the group."
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Group's primary organizer"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Bio of member"
        },
        "past_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of past events belonging to the group."
        },
        "pending_members": {
          "location": "query",
          "required": false,
          "description": "Number representing the count of members pending organizer approval to join. Returned only when requested in the fields request parameter and the authenticated member has permission to approve members"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "photos": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. A small set of photos from the group"
        },
        "plain_text_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format. Returned when then \"fields\" request parameter value contains \"plain_text_description\""
        },
        "plain_text_no_images_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in plain text format with no images. Returned when then \"fields\" request parameter value contains \"plain_text_no_images_description\""
        },
        "proposed_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of proposed events belonging to the group."
        },
        "cancelled": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that membership dues were cancelled"
        },
        "exempt": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this Boolean field indicates that the member is exempt from payment."
        },
        "paid_until": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns the time in milliseconds since the epoch that the member's next payment is due"
        },
        "period_status": {
          "location": "query",
          "required": false,
          "description": "For groups with recurring billing periods, this returns one of the following values grace paid pending unpaid"
        },
        "total_amount": {
          "location": "query",
          "required": false,
          "description": "Total amount paid"
        },
        "transaction_time": {
          "location": "query",
          "required": false,
          "description": "Time the transaction was made in milliseconds since the epoch"
        },
        "trial": {
          "location": "query",
          "required": false,
          "description": "If the group offers a trial membership, this indicates information for unpaid members."
        },
        "previous_membership_dues": {
          "location": "query",
          "required": false,
          "description": "Member's membership dues history when currently not a part of group i.e Status=none if the group has membership dues"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "Member's last visit to the group site, in milliseconds since the epoch"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Optional field, a shorted URL for the group"
        },
        "similar_groups": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns up to 5 groups similar to this groups, best suited for the authenticated member when a single group is queried for. Note: this field is being deprecated in favor of making a separate request to /:urlname/similar_groups"
        },
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "simple_html_description": {
          "location": "query",
          "required": false,
          "description": "Description of the group, in simple HTML source format. If this group's description was saved in simple HTML format, the description field will be an HTML translation of this source. Returned when the \"fields\" request parameter value contains \"simple_html_description\""
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of the group, if in US or Canada"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "This represents the universal timezone identifier for the group"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the group's topics"
        },
        "untranslated_city": {
          "location": "query",
          "required": false,
          "description": "City of the group, not translated"
        },
        "upcoming_event_count": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the number of upcoming events belonging to the group."
        },
        "visibility": {
          "location": "query",
          "required": false,
          "description": "Who can see this group. One of members, public or public_limited"
        },
        "welcome_message": {
          "location": "query",
          "required": false,
          "description": "Optional fields parameter. Returns the Group's default welcome message if the authenticated member is the organizer of the group"
        }
      },
      "summary": "Lists the authenticated member's groups in the order of leadership,next upcoming event, then alphabetical order by name",
      "uri": "/self/groups/",
      "notes": "This endpoint uses HTTP Link header based pagination."
    },
    "EventHosts": {
      "version": "3",
      "name": "EventHosts",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to append to the response"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' or 'visible'"
        },
        "birthday": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes 'birthday' and only for the authenticated member when defined"
        },
        "day": {
          "location": "query",
          "required": false,
          "description": "Numeric day member was born. May be absent if not defined"
        },
        "month": {
          "location": "query",
          "required": false,
          "description": "Numeric month member was born. May be absent if not defined"
        },
        "year": {
          "location": "query",
          "required": false,
          "description": "Year member was born"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City associated with Member's location"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code associated with Member's location"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "Member email address. Provided only if a profile belongs to the authenticated member"
        },
        "gender": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes \"gender\" and only for the authenticated member. Value may be one of \"female\", \"male\", \"none\", or \"other\". This field may be absent where gender is not defined"
        },
        "group_profile": {
          "location": "query",
          "required": false,
          "description": "Meetup Group profile information. This field is only returned when profile is requested in group contexts"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "Array of answers to Group Profile questions"
        },
        "answer": {
          "location": "query",
          "required": false,
          "description": "Answer text"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "question_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric question identifier"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "The time this member joined the Group, represented as milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "The group associated with this membership"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name for the member"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "a string with one of the following values: {'active', 'prereg', 'unknown'}"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Member intro, may be omitted if member opted to hide their intro from other members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Member profile link, provides a link to the members chapter profile"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the Group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "The last time this member edited their Group profile, represented as milliseconds since the epoch"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "The last time this member visited the Group, represented as milliseconds since the epoch"
        },
        "is_pro_admin": {
          "location": "query",
          "required": false,
          "description": "Returns true if the member is an active admin of an active meetup pro network"
        },
        "joined": {
          "location": "query",
          "required": false,
          "description": "Time member joined, represented as milliseconds since the epoch"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Geographic latitude associated with Member's location"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "Name of country associated with Member's location"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Geographic longitude associated with Member's location"
        },
        "messaging_pref": {
          "location": "query",
          "required": false,
          "description": "The member's preference for being contacted from other members on the platform. Returned only when the fields request parameter value includes \"messaging_pref\". May be one of the following: \"all_members\", \"groups_only\", or \"orgs_only\""
        },
        "other_services": {
          "location": "query",
          "required": false,
          "description": "An object whose key's are the names of associated external networks and values are identities within those networks. The keys may be one of facebook, flickr, linkedin, tumblr or twitter. Returned only when \"fields\" request parameter value includes \"other_services\""
        },
        "identifier": {
          "location": "query",
          "required": false,
          "description": "A unique string identifier"
        },
        "url": {
          "location": "query",
          "required": false,
          "description": "A url for this identity. May be the same as identifier in some cases"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo. May be absent if member has not chosen one. In group contexts, the Member's Group profile photo will be returned."
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "privacy": {
          "location": "query",
          "required": false,
          "description": "Member's privacy preferences Returned only when the \"fields\" request parameter value includes \"privacy\""
        },
        "facebook": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' of 'visible'. If absent, the member has not connected their Facebook account to Meetup"
        },
        "groups": {
          "location": "query",
          "required": false,
          "description": "List of common groups"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' or 'visible'"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Represents the authenticated member's relation to member. Returned when \"fields\" request parameter value includes \"self\" and the target member is not the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions available for the authenticated member to perform. Currently only \"message\" is supported"
        },
        "blocks": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member blocks this member"
        },
        "common": {
          "location": "query",
          "required": false,
          "description": "Information the authenticated member has in common with this member"
        },
        "friends": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member is a friend of the member"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State associated with Member's location, where available"
        }
      },
      "summary": "Returns the list of hosts for a given event",
      "uri": "/{urlname}/events/{event_id}/hosts/",
      "notes": "A valid :urlname and :event_id is required."
    },
    "APIStatus": {
      "version": "3",
      "name": "APIStatus",
      "httpMethod": "GET",
      "parameters": {
        "message": {
          "location": "query",
          "required": false,
          "description": "Optional message for display. May be absent"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "May be one of \"ok\", \"notice\", or \"unavailable\""
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Optional title for display. May be absent"
        }
      },
      "summary": "Returns the current API service status",
      "uri": "/status/",
      "notes": "No parameters are needed"
    },
    "Notifications": {
      "version": "3",
      "name": "Notifications",
      "httpMethod": "GET",
      "parameters": {
        "fields": {
          "location": "query",
          "required": false,
          "description": "Request that additional fields (separated by commas) be included in the output."
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Identifier indicating a high level categorization of related kinds."
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "important": {
          "location": "query",
          "required": false,
          "description": "True or False indicating a notification's level of importance"
        },
        "kind": {
          "location": "query",
          "required": false,
          "description": "Identifier indicating the kind of notification."
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to resource notification was triggered by"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "A photo related to the notifications. Potentially absent"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Identifier indicating the view that should be navigated to."
        },
        "photo_type": {
          "location": "query",
          "required": false,
          "description": "Type of photo, event or member"
        },
        "read": {
          "location": "query",
          "required": false,
          "description": "True or False indicating whether a notification has been read"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Information pertaining the authorized member associated with this notification"
        },
        "action": {
          "location": "query",
          "required": false,
          "description": "An action that may be performed on this notification."
        },
        "setting": {
          "location": "query",
          "required": false,
          "description": "The setting that controls the member's preference for receiving sendings of this kind of notification"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "A push setting if available"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "display code"
        },
        "push": {
          "location": "query",
          "required": false,
          "description": "An email setting if available"
        },
        "target": {
          "location": "query",
          "required": false,
          "description": "kind specific properties which may be used to navigate back to the source of the notification"
        },
        "album_id": {
          "location": "query",
          "required": false,
          "description": "If needed, a numeric photo album ID"
        },
        "comment_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the comment which relates to this notification"
        },
        "comment_parent_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the top-level comment which relates to this notification"
        },
        "event_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the alphanumeric ID of the event which relates to this notification"
        },
        "group_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the group which relates to this notification"
        },
        "group_urlname": {
          "location": "query",
          "required": false,
          "description": "If needed, the alpha numeric urlname of the group which relates to this notification"
        },
        "member_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the member involved in the notification"
        },
        "pending": {
          "location": "query",
          "required": false,
          "description": "If needed, a boolean valid indicating the membership status of member_id in the context of a group"
        },
        "photo_id": {
          "location": "query",
          "required": false,
          "description": "If needed, a numeric photo ID"
        },
        "text": {
          "location": "query",
          "required": false,
          "description": "Notification content as text"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "The last time the notification was modified, indicated as the time in milliseconds since the epoch"
        }
      },
      "summary": "Returns all recent Meetup notifications for the authorized member. To mark notifications read use /notifications/read endpoint. To get the authenticated Member's current unread count, request it in an HTTP header.",
      "uri": "/notifications/",
      "notes": "No parameters are required"
    },
    "ClickedNotifications": {
      "version": "3",
      "name": "ClickedNotifications",
      "httpMethod": "POST",
      "parameters": {
        "notif_id": {
          "location": "query",
          "required": false,
          "description": "The id of the notification to set as clicked"
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Identifier indicating a high level categorization of related kinds."
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "important": {
          "location": "query",
          "required": false,
          "description": "True or False indicating a notification's level of importance"
        },
        "kind": {
          "location": "query",
          "required": false,
          "description": "Identifier indicating the kind of notification."
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to resource notification was triggered by"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "A photo related to the notifications. Potentially absent"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Identifier indicating the view that should be navigated to."
        },
        "photo_type": {
          "location": "query",
          "required": false,
          "description": "Type of photo, event or member"
        },
        "read": {
          "location": "query",
          "required": false,
          "description": "True or False indicating whether a notification has been read"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Information pertaining the authorized member associated with this notification"
        },
        "action": {
          "location": "query",
          "required": false,
          "description": "An action that may be performed on this notification."
        },
        "setting": {
          "location": "query",
          "required": false,
          "description": "The setting that controls the member's preference for receiving sendings of this kind of notification"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "A push setting if available"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "display code"
        },
        "push": {
          "location": "query",
          "required": false,
          "description": "An email setting if available"
        },
        "target": {
          "location": "query",
          "required": false,
          "description": "kind specific properties which may be used to navigate back to the source of the notification"
        },
        "album_id": {
          "location": "query",
          "required": false,
          "description": "If needed, a numeric photo album ID"
        },
        "comment_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the comment which relates to this notification"
        },
        "comment_parent_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the top-level comment which relates to this notification"
        },
        "event_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the alphanumeric ID of the event which relates to this notification"
        },
        "group_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the group which relates to this notification"
        },
        "group_urlname": {
          "location": "query",
          "required": false,
          "description": "If needed, the alpha numeric urlname of the group which relates to this notification"
        },
        "member_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the member involved in the notification"
        },
        "pending": {
          "location": "query",
          "required": false,
          "description": "If needed, a boolean valid indicating the membership status of member_id in the context of a group"
        },
        "photo_id": {
          "location": "query",
          "required": false,
          "description": "If needed, a numeric photo ID"
        },
        "text": {
          "location": "query",
          "required": false,
          "description": "Notification content as text"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "The last time the notification was modified, indicated as the time in milliseconds since the epoch"
        }
      },
      "summary": "Marks groups of notifications as clicked.",
      "uri": "/notifications/clicked/",
      "notes": ""
    },
    "ReadNotifications": {
      "version": "3",
      "name": "ReadNotifications",
      "httpMethod": "POST",
      "parameters": {
        "fields": {
          "location": "query",
          "required": false,
          "description": "Request that additional fields (separated by commas) be included in the output."
        },
        "since_id": {
          "location": "query",
          "required": false,
          "description": "The id of the newest notification item, typically the first in the list returned by the notifications endpoint"
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Identifier indicating a high level categorization of related kinds."
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "important": {
          "location": "query",
          "required": false,
          "description": "True or False indicating a notification's level of importance"
        },
        "kind": {
          "location": "query",
          "required": false,
          "description": "Identifier indicating the kind of notification."
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to resource notification was triggered by"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "A photo related to the notifications. Potentially absent"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Identifier indicating the view that should be navigated to."
        },
        "photo_type": {
          "location": "query",
          "required": false,
          "description": "Type of photo, event or member"
        },
        "read": {
          "location": "query",
          "required": false,
          "description": "True or False indicating whether a notification has been read"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Information pertaining the authorized member associated with this notification"
        },
        "action": {
          "location": "query",
          "required": false,
          "description": "An action that may be performed on this notification."
        },
        "setting": {
          "location": "query",
          "required": false,
          "description": "The setting that controls the member's preference for receiving sendings of this kind of notification"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "A push setting if available"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "display code"
        },
        "push": {
          "location": "query",
          "required": false,
          "description": "An email setting if available"
        },
        "target": {
          "location": "query",
          "required": false,
          "description": "kind specific properties which may be used to navigate back to the source of the notification"
        },
        "album_id": {
          "location": "query",
          "required": false,
          "description": "If needed, a numeric photo album ID"
        },
        "comment_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the comment which relates to this notification"
        },
        "comment_parent_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the top-level comment which relates to this notification"
        },
        "event_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the alphanumeric ID of the event which relates to this notification"
        },
        "group_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the group which relates to this notification"
        },
        "group_urlname": {
          "location": "query",
          "required": false,
          "description": "If needed, the alpha numeric urlname of the group which relates to this notification"
        },
        "member_id": {
          "location": "query",
          "required": false,
          "description": "If needed, the numeric ID of the member involved in the notification"
        },
        "pending": {
          "location": "query",
          "required": false,
          "description": "If needed, a boolean valid indicating the membership status of member_id in the context of a group"
        },
        "photo_id": {
          "location": "query",
          "required": false,
          "description": "If needed, a numeric photo ID"
        },
        "text": {
          "location": "query",
          "required": false,
          "description": "Notification content as text"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "The last time the notification was modified, indicated as the time in milliseconds since the epoch"
        }
      },
      "summary": "Marks groups of notifications as read.",
      "uri": "/notifications/read/",
      "notes": ""
    },
    "EventPhotos": {
      "version": "3",
      "name": "EventPhotos",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "desc": {
          "location": "query",
          "required": false,
          "description": "Controls directional order or listing. Default false"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional response fields. Currently supported values are \"self\" and \"comment_count\""
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Number of items to return per-page of results. Defaults to 200"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "caption": {
          "location": "query",
          "required": false,
          "description": "Photo caption, if defined"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "The number of comments posted about this photo. Returned when 'comment_count' is present in the 'fields' request parameter."
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time photo was uploaded, in milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group the photo is associated with.\" +           \"|Returned when 'group' is present \" +           \"|in the 'fields' request parameter."
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for photo album"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of event"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to photo on meetup.com"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who uploaded the photo. If member has since left the group, this will return a member with an id of 0"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Photo album the photo is associated with"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "Numeric utc offset based on the timezone of the group hosting the event this photo was posted in"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Context for the authenticated member. Returned when 'self' is present in the 'fields' request parameter and the authenticated is a member of the group the photo is associated with."
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform on this photo or its containing album, potentially one or more of the following"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Shortened link to photo on meetup.com. Returned when 'short_link' is present in the 'fields' request parameter"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time photo was last updated, in milliseconds since the epoch"
        },
        "await": {
          "location": "query",
          "required": false,
          "description": "Optional boolean parameter that will defer a request's a response until confirmation that photo is immediately displayable is received."
        },
        "caption_error": {
          "location": "query",
          "required": false,
          "description": "The provided caption was longer than 255 characters"
        },
        "photo_error": {
          "location": "query",
          "required": false,
          "description": "Returned photo was either omitted from the request or was invalid"
        },
        "upload_error": {
          "location": "query",
          "required": false,
          "description": "The process of uploading the photo failed"
        },
        "upload_limit_error": {
          "location": "query",
          "required": false,
          "description": "A member uploaded more photos than allowed for this event"
        },
        "upload_timeout_error": {
          "location": "query",
          "required": false,
          "description": "A awaited response timed out"
        }
      },
      "summary": "Lists photos for a given event",
      "uri": "/{urlname}/events/{event_id}/photos/#list",
      "notes": null
    },
    "EventPhotoUpload": {
      "version": "3",
      "name": "EventPhotoUpload",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "await": {
          "location": "query",
          "required": false,
          "description": "Optional boolean parameter that will defer a request's a response until confirmation that photo is immediately displayable is received."
        },
        "caption": {
          "location": "query",
          "required": false,
          "description": "Photo caption, if defined"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional response fields. Currently supported values are \"self\" and \"comment_count\""
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "The number of comments posted about this photo. Returned when 'comment_count' is present in the 'fields' request parameter."
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time photo was uploaded, in milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group the photo is associated with.\" +           \"|Returned when 'group' is present \" +           \"|in the 'fields' request parameter."
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for photo album"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of event"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to photo on meetup.com"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who uploaded the photo. If member has since left the group, this will return a member with an id of 0"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Photo album the photo is associated with"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "Numeric utc offset based on the timezone of the group hosting the event this photo was posted in"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Context for the authenticated member. Returned when 'self' is present in the 'fields' request parameter and the authenticated is a member of the group the photo is associated with."
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform on this photo or its containing album, potentially one or more of the following"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Shortened link to photo on meetup.com. Returned when 'short_link' is present in the 'fields' request parameter"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time photo was last updated, in milliseconds since the epoch"
        },
        "caption_error": {
          "location": "query",
          "required": false,
          "description": "The provided caption was longer than 255 characters"
        },
        "photo_error": {
          "location": "query",
          "required": false,
          "description": "Returned photo was either omitted from the request or was invalid"
        },
        "upload_error": {
          "location": "query",
          "required": false,
          "description": "The process of uploading the photo failed"
        },
        "upload_limit_error": {
          "location": "query",
          "required": false,
          "description": "A member uploaded more photos than allowed for this event"
        },
        "upload_timeout_error": {
          "location": "query",
          "required": false,
          "description": "A awaited response timed out"
        }
      },
      "summary": "Support for uploading new Event photos",
      "uri": "/{urlname}/events/{event_id}/photos/#upload",
      "notes": null
    },
    "EventPhoto": {
      "version": "3",
      "name": "EventPhoto",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "photo_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional response fields. Currently supported values are \"comment_count\", \"self\" and \"short_link\""
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "caption": {
          "location": "query",
          "required": false,
          "description": "Photo caption, if defined"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "The number of comments posted about this photo. Returned when 'comment_count' is present in the 'fields' request parameter."
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time photo was uploaded, in milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group the photo is associated with.\" +           \"|Returned when 'group' is present \" +           \"|in the 'fields' request parameter."
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for photo album"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of event"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to photo on meetup.com"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who uploaded the photo. If member has since left the group, this will return a member with an id of 0"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Photo album the photo is associated with"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "Numeric utc offset based on the timezone of the group hosting the event this photo was posted in"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Context for the authenticated member. Returned when 'self' is present in the 'fields' request parameter and the authenticated is a member of the group the photo is associated with."
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform on this photo or its containing album, potentially one or more of the following"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Shortened link to photo on meetup.com. Returned when 'short_link' is present in the 'fields' request parameter"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time photo was last updated, in milliseconds since the epoch"
        }
      },
      "summary": "Gets information about a specific photo",
      "uri": "/{urlname}/events/{event_id}/photos/{photo_id}/#get",
      "notes": null
    },
    "EventPhotoEdit": {
      "version": "3",
      "name": "EventPhotoEdit",
      "httpMethod": "PATCH",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "photo_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "caption": {
          "location": "query",
          "required": false,
          "description": "Photo caption, if defined"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional response fields. Currently supported values are \"comment_count\", \"self\" and \"short_link\""
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "The number of comments posted about this photo. Returned when 'comment_count' is present in the 'fields' request parameter."
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time photo was uploaded, in milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group the photo is associated with.\" +           \"|Returned when 'group' is present \" +           \"|in the 'fields' request parameter."
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for photo album"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of event"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to photo on meetup.com"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who uploaded the photo. If member has since left the group, this will return a member with an id of 0"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Photo album the photo is associated with"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "Numeric utc offset based on the timezone of the group hosting the event this photo was posted in"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Context for the authenticated member. Returned when 'self' is present in the 'fields' request parameter and the authenticated is a member of the group the photo is associated with."
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform on this photo or its containing album, potentially one or more of the following"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Shortened link to photo on meetup.com. Returned when 'short_link' is present in the 'fields' request parameter"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time photo was last updated, in milliseconds since the epoch"
        }
      },
      "summary": "Edits photo details",
      "uri": "/{urlname}/events/{event_id}/photos/{photo_id}/#edit",
      "notes": null
    },
    "EventPhotoDelete": {
      "version": "3",
      "name": "EventPhotoDelete",
      "httpMethod": "DELETE",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "photo_id": {
          "location": "uri",
          "required": true,
          "description": null
        }
      },
      "summary": "Deletes a specified event photo",
      "uri": "/{urlname}/events/{event_id}/photos/{photo_id}/#delete",
      "notes": null
    },
    "PhotoComments": {
      "version": "3",
      "name": "PhotoComments",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "photo_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "comment": {
          "location": "query",
          "required": false,
          "description": "The comment the member left for the photo"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the comment was posted in milliseconds since the epoch"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "The member that made the comment."
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of member"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Context for the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "A list of actions the authenticated member may perform on the comment."
        }
      },
      "summary": "Lists photo comments associated with a photo",
      "uri": "/{urlname}/events/{event_id}/photos/{photo_id}/comments/#get",
      "notes": null
    },
    "PhotoComment": {
      "version": "3",
      "name": "PhotoComment",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "photo_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "comment": {
          "location": "query",
          "required": false,
          "description": "The comment the member left for the photo"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time the comment was posted in milliseconds since the epoch"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "The member that made the comment."
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of member"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Context for the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "A list of actions the authenticated member may perform on the comment."
        }
      },
      "summary": "Creates a new photo comment",
      "uri": "/{urlname}/events/{event_id}/photos/{photo_id}/comments/#post",
      "notes": null
    },
    "PhotoCommentDelete": {
      "version": "3",
      "name": "PhotoCommentDelete",
      "httpMethod": "DELETE",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "photo_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "comment_id": {
          "location": "uri",
          "required": true,
          "description": null
        }
      },
      "summary": "Deletes photo comments",
      "uri": "/{urlname}/events/{event_id}/photos/{photo_id}/comments/{comment_id}/#delete",
      "notes": null
    },
    "PhotoAlbumList": {
      "version": "3",
      "name": "PhotoAlbumList",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional response fields. Currently supported values are \"self\" and \"short_link\""
        },
        "offset": {
          "location": "query",
          "required": false,
          "description": "Incrementing number used for pagination offsets"
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Number of albums to return per page of results"
        },
        "album_photo": {
          "location": "query",
          "required": false,
          "description": "Cover photo for this photo album"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time photo album was created, in milliseconds since the epoch"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of the group"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group associated with this photo album"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to photo album on meetup.com"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Contextual information related to the authenticated member. Returned when 'self' is present in the 'fields' request parameter"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the member may perform."
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Shortened link to photo album on meetup.com. Returned when 'short_link' is present in the 'fields' request parameter"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time photo album was last updated in milliseconds since the epoch"
        }
      },
      "summary": "Gets a list a group photo albums in ascending order based on the time they were created",
      "uri": "/{urlname}/photo_albums/",
      "notes": "A valid path parameter value for :urlname is required This endpoint uses HTTP Link header based pagination."
    },
    "PhotoAlbum": {
      "version": "3",
      "name": "PhotoAlbum",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "album_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional response fields. Currently supported values are \"self\" and \"short_link\""
        },
        "album_photo": {
          "location": "query",
          "required": false,
          "description": "Cover photo for this photo album"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time photo album was created, in milliseconds since the epoch"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of the group"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group associated with this photo album"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to photo album on meetup.com"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Contextual information related to the authenticated member. Returned when 'self' is present in the 'fields' request parameter"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the member may perform."
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Shortened link to photo album on meetup.com. Returned when 'short_link' is present in the 'fields' request parameter"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time photo album was last updated in milliseconds since the epoch"
        }
      },
      "summary": "Gets information about a specific photo album",
      "uri": "/{urlname}/photo_albums/{album_id}/",
      "notes": "A valid path parameter value for :urlname and :album_id is required"
    },
    "AlbumPhotos": {
      "version": "3",
      "name": "AlbumPhotos",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "desc": {
          "location": "query",
          "required": false,
          "description": "Controls directional order or listing. Default false"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional response fields. Currently supported values are \"comment_count\", \"self\" and \"short_link\""
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Number of items to return per-page of results. Defaults to 200"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "caption": {
          "location": "query",
          "required": false,
          "description": "Photo caption, if defined"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "The number of comments posted about this photo. Returned when 'comment_count' is present in the 'fields' request parameter."
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time photo was uploaded, in milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group the photo is associated with.\" +           \"|Returned when 'group' is present \" +           \"|in the 'fields' request parameter."
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for photo album"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of event"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to photo on meetup.com"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who uploaded the photo. If member has since left the group, this will return a member with an id of 0"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Photo album the photo is associated with"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "Numeric utc offset based on the timezone of the group hosting the event this photo was posted in"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Context for the authenticated member. Returned when 'self' is present in the 'fields' request parameter and the authenticated is a member of the group the photo is associated with."
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform on this photo or its containing album, potentially one or more of the following"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Shortened link to photo on meetup.com. Returned when 'short_link' is present in the 'fields' request parameter"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time photo was last updated, in milliseconds since the epoch"
        }
      },
      "summary": "Lists of all photos uploaded for the group",
      "uri": "/{urlname}/photos/#list",
      "notes": null
    },
    "AlbumPhotoUpload": {
      "version": "3",
      "name": "AlbumPhotoUpload",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "album_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "await": {
          "location": "query",
          "required": false,
          "description": "Optional boolean parameter that will defer a request's a response until confirmation that photo is immediately displayable is received."
        },
        "caption": {
          "location": "query",
          "required": false,
          "description": "Photo caption, if defined"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional response fields. Currently supported values are \"self\" and \"comment_count\""
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "comment_count": {
          "location": "query",
          "required": false,
          "description": "The number of comments posted about this photo. Returned when 'comment_count' is present in the 'fields' request parameter."
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Time photo was uploaded, in milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group the photo is associated with.\" +           \"|Returned when 'group' is present \" +           \"|in the 'fields' request parameter."
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for photo album"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of event"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Link to photo on meetup.com"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who uploaded the photo. If member has since left the group, this will return a member with an id of 0"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Photo album the photo is associated with"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "Numeric utc offset based on the timezone of the group hosting the event this photo was posted in"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Context for the authenticated member. Returned when 'self' is present in the 'fields' request parameter and the authenticated is a member of the group the photo is associated with."
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions the authenticated member may perform on this photo or its containing album, potentially one or more of the following"
        },
        "short_link": {
          "location": "query",
          "required": false,
          "description": "Shortened link to photo on meetup.com. Returned when 'short_link' is present in the 'fields' request parameter"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Time photo was last updated, in milliseconds since the epoch"
        },
        "caption_error": {
          "location": "query",
          "required": false,
          "description": "The provided caption was longer than 255 characters"
        },
        "photo_error": {
          "location": "query",
          "required": false,
          "description": "Returned photo was either omitted from the request or was invalid"
        },
        "upload_error": {
          "location": "query",
          "required": false,
          "description": "The process of uploading the photo failed"
        },
        "upload_limit_error": {
          "location": "query",
          "required": false,
          "description": "A member uploaded more photos than allowed for this event"
        },
        "upload_timeout_error": {
          "location": "query",
          "required": false,
          "description": "A awaited response timed out"
        }
      },
      "summary": "Support for uploading new Album photos",
      "uri": "/{urlname}/photo_albums/{album_id}/photos/#upload",
      "notes": null
    },
    "MemberPhotoUpload": {
      "version": "3",
      "name": "MemberPhotoUpload",
      "httpMethod": "POST",
      "parameters": {
        "member_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "await": {
          "location": "query",
          "required": false,
          "description": "Optional boolean parameter that, when set to true, will defer a request's a response until confirmation that photo is immediately displayable is received."
        },
        "main": {
          "location": "query",
          "required": false,
          "description": "Optional boolean parameter that, when set to true, will cause the member's main profile photo to be set to the uploaded photo"
        },
        "photo": {
          "location": "query",
          "required": true,
          "description": "Photo upload data, encoded as a multipart/form-data file. The maximum file size allowed is 10MB"
        },
        "sync_photo": {
          "location": "query",
          "required": false,
          "description": "Optional boolean parameter that, when set to true, will sync all of the group profile photos for the member with the provided photo"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "photo_error": {
          "location": "query",
          "required": false,
          "description": "Returned photo was either omitted from the request or was invalid"
        },
        "upload_error": {
          "location": "query",
          "required": false,
          "description": "The process of uploading the photo failed"
        },
        "upload_timeout_error": {
          "location": "query",
          "required": false,
          "description": "An awaited response timed out"
        }
      },
      "summary": "Support for uploading new Member photos",
      "uri": "/members/{member_id}/photos/#post",
      "notes": null
    },
    "MemberPhotoDelete": {
      "version": "3",
      "name": "MemberPhotoDelete",
      "httpMethod": "DELETE",
      "parameters": {
        "member_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "photo_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "authorization_error": {
          "location": "query",
          "required": false,
          "description": "Returned if the authenticated member was not the owner of this photo"
        },
        "photo_id_error": {
          "location": "query",
          "required": false,
          "description": "Returned if the photo could not be found or was previously deleted"
        }
      },
      "summary": "Deletes a member photo by id",
      "uri": "/members/{member_id}/photos/{photo_id}/#delete",
      "notes": null
    },
    "Getpreferenceandpermissiondata": {
      "version": "3",
      "name": "Getpreferenceandpermissiondata",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "domain": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "preferences": {
          "location": "query",
          "required": false,
          "description": "Chapter preferences for the specified product domain"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Permissions for the authenticated member"
        },
        "permissions": {
          "location": "query",
          "required": false,
          "description": "Member permissions that pertain to the specified product domain"
        }
      },
      "summary": "Returns preference and permission data for the specified product domain",
      "uri": "/{urlname}/preferences/{domain}/",
      "notes": ":urlname and :domain path parameters are required. :domain specifies the preference domain and must be one of: group_discussions."
    },
    "SearchProGroups": {
      "version": "3",
      "name": "SearchProGroups",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "active_within_days": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: including only those groups that had event in the last specified days"
        },
        "average_age_max": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Maximum range of the average age of the members"
        },
        "average_age_min": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Minumum range of the average age of the members"
        },
        "category": {
          "location": "query",
          "required": false,
          "description": "Categories that the group belongs to"
        },
        "chapter_urlname": {
          "location": "query",
          "required": false,
          "description": "List of String: the urlnames of chapters that may belong to the organization"
        },
        "chapters": {
          "location": "query",
          "required": false,
          "description": "List of Integer: the chapter ids that may belong to the organization"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country of the group"
        },
        "desc": {
          "location": "query",
          "required": false,
          "description": "List of Boolean: whether to sort ascending or decending on each attributes in order"
        },
        "excluded_chapters": {
          "location": "query",
          "required": false,
          "description": "List of Integer: the chapters to exclude from the result"
        },
        "founded_date_max": {
          "location": "query",
          "required": false,
          "description": "Milliseconds since epoch: Maximum range of the founded dates of the groups"
        },
        "founded_date_min": {
          "location": "query",
          "required": false,
          "description": "Milliseconds since epoch: Minumum range of the founded dates of the groups"
        },
        "inactive_within_days": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: including only those groups that did not have event in the last specified days"
        },
        "last_event_max": {
          "location": "query",
          "required": false,
          "description": "Milliseconds since epoch: Maximum range of the date that the last meetup happened"
        },
        "last_event_min": {
          "location": "query",
          "required": false,
          "description": "Milliseconds since epoch: Minumum range of the date that the last meetup happened"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Latitude"
        },
        "location": {
          "location": "query",
          "required": false,
          "description": "String: Raw location"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Longitude"
        },
        "member_count_max": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Maximum range of the number of members"
        },
        "member_count_min": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Minimum range of the number of members"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of the topic"
        },
        "next_event_max": {
          "location": "query",
          "required": false,
          "description": "Milliseconds since epoch: Maximum range of the date that the next meetup is scheduled"
        },
        "next_event_min": {
          "location": "query",
          "required": false,
          "description": "Milliseconds since epoch: Minumum range of the date that the next meetup is scheduled"
        },
        "offset": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: the page offset"
        },
        "order": {
          "location": "query",
          "required": false,
          "description": "List of String: attributes to sort on"
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: the size of page window"
        },
        "past_events_max": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Maximum range of the number of the past events held"
        },
        "past_events_min": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Minumum range of the number of the past events held"
        },
        "past_rsvps_max": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Maximum range of the total number of past RSVPs"
        },
        "past_rsvps_min": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Minumum range of the total number of past RSVPs"
        },
        "pro_join_date_max": {
          "location": "query",
          "required": false,
          "description": "Milliseconds since epoch: Maximum range of the dates the groups joined Pro organization"
        },
        "pro_join_date_min": {
          "location": "query",
          "required": false,
          "description": "Milliseconds since epoch: Minumum range of the dates the groups joined Pro organization"
        },
        "query": {
          "location": "query",
          "required": false,
          "description": "String: raw query to search from group name, description, leadership member name, or city"
        },
        "radius": {
          "location": "query",
          "required": false,
          "description": "String: global, smart, or search radius in Float"
        },
        "repeat_rsvpers_max": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Maximum range of the average number of repeat rsvpers"
        },
        "repeat_rsvpers_min": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Minumum range of the average number of repeat rsvpers"
        },
        "rsvps_per_event_max": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Maximum range of the average number of RSVPs per event"
        },
        "rsvps_per_event_min": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Minumum range of the average number of RSVPs per event"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "Topics that are assigned to the group"
        },
        "upcoming_events_max": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Maximum range of the number of the upcoming events"
        },
        "upcoming_events_min": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Minumum range of the number of the upcoming events"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "String: Zip code"
        },
        "average_age": {
          "location": "query",
          "required": false,
          "description": "Average age of the group members"
        },
        "founded_date": {
          "location": "query",
          "required": false,
          "description": "Date when the group was founded"
        },
        "gender_female": {
          "location": "query",
          "required": false,
          "description": "Proportion of members who identify as female"
        },
        "gender_male": {
          "location": "query",
          "required": false,
          "description": "Proportion of members who identify as male"
        },
        "gender_other": {
          "location": "query",
          "required": false,
          "description": "Proportion of members who identify as gender other than male or female"
        },
        "gender_unknown": {
          "location": "query",
          "required": false,
          "description": "Proportion of members whose gender is unknown"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Date of the last meetup event, not present if the group never had a meetup event"
        },
        "member_count": {
          "location": "query",
          "required": false,
          "description": "Number of the group members"
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "Date of the next meetup event, not present if the group has no event scheduled"
        },
        "past_events": {
          "location": "query",
          "required": false,
          "description": "Number of the past meetup events"
        },
        "past_rsvps": {
          "location": "query",
          "required": false,
          "description": "Number of total RSVPs in the past"
        },
        "pro_join_date": {
          "location": "query",
          "required": false,
          "description": "Date when the group joined the Pro organization"
        },
        "repeat_rsvpers": {
          "location": "query",
          "required": false,
          "description": "Number of members who RSVPed to a past event and RSVPs to a new event"
        },
        "rsvps_per_event": {
          "location": "query",
          "required": false,
          "description": "Average number of RSVPs per event"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Id of the topic"
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Abbreviated name of the category"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of the group"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Description of the group"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of the group, if in US or Canada"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group, one of Active | Delisted | Inactive"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Locale of the topic"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "Urlkey used to identify the topic on meetup.com"
        },
        "upcoming_events": {
          "location": "query",
          "required": false,
          "description": "Number of the upcoming meetup events"
        }
      },
      "summary": "Name and statistics range search for the meetup groups belonging to Pro organization.",
      "uri": "/pro/{urlname}/groups/",
      "notes": "All parameters are optional. order and desc can take multiple items in a comma-delimited list."
    },
    "SearchProMembers": {
      "version": "3",
      "name": "SearchProMembers",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "active_within_days": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: The range of date from the past until today, for the recent activity"
        },
        "chapters": {
          "location": "query",
          "required": false,
          "description": "Pro organization groups that the member belongs to"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country of the member"
        },
        "desc": {
          "location": "query",
          "required": false,
          "description": "Boolean: whether to sort ascending or decending"
        },
        "email_received": {
          "location": "query",
          "required": false,
          "description": "Integers: The id of a previous emails that the member received"
        },
        "events_attended_max": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Maximum number of attended events"
        },
        "events_attended_min": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: Minimum number of attended events"
        },
        "is_organizer": {
          "location": "query",
          "required": false,
          "description": "Organizer status of the member"
        },
        "join_time_max": {
          "location": "query",
          "required": false,
          "description": "Milliseconds since epoch: The latest time limit for member join"
        },
        "join_time_min": {
          "location": "query",
          "required": false,
          "description": "Milliseconds since epoch: The oldest time limit for member join"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Latitude"
        },
        "location": {
          "location": "query",
          "required": false,
          "description": "String: Raw location"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Longitude"
        },
        "member_name": {
          "location": "query",
          "required": false,
          "description": "Name of the member"
        },
        "offset": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: the page offset"
        },
        "order": {
          "location": "query",
          "required": false,
          "description": "String: attribute to sort on"
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Positive Integer: the size of page window"
        },
        "query": {
          "location": "query",
          "required": false,
          "description": "String: raw query string to search from member name or city"
        },
        "radius": {
          "location": "query",
          "required": false,
          "description": "String: global, smart, or search radius in Float"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "String: Zip code"
        },
        "events_attended": {
          "location": "query",
          "required": false,
          "description": "The number of attended events"
        },
        "join_time": {
          "location": "query",
          "required": false,
          "description": "The time when the member joined Meetup"
        },
        "last_access_time": {
          "location": "query",
          "required": false,
          "description": "The time when the last activity occured"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Id of the group"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of the group"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of the member"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "Email address of the member if the member opted to share it with the organization"
        },
        "member_id": {
          "location": "query",
          "required": false,
          "description": "Id of the member"
        },
        "photo_thumb_url": {
          "location": "query",
          "required": false,
          "description": "Url of the photo thumbnail of the member"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of the member, if in US or Canada"
        }
      },
      "summary": "Name, location, and time based search for the members of the meetups belonging to Pro organization.",
      "uri": "/pro/{urlname}/members/",
      "notes": "All parameters are optional."
    },
    "GetProNetworkRSVPs": {
      "version": "3",
      "name": "GetProNetworkRSVPs",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "offset": {
          "location": "query",
          "required": false,
          "description": "Integer: offset of page, starting from 0"
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Integer: size of page. Minimum of 1 and maximum of 200"
        },
        "event_id": {
          "location": "query",
          "required": false,
          "description": "Integer: Unique identifier for the event"
        },
        "group_id": {
          "location": "query",
          "required": false,
          "description": "Integer: Unique identifier for the group for the event"
        },
        "member_id": {
          "location": "query",
          "required": false,
          "description": "Integer: Unique identifier for the member who RSVPed"
        },
        "mtime": {
          "location": "query",
          "required": false,
          "description": "Long Integer: Unix timestamp of the last time RSVP response was modified"
        },
        "rsvp_id": {
          "location": "query",
          "required": false,
          "description": "Integer: Unique identifier for the rsvp response"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "String: Status of the RSVP response. One of yes, no, and waitlisted"
        }
      },
      "summary": "Get the list of RSVP responses for the events across the entire Pro network",
      "uri": "/pro/{urlname}/rsvps/",
      "notes": ""
    },
    "SearchIssuedProTickets": {
      "version": "3",
      "name": "SearchIssuedProTickets",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the chapter on meetup.com"
        },
        "chapter_name": {
          "location": "query",
          "required": false,
          "description": "By the name of the chapter that redeemed the ticket"
        },
        "chapters": {
          "location": "query",
          "required": false,
          "description": "Comma delimited positive integers: ids of redeemed chapters"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country of the Chapter"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "The status of ticket, one of the following: inactive, available, claimed, redeemed"
        },
        "ticket_key": {
          "location": "query",
          "required": false,
          "description": "Ticket key"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Ticket creation time"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last update time of ticket"
        },
        "chapter": {
          "location": "query",
          "required": false,
          "description": "Pro organization chapter that redeemed the ticket, if the ticket is redeemed"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Id of the member"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Name of the member"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who claimed the ticket, if the ticket is claimed"
        }
      },
      "summary": "Redeemed chapter, redeemed member, status, and timestamp for tickets belonging to Pro organization.",
      "uri": "/pro/{urlname}/tickets/",
      "notes": "All parameters are optional."
    },
    "MembershipApproval": {
      "version": "3",
      "name": "MembershipApproval",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited numeric pending member IDs. The maximum allowed is 200"
        },
        "send_copy": {
          "location": "query",
          "required": false,
          "description": "Optional Boolean value indicating whether or not to send a copy to the member issuing the decline. Default is false"
        },
        "welcome_message": {
          "location": "query",
          "required": false,
          "description": "Optional message to send to the members being approved. If not provided, the groups default welcome message will be sent. Max message size is 2000"
        },
        "member_limit_error": {
          "location": "query",
          "required": false,
          "description": "returned when an attempt to approve members goes over the maximum number of active members for the group"
        },
        "permission_error": {
          "location": "query",
          "required": false,
          "description": "returned when a non-organizer attempts to decline members"
        },
        "anon": {
          "location": "query",
          "required": false,
          "description": "Optional Boolean value indicating whether the declining member's email address should be hidden in the resulting response. Default is true."
        },
        "ban": {
          "location": "query",
          "required": false,
          "description": "Optional Boolean value indicating whether or not to ban the member in the future. Default is false"
        },
        "explanation": {
          "location": "query",
          "required": false,
          "description": "Optional explanation to send to the members being declined. Max message size is 2000"
        }
      },
      "summary": "Approves one or more requests for group membership",
      "uri": "/{urlname}/member/approvals/#create",
      "notes": null
    },
    "MembershipDecline": {
      "version": "3",
      "name": "MembershipDecline",
      "httpMethod": "DELETE",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "anon": {
          "location": "query",
          "required": false,
          "description": "Optional Boolean value indicating whether the declining member's email address should be hidden in the resulting response. Default is true."
        },
        "ban": {
          "location": "query",
          "required": false,
          "description": "Optional Boolean value indicating whether or not to ban the member in the future. Default is false"
        },
        "explanation": {
          "location": "query",
          "required": false,
          "description": "Optional explanation to send to the members being declined. Max message size is 2000"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited numeric pending member IDs. The maximum allowed is 200"
        },
        "send_copy": {
          "location": "query",
          "required": false,
          "description": "Optional Boolean value indicating whether or not to send a copy to the member issuing the decline. Default is false"
        },
        "permission_error": {
          "location": "query",
          "required": false,
          "description": "returned when a non-organizer attempts to decline members"
        }
      },
      "summary": "Declines one or more requests for group membership",
      "uri": "/{urlname}/member/approvals/#delete",
      "notes": null
    },
    "GroupProfilelist": {
      "version": "3",
      "name": "GroupProfilelist",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "desc": {
          "location": "query",
          "required": false,
          "description": "Boolean value controling sort order of results. Currently this parameter is only supported for \"joined\" and \"name\" sorted results. Defaults to true"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to append to the response"
        },
        "filter": {
          "location": "query",
          "required": false,
          "description": "May be set to 'stepup_eligible' to return only members eligible to step up as organizer"
        },
        "order": {
          "location": "query",
          "required": false,
          "description": "Orders results according to definitions listed below. May be one of \"interesting\", \"name\", \"joined\", or \"stepup_recommended\""
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Number of requested members to return. Defaults to 200"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the Group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "a string with one of the following values: {'active', 'prereg', 'unknown'}"
        },
        "interesting": {
          "location": "query",
          "required": false,
          "description": "Order which may be interesting to the authorized member"
        },
        "joined": {
          "location": "query",
          "required": false,
          "description": "Time member joined, represented as milliseconds since the epoch"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "stepup_recommended": {
          "location": "query",
          "required": false,
          "description": "Sorts by likelikhood to step up as organizer"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' or 'visible'"
        },
        "birthday": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes 'birthday' and only for the authenticated member when defined"
        },
        "day": {
          "location": "query",
          "required": false,
          "description": "Numeric day member was born. May be absent if not defined"
        },
        "month": {
          "location": "query",
          "required": false,
          "description": "Numeric month member was born. May be absent if not defined"
        },
        "year": {
          "location": "query",
          "required": false,
          "description": "Year member was born"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "Member email address. Provided only if a profile belongs to the authenticated member"
        },
        "gender": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes \"gender\" and only for the authenticated member. Value may be one of \"female\", \"male\", \"none\", or \"other\". This field may be absent where gender is not defined"
        },
        "group_profile": {
          "location": "query",
          "required": false,
          "description": "Meetup Group profile information. This field is only returned when profile is requested in group contexts"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "Array of answers to Group Profile questions"
        },
        "answer": {
          "location": "query",
          "required": false,
          "description": "Answer text"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "question_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric question identifier"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group hosting the event"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Member intro, may be omitted if member opted to hide their intro from other members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Member profile link, provides a link to the members chapter profile"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "The last time this member visited the Group, represented as milliseconds since the epoch"
        },
        "is_pro_admin": {
          "location": "query",
          "required": false,
          "description": "Returns true if the member is an active admin of an active meetup pro network"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "messaging_pref": {
          "location": "query",
          "required": false,
          "description": "The member's preference for being contacted from other members on the platform. Returned only when the fields request parameter value includes \"messaging_pref\". May be one of the following: \"all_members\", \"groups_only\", or \"orgs_only\""
        },
        "other_services": {
          "location": "query",
          "required": false,
          "description": "An object whose key's are the names of associated external networks and values are identities within those networks. The keys may be one of facebook, flickr, linkedin, tumblr or twitter. Returned only when \"fields\" request parameter value includes \"other_services\""
        },
        "identifier": {
          "location": "query",
          "required": false,
          "description": "A unique string identifier"
        },
        "url": {
          "location": "query",
          "required": false,
          "description": "A url for this identity. May be the same as identifier in some cases"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo. May be absent if member has not chosen one. In group contexts, the Member's Group profile photo will be returned."
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "privacy": {
          "location": "query",
          "required": false,
          "description": "Member's privacy preferences Returned only when the \"fields\" request parameter value includes \"privacy\""
        },
        "facebook": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' of 'visible'. If absent, the member has not connected their Facebook account to Meetup"
        },
        "groups": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup Group memberships. May be 0 if member chose to hide their groups from others"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "List of Meetup topics Member has interest in. Returned only when fields request parameter value includes \"topics\". This list may be omitted when member has opted to hide the topics from others."
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Represents the authenticated member's relation to member. Returned when \"fields\" request parameter value includes \"self\" and the target member is not the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions available for the authenticated member to perform. Currently only \"message\" is supported"
        },
        "blocks": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member blocks this member"
        },
        "common": {
          "location": "query",
          "required": false,
          "description": "Information the authenticated member has in common with this member"
        },
        "friends": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member is a friend of the member"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State associated with Member's location, where available"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last RSVP'd Meetup this member attended within the last two weeks, where available. Returned when the \"fields\" request parameter value contains \"last_event\" only for the profile of the authenticated member"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Ticketing fee information for events that support payments"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "Boolean flag indicating if this fee is required to RSVP"
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when the \"fields\" request parameter value includes \"rsvp_sample\""
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "Contains a list of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\" request parameter contains \"survey_questions\""
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "memberships": {
          "location": "query",
          "required": false,
          "description": "Group memberships affiliated with this member. Returned only when fields request parameter value includes \"memberships\". This list may be omitted if the member has opted to hide their groups from others."
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Memberships where member is on the group's lead team"
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing either the current ongoing or next RSVP'd Meetup, where available. Returned when the \"fields\" request parameter value contains \"next_event\" only for the profile of the authenticated member"
        },
        "stats": {
          "location": "query",
          "required": false,
          "description": "High level numeric member statistics Returned only when fields request parameter value includes 'stats'"
        },
        "rsvps": {
          "location": "query",
          "required": false,
          "description": "Number of RSVPs. May be 0 if member chose to hide their groups from others"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "intro_error": {
          "location": "query",
          "required": false,
          "description": "Intro was required but absent or appeared to contain spam"
        },
        "join_closed_error": {
          "location": "query",
          "required": false,
          "description": "The organizer of this group has turned off new member joins"
        },
        "join_error": {
          "location": "query",
          "required": false,
          "description": "A catch all join error for any additional error states"
        },
        "member_banned": {
          "location": "query",
          "required": false,
          "description": "You have been banned from this group"
        },
        "member_email": {
          "location": "query",
          "required": false,
          "description": "The email associated with this account is invalid"
        },
        "member_removed": {
          "location": "query",
          "required": false,
          "description": "You have been removed from this group"
        },
        "member_unapproved": {
          "location": "query",
          "required": false,
          "description": "Your membership approval was declined"
        },
        "membership_error": {
          "location": "query",
          "required": false,
          "description": "Authenticated member was already an active member of this group"
        },
        "missing_dues_error": {
          "location": "query",
          "required": false,
          "description": "Member did not meet group membership dues requirements"
        },
        "pending_payment": {
          "location": "query",
          "required": false,
          "description": "Your current membership is pending a payment"
        },
        "photo_error": {
          "location": "query",
          "required": false,
          "description": "Photo was required but absent"
        },
        "unjoinable_group": {
          "location": "query",
          "required": false,
          "description": "This group is no longer joinable"
        }
      },
      "summary": "Get a list of Meetup group members",
      "uri": "/{urlname}/members/#list",
      "notes": null
    },
    "GroupJoin": {
      "version": "3",
      "name": "GroupJoin",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' or 'visible'"
        },
        "birthday": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes 'birthday' and only for the authenticated member when defined"
        },
        "day": {
          "location": "query",
          "required": false,
          "description": "Numeric day member was born. May be absent if not defined"
        },
        "month": {
          "location": "query",
          "required": false,
          "description": "Numeric month member was born. May be absent if not defined"
        },
        "year": {
          "location": "query",
          "required": false,
          "description": "Year member was born"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "Member email address. Provided only if a profile belongs to the authenticated member"
        },
        "gender": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes \"gender\" and only for the authenticated member. Value may be one of \"female\", \"male\", \"none\", or \"other\". This field may be absent where gender is not defined"
        },
        "group_profile": {
          "location": "query",
          "required": false,
          "description": "Meetup Group profile information. This field is only returned when profile is requested in group contexts"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "Array of answers to Group Profile questions"
        },
        "answer": {
          "location": "query",
          "required": false,
          "description": "Answer text"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "question_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric question identifier"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group hosting the event"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "a string with one of the following values: {'active', 'prereg', 'unknown'}"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Member intro, may be omitted if member opted to hide their intro from other members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Member profile link, provides a link to the members chapter profile"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the Group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "The last time this member visited the Group, represented as milliseconds since the epoch"
        },
        "is_pro_admin": {
          "location": "query",
          "required": false,
          "description": "Returns true if the member is an active admin of an active meetup pro network"
        },
        "joined": {
          "location": "query",
          "required": false,
          "description": "Time member joined, represented as milliseconds since the epoch"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last RSVP'd Meetup this member attended within the last two weeks, where available. Returned when the \"fields\" request parameter value contains \"last_event\" only for the profile of the authenticated member"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Ticketing fee information for events that support payments"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "Boolean flag indicating if this fee is required to RSVP"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State associated with Member's location, where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when the \"fields\" request parameter value includes \"rsvp_sample\""
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "Contains a list of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\" request parameter contains \"survey_questions\""
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "memberships": {
          "location": "query",
          "required": false,
          "description": "Group memberships affiliated with this member. Returned only when fields request parameter value includes \"memberships\". This list may be omitted if the member has opted to hide their groups from others."
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Memberships where member is on the group's lead team"
        },
        "messaging_pref": {
          "location": "query",
          "required": false,
          "description": "The member's preference for being contacted from other members on the platform. Returned only when the fields request parameter value includes \"messaging_pref\". May be one of the following: \"all_members\", \"groups_only\", or \"orgs_only\""
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing either the current ongoing or next RSVP'd Meetup, where available. Returned when the \"fields\" request parameter value contains \"next_event\" only for the profile of the authenticated member"
        },
        "other_services": {
          "location": "query",
          "required": false,
          "description": "An object whose key's are the names of associated external networks and values are identities within those networks. The keys may be one of facebook, flickr, linkedin, tumblr or twitter. Returned only when \"fields\" request parameter value includes \"other_services\""
        },
        "identifier": {
          "location": "query",
          "required": false,
          "description": "A unique string identifier"
        },
        "url": {
          "location": "query",
          "required": false,
          "description": "A url for this identity. May be the same as identifier in some cases"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo. May be absent if member has not chosen one. In group contexts, the Member's Group profile photo will be returned."
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "privacy": {
          "location": "query",
          "required": false,
          "description": "Member's privacy preferences Returned only when the \"fields\" request parameter value includes \"privacy\""
        },
        "facebook": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' of 'visible'. If absent, the member has not connected their Facebook account to Meetup"
        },
        "groups": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup Group memberships. May be 0 if member chose to hide their groups from others"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "List of Meetup topics Member has interest in. Returned only when fields request parameter value includes \"topics\". This list may be omitted when member has opted to hide the topics from others."
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Represents the authenticated member's relation to member. Returned when \"fields\" request parameter value includes \"self\" and the target member is not the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions available for the authenticated member to perform. Currently only \"message\" is supported"
        },
        "blocks": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member blocks this member"
        },
        "common": {
          "location": "query",
          "required": false,
          "description": "Information the authenticated member has in common with this member"
        },
        "friends": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member is a friend of the member"
        },
        "stats": {
          "location": "query",
          "required": false,
          "description": "High level numeric member statistics Returned only when fields request parameter value includes 'stats'"
        },
        "rsvps": {
          "location": "query",
          "required": false,
          "description": "Number of RSVPs. May be 0 if member chose to hide their groups from others"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "intro_error": {
          "location": "query",
          "required": false,
          "description": "Intro was required but absent or appeared to contain spam"
        },
        "join_closed_error": {
          "location": "query",
          "required": false,
          "description": "The organizer of this group has turned off new member joins"
        },
        "join_error": {
          "location": "query",
          "required": false,
          "description": "A catch all join error for any additional error states"
        },
        "member_banned": {
          "location": "query",
          "required": false,
          "description": "You have been banned from this group"
        },
        "member_email": {
          "location": "query",
          "required": false,
          "description": "The email associated with this account is invalid"
        },
        "member_removed": {
          "location": "query",
          "required": false,
          "description": "You have been removed from this group"
        },
        "member_unapproved": {
          "location": "query",
          "required": false,
          "description": "Your membership approval was declined"
        },
        "membership_error": {
          "location": "query",
          "required": false,
          "description": "Authenticated member was already an active member of this group"
        },
        "missing_dues_error": {
          "location": "query",
          "required": false,
          "description": "Member did not meet group membership dues requirements"
        },
        "pending_payment": {
          "location": "query",
          "required": false,
          "description": "Your current membership is pending a payment"
        },
        "photo_error": {
          "location": "query",
          "required": false,
          "description": "Photo was required but absent"
        },
        "unjoinable_group": {
          "location": "query",
          "required": false,
          "description": "This group is no longer joinable"
        }
      },
      "summary": "This method allows an authenticated member to join a group by creating a profile",
      "uri": "/{urlname}/members/#create",
      "notes": null
    },
    "GetGroupMemberProfile": {
      "version": "3",
      "name": "GetGroupMemberProfile",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "member_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited string of optional response field names. This may include birthday, gender, groups, privacy, self and topics"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' or 'visible'"
        },
        "birthday": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes 'birthday' and only for the authenticated member when defined"
        },
        "day": {
          "location": "query",
          "required": false,
          "description": "Numeric day member was born. May be absent if not defined"
        },
        "month": {
          "location": "query",
          "required": false,
          "description": "Numeric month member was born. May be absent if not defined"
        },
        "year": {
          "location": "query",
          "required": false,
          "description": "Year member was born"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "Member email address. Provided only if a profile belongs to the authenticated member"
        },
        "gender": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes \"gender\" and only for the authenticated member. Value may be one of \"female\", \"male\", \"none\", or \"other\". This field may be absent where gender is not defined"
        },
        "group_profile": {
          "location": "query",
          "required": false,
          "description": "Meetup Group profile information. This field is only returned when profile is requested in group contexts"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "Array of answers to Group Profile questions"
        },
        "answer": {
          "location": "query",
          "required": false,
          "description": "Answer text"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "question_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric question identifier"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group hosting the event"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "a string with one of the following values: {'active', 'prereg', 'unknown'}"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Member intro, may be omitted if member opted to hide their intro from other members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Member profile link, provides a link to the members chapter profile"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the Group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "The last time this member visited the Group, represented as milliseconds since the epoch"
        },
        "is_pro_admin": {
          "location": "query",
          "required": false,
          "description": "Returns true if the member is an active admin of an active meetup pro network"
        },
        "joined": {
          "location": "query",
          "required": false,
          "description": "Time member joined, represented as milliseconds since the epoch"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last RSVP'd Meetup this member attended within the last two weeks, where available. Returned when the \"fields\" request parameter value contains \"last_event\" only for the profile of the authenticated member"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Ticketing fee information for events that support payments"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "Boolean flag indicating if this fee is required to RSVP"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State associated with Member's location, where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when the \"fields\" request parameter value includes \"rsvp_sample\""
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "Contains a list of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\" request parameter contains \"survey_questions\""
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "memberships": {
          "location": "query",
          "required": false,
          "description": "Group memberships affiliated with this member. Returned only when fields request parameter value includes \"memberships\". This list may be omitted if the member has opted to hide their groups from others."
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Memberships where member is on the group's lead team"
        },
        "messaging_pref": {
          "location": "query",
          "required": false,
          "description": "The member's preference for being contacted from other members on the platform. Returned only when the fields request parameter value includes \"messaging_pref\". May be one of the following: \"all_members\", \"groups_only\", or \"orgs_only\""
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing either the current ongoing or next RSVP'd Meetup, where available. Returned when the \"fields\" request parameter value contains \"next_event\" only for the profile of the authenticated member"
        },
        "other_services": {
          "location": "query",
          "required": false,
          "description": "An object whose key's are the names of associated external networks and values are identities within those networks. The keys may be one of facebook, flickr, linkedin, tumblr or twitter. Returned only when \"fields\" request parameter value includes \"other_services\""
        },
        "identifier": {
          "location": "query",
          "required": false,
          "description": "A unique string identifier"
        },
        "url": {
          "location": "query",
          "required": false,
          "description": "A url for this identity. May be the same as identifier in some cases"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo. May be absent if member has not chosen one. In group contexts, the Member's Group profile photo will be returned."
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "privacy": {
          "location": "query",
          "required": false,
          "description": "Member's privacy preferences Returned only when the \"fields\" request parameter value includes \"privacy\""
        },
        "facebook": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' of 'visible'. If absent, the member has not connected their Facebook account to Meetup"
        },
        "groups": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup Group memberships. May be 0 if member chose to hide their groups from others"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "List of Meetup topics Member has interest in. Returned only when fields request parameter value includes \"topics\". This list may be omitted when member has opted to hide the topics from others."
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Represents the authenticated member's relation to member. Returned when \"fields\" request parameter value includes \"self\" and the target member is not the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions available for the authenticated member to perform. Currently only \"message\" is supported"
        },
        "blocks": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member blocks this member"
        },
        "common": {
          "location": "query",
          "required": false,
          "description": "Information the authenticated member has in common with this member"
        },
        "friends": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member is a friend of the member"
        },
        "stats": {
          "location": "query",
          "required": false,
          "description": "High level numeric member statistics Returned only when fields request parameter value includes 'stats'"
        },
        "rsvps": {
          "location": "query",
          "required": false,
          "description": "Number of RSVPs. May be 0 if member chose to hide their groups from others"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "add_role": {
          "location": "query",
          "required": false,
          "description": "Allows those with permission to assign one of the following roles: \"assistant_organizer\", \"coorganizer\", or \"event_organizer\""
        },
        "answer_{qid}": {
          "location": "query",
          "required": false,
          "description": "Answers to questions from group's API join_info question fields."
        },
        "photo_id": {
          "location": "query",
          "required": false,
          "description": "Numeric id of the photo to use for this profile. Send a value of 0 to unset the current photo"
        },
        "remove_role": {
          "location": "query",
          "required": false,
          "description": "Allows those with permission to remove one of the following roles: \"assistant_organizer\", \"coorganizer\", or \"event_organizer\""
        },
        "exit_comment": {
          "location": "query",
          "required": false,
          "description": "Optional message to the organizer when leaving"
        },
        "organizer_error": {
          "location": "query",
          "required": false,
          "description": "Returned when an organizer attempts to delete their profile before stepping down"
        }
      },
      "summary": "Gets Group Profiles.For Member Profiles, see this endpoint",
      "uri": "/{urlname}/members/{member_id}/#get",
      "notes": null
    },
    "EditGroupMemberProfile": {
      "version": "3",
      "name": "EditGroupMemberProfile",
      "httpMethod": "PATCH",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "member_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "add_role": {
          "location": "query",
          "required": false,
          "description": "Allows those with permission to assign one of the following roles: \"assistant_organizer\", \"coorganizer\", or \"event_organizer\""
        },
        "answer_{qid}": {
          "location": "query",
          "required": false,
          "description": "Answers to questions from group's API join_info question fields."
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited string of optional response field names. This may include birthday, gender, groups, privacy, self and topics"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Member intro, may be omitted if member opted to hide their intro from other members"
        },
        "photo_id": {
          "location": "query",
          "required": false,
          "description": "Numeric id of the photo to use for this profile. Send a value of 0 to unset the current photo"
        },
        "remove_role": {
          "location": "query",
          "required": false,
          "description": "Allows those with permission to remove one of the following roles: \"assistant_organizer\", \"coorganizer\", or \"event_organizer\""
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' or 'visible'"
        },
        "birthday": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes 'birthday' and only for the authenticated member when defined"
        },
        "day": {
          "location": "query",
          "required": false,
          "description": "Numeric day member was born. May be absent if not defined"
        },
        "month": {
          "location": "query",
          "required": false,
          "description": "Numeric month member was born. May be absent if not defined"
        },
        "year": {
          "location": "query",
          "required": false,
          "description": "Year member was born"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "Member email address. Provided only if a profile belongs to the authenticated member"
        },
        "gender": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes \"gender\" and only for the authenticated member. Value may be one of \"female\", \"male\", \"none\", or \"other\". This field may be absent where gender is not defined"
        },
        "group_profile": {
          "location": "query",
          "required": false,
          "description": "Meetup Group profile information. This field is only returned when profile is requested in group contexts"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "Array of answers to Group Profile questions"
        },
        "answer": {
          "location": "query",
          "required": false,
          "description": "Answer text"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "question_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric question identifier"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group hosting the event"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "a string with one of the following values: {'active', 'prereg', 'unknown'}"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Member profile link, provides a link to the members chapter profile"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the Group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "The last time this member visited the Group, represented as milliseconds since the epoch"
        },
        "is_pro_admin": {
          "location": "query",
          "required": false,
          "description": "Returns true if the member is an active admin of an active meetup pro network"
        },
        "joined": {
          "location": "query",
          "required": false,
          "description": "Time member joined, represented as milliseconds since the epoch"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last RSVP'd Meetup this member attended within the last two weeks, where available. Returned when the \"fields\" request parameter value contains \"last_event\" only for the profile of the authenticated member"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Ticketing fee information for events that support payments"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "Boolean flag indicating if this fee is required to RSVP"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State associated with Member's location, where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when the \"fields\" request parameter value includes \"rsvp_sample\""
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "Contains a list of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\" request parameter contains \"survey_questions\""
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "memberships": {
          "location": "query",
          "required": false,
          "description": "Group memberships affiliated with this member. Returned only when fields request parameter value includes \"memberships\". This list may be omitted if the member has opted to hide their groups from others."
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Memberships where member is on the group's lead team"
        },
        "messaging_pref": {
          "location": "query",
          "required": false,
          "description": "The member's preference for being contacted from other members on the platform. Returned only when the fields request parameter value includes \"messaging_pref\". May be one of the following: \"all_members\", \"groups_only\", or \"orgs_only\""
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing either the current ongoing or next RSVP'd Meetup, where available. Returned when the \"fields\" request parameter value contains \"next_event\" only for the profile of the authenticated member"
        },
        "other_services": {
          "location": "query",
          "required": false,
          "description": "An object whose key's are the names of associated external networks and values are identities within those networks. The keys may be one of facebook, flickr, linkedin, tumblr or twitter. Returned only when \"fields\" request parameter value includes \"other_services\""
        },
        "identifier": {
          "location": "query",
          "required": false,
          "description": "A unique string identifier"
        },
        "url": {
          "location": "query",
          "required": false,
          "description": "A url for this identity. May be the same as identifier in some cases"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo. May be absent if member has not chosen one. In group contexts, the Member's Group profile photo will be returned."
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "privacy": {
          "location": "query",
          "required": false,
          "description": "Member's privacy preferences Returned only when the \"fields\" request parameter value includes \"privacy\""
        },
        "facebook": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' of 'visible'. If absent, the member has not connected their Facebook account to Meetup"
        },
        "groups": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup Group memberships. May be 0 if member chose to hide their groups from others"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "List of Meetup topics Member has interest in. Returned only when fields request parameter value includes \"topics\". This list may be omitted when member has opted to hide the topics from others."
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Represents the authenticated member's relation to member. Returned when \"fields\" request parameter value includes \"self\" and the target member is not the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions available for the authenticated member to perform. Currently only \"message\" is supported"
        },
        "blocks": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member blocks this member"
        },
        "common": {
          "location": "query",
          "required": false,
          "description": "Information the authenticated member has in common with this member"
        },
        "friends": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member is a friend of the member"
        },
        "stats": {
          "location": "query",
          "required": false,
          "description": "High level numeric member statistics Returned only when fields request parameter value includes 'stats'"
        },
        "rsvps": {
          "location": "query",
          "required": false,
          "description": "Number of RSVPs. May be 0 if member chose to hide their groups from others"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "exit_comment": {
          "location": "query",
          "required": false,
          "description": "Optional message to the organizer when leaving"
        },
        "organizer_error": {
          "location": "query",
          "required": false,
          "description": "Returned when an organizer attempts to delete their profile before stepping down"
        }
      },
      "summary": "Edits Group Profiles.To fetch Group Member Profiles,see this endpoint",
      "uri": "/{urlname}/members/{member_id}/#edit",
      "notes": null
    },
    "DeleteGroupMemberProfile(LeaveGroup)": {
      "version": "3",
      "name": "DeleteGroupMemberProfile(LeaveGroup)",
      "httpMethod": "DELETE",
      "parameters": {
        "urlname": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "member_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "exit_comment": {
          "location": "query",
          "required": false,
          "description": "Optional message to the organizer when leaving"
        },
        "organizer_error": {
          "location": "query",
          "required": false,
          "description": "Returned when an organizer attempts to delete their profile before stepping down"
        }
      },
      "summary": "Deletes a member's group profiles.",
      "uri": "/{urlname}/members/{member_id}/#delete",
      "notes": null
    },
    "GroupProfilesearch": {
      "version": "3",
      "name": "GroupProfilesearch",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to append to the response"
        },
        "order": {
          "location": "query",
          "required": false,
          "description": "Orders results according to definitions listed below. May be one of \"name\" or \"closest_match\""
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Number of requested members to return. Defaults to 50"
        },
        "query": {
          "location": "query",
          "required": true,
          "description": "The name to search for"
        },
        "closest_match": {
          "location": "query",
          "required": false,
          "description": "Ordered by closest match to the provided query"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name for the member"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' or 'visible'"
        },
        "birthday": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes 'birthday' and only for the authenticated member when defined"
        },
        "day": {
          "location": "query",
          "required": false,
          "description": "Numeric day member was born. May be absent if not defined"
        },
        "month": {
          "location": "query",
          "required": false,
          "description": "Numeric month member was born. May be absent if not defined"
        },
        "year": {
          "location": "query",
          "required": false,
          "description": "Year member was born"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City associated with Member's location"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code associated with Member's location"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "Member email address. Provided only if a profile belongs to the authenticated member"
        },
        "gender": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes \"gender\" and only for the authenticated member. Value may be one of \"female\", \"male\", \"none\", or \"other\". This field may be absent where gender is not defined"
        },
        "group_profile": {
          "location": "query",
          "required": false,
          "description": "Meetup Group profile information. This field is only returned when profile is requested in group contexts"
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "Array of answers to Group Profile questions"
        },
        "answer": {
          "location": "query",
          "required": false,
          "description": "Answer text"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "question_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric question identifier"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "The time this member joined the Group, represented as milliseconds since the epoch"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "The group associated with this membership"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "a string with one of the following values: {'active', 'prereg', 'unknown'}"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "intro": {
          "location": "query",
          "required": false,
          "description": "Member intro, may be omitted if member opted to hide their intro from other members"
        },
        "link": {
          "location": "query",
          "required": false,
          "description": "Member profile link, provides a link to the members chapter profile"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the Group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "The last time this member edited their Group profile, represented as milliseconds since the epoch"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "The last time this member visited the Group, represented as milliseconds since the epoch"
        },
        "is_pro_admin": {
          "location": "query",
          "required": false,
          "description": "Returns true if the member is an active admin of an active meetup pro network"
        },
        "joined": {
          "location": "query",
          "required": false,
          "description": "Time member joined, represented as milliseconds since the epoch"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Geographic latitude associated with Member's location"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "Name of country associated with Member's location"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Geographic longitude associated with Member's location"
        },
        "messaging_pref": {
          "location": "query",
          "required": false,
          "description": "The member's preference for being contacted from other members on the platform. Returned only when the fields request parameter value includes \"messaging_pref\". May be one of the following: \"all_members\", \"groups_only\", or \"orgs_only\""
        },
        "other_services": {
          "location": "query",
          "required": false,
          "description": "An object whose key's are the names of associated external networks and values are identities within those networks. The keys may be one of facebook, flickr, linkedin, tumblr or twitter. Returned only when \"fields\" request parameter value includes \"other_services\""
        },
        "identifier": {
          "location": "query",
          "required": false,
          "description": "A unique string identifier"
        },
        "url": {
          "location": "query",
          "required": false,
          "description": "A url for this identity. May be the same as identifier in some cases"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo. May be absent if member has not chosen one. In group contexts, the Member's Group profile photo will be returned."
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "privacy": {
          "location": "query",
          "required": false,
          "description": "Member's privacy preferences Returned only when the \"fields\" request parameter value includes \"privacy\""
        },
        "facebook": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' of 'visible'. If absent, the member has not connected their Facebook account to Meetup"
        },
        "groups": {
          "location": "query",
          "required": false,
          "description": "List of common groups"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' or 'visible'"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Represents the authenticated member's relation to member. Returned when \"fields\" request parameter value includes \"self\" and the target member is not the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions available for the authenticated member to perform. Currently only \"message\" is supported"
        },
        "blocks": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member blocks this member"
        },
        "common": {
          "location": "query",
          "required": false,
          "description": "Information the authenticated member has in common with this member"
        },
        "friends": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member is a friend of the member"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State associated with Member's location, where available"
        }
      },
      "summary": "Find group member profiles by name.Member's who very recently joined or left the group may not be immediately searchable",
      "uri": "/find/{urlname}/members/",
      "notes": "A valid :urlname path parameter is required This endpoint uses HTTP Link header based pagination."
    },
    "GetMemberProfile": {
      "version": "3",
      "name": "GetMemberProfile",
      "httpMethod": "GET",
      "parameters": {
        "member_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited string of optional response field names. This may include groups, privacy, and topics"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' or 'visible'"
        },
        "birthday": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes 'birthday' and only for the authenticated member when defined"
        },
        "day": {
          "location": "query",
          "required": false,
          "description": "Numeric day member was born. May be absent if not defined"
        },
        "month": {
          "location": "query",
          "required": false,
          "description": "Numeric month member was born. May be absent if not defined"
        },
        "year": {
          "location": "query",
          "required": false,
          "description": "Year member was born"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "Member email address. Provided only if a profile belongs to the authenticated member"
        },
        "gender": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes \"gender\" and only for the authenticated member. Value may be one of \"female\", \"male\", \"none\", or \"other\". This field may be absent where gender is not defined"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "is_pro_admin": {
          "location": "query",
          "required": false,
          "description": "Returns true if the member is an active admin of an active meetup pro network"
        },
        "joined": {
          "location": "query",
          "required": false,
          "description": "Time member joined, represented as milliseconds since the epoch"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last RSVP'd Meetup this member attended within the last two weeks, where available. Returned when the \"fields\" request parameter value contains \"last_event\" only for the profile of the authenticated member"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Ticketing fee information for events that support payments"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "Boolean flag indicating if this fee is required to RSVP"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group hosting the event"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State associated with Member's location, where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when the \"fields\" request parameter value includes \"rsvp_sample\""
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "Contains a list of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\" request parameter contains \"survey_questions\""
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "memberships": {
          "location": "query",
          "required": false,
          "description": "Group memberships affiliated with this member. Returned only when fields request parameter value includes \"memberships\". This list may be omitted if the member has opted to hide their groups from others."
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the Group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "a string with one of the following values: {'active', 'prereg', 'unknown'}"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "The last time this member visited the Group, represented as milliseconds since the epoch"
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Memberships where member is on the group's lead team"
        },
        "messaging_pref": {
          "location": "query",
          "required": false,
          "description": "The member's preference for being contacted from other members on the platform. Returned only when the fields request parameter value includes \"messaging_pref\". May be one of the following: \"all_members\", \"groups_only\", or \"orgs_only\""
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing either the current ongoing or next RSVP'd Meetup, where available. Returned when the \"fields\" request parameter value contains \"next_event\" only for the profile of the authenticated member"
        },
        "other_services": {
          "location": "query",
          "required": false,
          "description": "An object whose key's are the names of associated external networks and values are identities within those networks. The keys may be one of facebook, flickr, linkedin, tumblr or twitter. Returned only when \"fields\" request parameter value includes \"other_services\""
        },
        "identifier": {
          "location": "query",
          "required": false,
          "description": "A unique string identifier"
        },
        "url": {
          "location": "query",
          "required": false,
          "description": "A url for this identity. May be the same as identifier in some cases"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo. May be absent if member has not chosen one. In group contexts, the Member's Group profile photo will be returned."
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "privacy": {
          "location": "query",
          "required": false,
          "description": "Member's privacy preferences Returned only when the \"fields\" request parameter value includes \"privacy\""
        },
        "facebook": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' of 'visible'. If absent, the member has not connected their Facebook account to Meetup"
        },
        "groups": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup Group memberships. May be 0 if member chose to hide their groups from others"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "List of Meetup topics Member has interest in. Returned only when fields request parameter value includes \"topics\". This list may be omitted when member has opted to hide the topics from others."
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Represents the authenticated member's relation to member. Returned when \"fields\" request parameter value includes \"self\" and the target member is not the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions available for the authenticated member to perform. Currently only \"message\" is supported"
        },
        "blocks": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member blocks this member"
        },
        "common": {
          "location": "query",
          "required": false,
          "description": "Information the authenticated member has in common with this member"
        },
        "friends": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member is a friend of the member"
        },
        "stats": {
          "location": "query",
          "required": false,
          "description": "High level numeric member statistics Returned only when fields request parameter value includes 'stats'"
        },
        "rsvps": {
          "location": "query",
          "required": false,
          "description": "Number of RSVPs. May be 0 if member chose to hide their groups from others"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "add_topics": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited list of topic ids to add to members interest list"
        },
        "bio_privacy": {
          "location": "query",
          "required": false,
          "description": "Preference for hiding or showing member bio to others. Value may be one of \"hidden\" or \"visible\""
        },
        "city_id": {
          "location": "query",
          "required": false,
          "description": "Valid Meetup city identifier that indicates the city in which the member resides"
        },
        "facebook_privacy": {
          "location": "query",
          "required": false,
          "description": "Preference for hiding showing information member's facebook connection. Value may be one of \"hidden\" or \"visible\" or absent if facebook is not connected"
        },
        "groups_privacy": {
          "location": "query",
          "required": false,
          "description": "Preference for hiding or showing group memberships to others. Value may be one of \"hidden\" or \"visible\""
        },
        "photo_id": {
          "location": "query",
          "required": false,
          "description": "A valid photo id to this member has previously updated to use as profile photo"
        },
        "remove_topics": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited list of topic ids to remove from members interest list"
        },
        "sync_photo": {
          "location": "query",
          "required": false,
          "description": "When set to true, this parameter will sync all the group profile photos for the member with the provided photo_id"
        },
        "topics_privacy": {
          "location": "query",
          "required": false,
          "description": "Preference for hiding or showing member interests to others. Value may be one of \"hidden\" or \"visible\""
        }
      },
      "summary": "Gets Member Profiles.For Group Profiles, see this endpoint",
      "uri": "/members/{member_id}/#get",
      "notes": null
    },
    "MemberProfileEdit": {
      "version": "3",
      "name": "MemberProfileEdit",
      "httpMethod": "PATCH",
      "parameters": {
        "member_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "add_topics": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited list of topic ids to add to members interest list"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' or 'visible'"
        },
        "bio_privacy": {
          "location": "query",
          "required": false,
          "description": "Preference for hiding or showing member bio to others. Value may be one of \"hidden\" or \"visible\""
        },
        "birthday": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes 'birthday' and only for the authenticated member when defined"
        },
        "city_id": {
          "location": "query",
          "required": false,
          "description": "Valid Meetup city identifier that indicates the city in which the member resides"
        },
        "facebook_privacy": {
          "location": "query",
          "required": false,
          "description": "Preference for hiding showing information member's facebook connection. Value may be one of \"hidden\" or \"visible\" or absent if facebook is not connected"
        },
        "gender": {
          "location": "query",
          "required": false,
          "description": "Returned only when the fields request parameter value includes \"gender\" and only for the authenticated member. Value may be one of \"female\", \"male\", \"none\", or \"other\". This field may be absent where gender is not defined"
        },
        "groups_privacy": {
          "location": "query",
          "required": false,
          "description": "Preference for hiding or showing group memberships to others. Value may be one of \"hidden\" or \"visible\""
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "messaging_pref": {
          "location": "query",
          "required": false,
          "description": "The member's preference for being contacted from other members on the platform. Returned only when the fields request parameter value includes \"messaging_pref\". May be one of the following: \"all_members\", \"groups_only\", or \"orgs_only\""
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "photo_id": {
          "location": "query",
          "required": false,
          "description": "A valid photo id to this member has previously updated to use as profile photo"
        },
        "remove_topics": {
          "location": "query",
          "required": false,
          "description": "Comma-delimited list of topic ids to remove from members interest list"
        },
        "sync_photo": {
          "location": "query",
          "required": false,
          "description": "When set to true, this parameter will sync all the group profile photos for the member with the provided photo_id"
        },
        "topics_privacy": {
          "location": "query",
          "required": false,
          "description": "Preference for hiding or showing member interests to others. Value may be one of \"hidden\" or \"visible\""
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "day": {
          "location": "query",
          "required": false,
          "description": "Numeric day member was born. May be absent if not defined"
        },
        "month": {
          "location": "query",
          "required": false,
          "description": "Numeric month member was born. May be absent if not defined"
        },
        "year": {
          "location": "query",
          "required": false,
          "description": "Year member was born"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "email": {
          "location": "query",
          "required": false,
          "description": "Member email address. Provided only if a profile belongs to the authenticated member"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "is_pro_admin": {
          "location": "query",
          "required": false,
          "description": "Returns true if the member is an active admin of an active meetup pro network"
        },
        "joined": {
          "location": "query",
          "required": false,
          "description": "Time member joined, represented as milliseconds since the epoch"
        },
        "last_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing the last RSVP'd Meetup this member attended within the last two weeks, where available. Returned when the \"fields\" request parameter value contains \"last_event\" only for the profile of the authenticated member"
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch"
        },
        "date_in_series_pattern": {
          "location": "query",
          "required": false,
          "description": "Is event date matches the series pattern"
        },
        "duration": {
          "location": "query",
          "required": false,
          "description": "Scheduled event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications"
        },
        "fee": {
          "location": "query",
          "required": false,
          "description": "Ticketing fee information for events that support payments"
        },
        "accepts": {
          "location": "query",
          "required": false,
          "description": "Acceptable methods of payments may be one of \"paypal\", \"wepay\", \"stripe\", or \"cash\""
        },
        "amount": {
          "location": "query",
          "required": false,
          "description": "Amount of the fee"
        },
        "currency": {
          "location": "query",
          "required": false,
          "description": "Currency accepted for fee"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "Human displayable description of how often events in this series occur"
        },
        "label": {
          "location": "query",
          "required": false,
          "description": "Label for fee, typically \"Price\""
        },
        "required": {
          "location": "query",
          "required": false,
          "description": "Boolean flag indicating if this fee is required to RSVP"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "Group hosting the event"
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Indicator of how new members may be able to join. be one of \"open\", \"approval\" or \"closed\""
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "region": {
          "location": "query",
          "required": false,
          "description": "Language and region of the group"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State associated with Member's location, where available"
        },
        "timezone": {
          "location": "query",
          "required": false,
          "description": "Timezone of group"
        },
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Alphanumeric urlname identifier for the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "local_date": {
          "location": "query",
          "required": false,
          "description": "The local date of the Meetup in ISO 8601 format"
        },
        "local_time": {
          "location": "query",
          "required": false,
          "description": "The local time of the Meetup in ISO 8601 format"
        },
        "past_event_count_inclusive": {
          "location": "query",
          "required": false,
          "description": "Number of past events that happened before and including this event. Returned when \"fields\" request parameter value contains \"past_event_count_inclusive\""
        },
        "photo_album": {
          "location": "query",
          "required": false,
          "description": "Information about photo uploads for this event"
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "Event photo album belongs to. This will be absent if the album is not associated with an event"
        },
        "photo_count": {
          "location": "query",
          "required": false,
          "description": "Number of photos uploaded"
        },
        "photo_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection of photos uploaded for this event"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Album title"
        },
        "rsvp_close_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs close and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_limit": {
          "location": "query",
          "required": false,
          "description": "The number of \"yes\" RSVPS an event has capacity for"
        },
        "rsvp_open_offset": {
          "location": "query",
          "required": false,
          "description": "The amount of time between when RSVPs open and the start time of the Meetup in ISO 8601 format"
        },
        "rsvp_sample": {
          "location": "query",
          "required": false,
          "description": "A small collection RSVPs for members attending this event, returned when the \"fields\" request parameter value includes \"rsvp_sample\""
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last modified time for the event in milliseconds since the epoch"
        },
        "series": {
          "location": "query",
          "required": false,
          "description": "Returned when the \"fields\" request parameter value includes \"series\" for events that are part of a series of events"
        },
        "end_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series ends/ended, in milliseconds since the epoch"
        },
        "monthly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a monthly recurring series of events"
        },
        "start_date": {
          "location": "query",
          "required": false,
          "description": "Date when this series begins/began, in milliseconds since the epoch"
        },
        "template_event_id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric identifier for the template event of the series"
        },
        "weekly": {
          "location": "query",
          "required": false,
          "description": "Returned for events that are part of a weekly recurring series of events"
        },
        "survey_questions": {
          "location": "query",
          "required": false,
          "description": "Contains a list of organizer-defined survey questions intended to be asked of RSVPing members. Returned when the \"fields\" request parameter contains \"survey_questions\""
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "The event venue, present only if selected and not hidden by an organizer"
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of members on the waitlist, if one exists"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs including guests"
        },
        "memberships": {
          "location": "query",
          "required": false,
          "description": "Group memberships affiliated with this member. Returned only when fields request parameter value includes \"memberships\". This list may be omitted if the member has opted to hide their groups from others."
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the Group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "a string with one of the following values: {'active', 'prereg', 'unknown'}"
        },
        "visited": {
          "location": "query",
          "required": false,
          "description": "The last time this member visited the Group, represented as milliseconds since the epoch"
        },
        "organizer": {
          "location": "query",
          "required": false,
          "description": "Memberships where member is on the group's lead team"
        },
        "next_event": {
          "location": "query",
          "required": false,
          "description": "Optional field representing either the current ongoing or next RSVP'd Meetup, where available. Returned when the \"fields\" request parameter value contains \"next_event\" only for the profile of the authenticated member"
        },
        "other_services": {
          "location": "query",
          "required": false,
          "description": "An object whose key's are the names of associated external networks and values are identities within those networks. The keys may be one of facebook, flickr, linkedin, tumblr or twitter. Returned only when \"fields\" request parameter value includes \"other_services\""
        },
        "identifier": {
          "location": "query",
          "required": false,
          "description": "A unique string identifier"
        },
        "url": {
          "location": "query",
          "required": false,
          "description": "A url for this identity. May be the same as identifier in some cases"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo. May be absent if member has not chosen one. In group contexts, the Member's Group profile photo will be returned."
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "privacy": {
          "location": "query",
          "required": false,
          "description": "Member's privacy preferences Returned only when the \"fields\" request parameter value includes \"privacy\""
        },
        "facebook": {
          "location": "query",
          "required": false,
          "description": "may be 'hidden' of 'visible'. If absent, the member has not connected their Facebook account to Meetup"
        },
        "groups": {
          "location": "query",
          "required": false,
          "description": "Number of Meetup Group memberships. May be 0 if member chose to hide their groups from others"
        },
        "topics": {
          "location": "query",
          "required": false,
          "description": "List of Meetup topics Member has interest in. Returned only when fields request parameter value includes \"topics\". This list may be omitted when member has opted to hide the topics from others."
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Represents the authenticated member's relation to member. Returned when \"fields\" request parameter value includes \"self\" and the target member is not the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions available for the authenticated member to perform. Currently only \"message\" is supported"
        },
        "blocks": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member blocks this member"
        },
        "common": {
          "location": "query",
          "required": false,
          "description": "Information the authenticated member has in common with this member"
        },
        "friends": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member is a friend of the member"
        },
        "stats": {
          "location": "query",
          "required": false,
          "description": "High level numeric member statistics Returned only when fields request parameter value includes 'stats'"
        },
        "rsvps": {
          "location": "query",
          "required": false,
          "description": "Number of RSVPs. May be 0 if member chose to hide their groups from others"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        }
      },
      "summary": "",
      "uri": "/members/{member_id}/#edit",
      "notes": null
    },
    "EventRSVPlist": {
      "version": "3",
      "name": "EventRSVPlist",
      "httpMethod": "GET",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "desc": {
          "location": "query",
          "required": false,
          "description": "Boolean value controling sort order of results. Defaults to false"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to append to the response"
        },
        "order": {
          "location": "query",
          "required": false,
          "description": "The sort order of returned RSVPs. Valid values include \"name\", \"social\", or \"time\". Defaults to \"name\""
        },
        "response": {
          "location": "query",
          "required": false,
          "description": "The response to the RSVP. May be \"yes\" or \"no\"."
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "Answers to event survey questions. Visible only to the posting member, hosts and the lead team"
        },
        "answer": {
          "location": "query",
          "required": false,
          "description": "Answer text for question"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "question_id": {
          "location": "query",
          "required": false,
          "description": "Unique number identifier for question"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last time the RSVP was updated, in milliseconds since the epoch."
        },
        "attendance_status": {
          "location": "query",
          "required": false,
          "description": "Represents an attendance status for this RSVP, returned when \"attendance_status\" is requested with the \"fields\" parameter."
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch."
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "The Event associated with the RSVP"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric venue id"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Venue name"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "The Group associated with the RSVP"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "guests": {
          "location": "query",
          "required": false,
          "description": "Number of guests the RSVP'd member will be bringing"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Represents the authenticated member's relation to member. Returned with the \"fields\" request parameter includes \"self\" and the target member is not the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions available for the authenticated member to perform. Currently only \"message\" is supported"
        },
        "blocks": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member blocks this member"
        },
        "common": {
          "location": "query",
          "required": false,
          "description": "Information the authenticated member has in common with this member"
        },
        "friends": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member is a friend of the member"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The member's pay status for ticketed events returned with \"pay_status\" is requested with the \"fields\" parameter."
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "Venue of event RSVP is hosted at. Will be omitted when venue is not yet defined or organizer has chosen to hide it from non-members."
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of venue where available"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        }
      },
      "summary": "Retrieves list of event RSVPs",
      "uri": "/{urlname}/events/{event_id}/rsvps/#list",
      "notes": null
    },
    "RSVPCreateandUpdate": {
      "version": "3",
      "name": "RSVPCreateandUpdate",
      "httpMethod": "POST",
      "parameters": {
        "urlname": {
          "location": "query",
          "required": false,
          "description": "Urlname used to identify the group on meetup.com"
        },
        "event_id": {
          "location": "uri",
          "required": true,
          "description": null
        },
        "agree_to_refund": {
          "location": "query",
          "required": false,
          "description": "A boolean indicator used for Events with ticketing feeds to imply the Member has agreed to the Event's refund policy"
        },
        "answer_{qid}": {
          "location": "query",
          "required": false,
          "description": "Answers to Event survey questions. Parameter names should have a suffix specifying the question's identifier. Answers may not be longer than 250 characters."
        },
        "guests": {
          "location": "query",
          "required": false,
          "description": "Number of guests the RSVP'd member will be bringing"
        },
        "opt_to_pay": {
          "location": "query",
          "required": false,
          "description": "A boolean indicator used for Events with ticketing fees to imply the Member has opted to pay as part of the RSVP request"
        },
        "pro_email_share_optin": {
          "location": "query",
          "required": false,
          "description": "The authenticated Member's email opt in status. Supported values are either \"true\" or \"false\""
        },
        "response": {
          "location": "query",
          "required": false,
          "description": "The response to the RSVP. May be \"yes\" or \"no\"."
        },
        "answers": {
          "location": "query",
          "required": false,
          "description": "Answers to event survey questions. Visible only to the posting member, hosts and the lead team"
        },
        "answer": {
          "location": "query",
          "required": false,
          "description": "Answer text for question"
        },
        "question": {
          "location": "query",
          "required": false,
          "description": "Question text"
        },
        "question_id": {
          "location": "query",
          "required": false,
          "description": "Unique number identifier for question"
        },
        "updated": {
          "location": "query",
          "required": false,
          "description": "Last time the RSVP was updated, in milliseconds since the epoch."
        },
        "attendance_status": {
          "location": "query",
          "required": false,
          "description": "Represents an attendance status for this RSVP, returned when \"attendance_status\" is requested with the \"fields\" parameter."
        },
        "created": {
          "location": "query",
          "required": false,
          "description": "Creation time of the RSVP, in milliseconds since the epoch."
        },
        "event": {
          "location": "query",
          "required": false,
          "description": "The Event associated with the RSVP"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Unique numeric venue id"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Venue name"
        },
        "no_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of no RSVPs, included if the rsvp_counts field is set"
        },
        "time": {
          "location": "query",
          "required": false,
          "description": "UTC start time of the event, in milliseconds since the epoch"
        },
        "utc_offset": {
          "location": "query",
          "required": false,
          "description": "The local offset from UTC time, in milliseconds"
        },
        "waitlist_count": {
          "location": "query",
          "required": false,
          "description": "Number of waitlisted RSVPs, included if the rsvp_counts field is set"
        },
        "yes_rsvp_count": {
          "location": "query",
          "required": false,
          "description": "Number of yes RSVPs"
        },
        "group": {
          "location": "query",
          "required": false,
          "description": "The Group associated with the RSVP"
        },
        "group_photo": {
          "location": "query",
          "required": false,
          "description": "Group photo"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "join_mode": {
          "location": "query",
          "required": false,
          "description": "Who can join this group and how. One of \"approval\", \"closed\", or \"open\""
        },
        "key_photo": {
          "location": "query",
          "required": false,
          "description": "Group primary photo"
        },
        "localized_location": {
          "location": "query",
          "required": false,
          "description": "City/State or City/Country of the group"
        },
        "photo_gradient": {
          "location": "query",
          "required": false,
          "description": "Color combination used generate group duotone"
        },
        "composite_color": {
          "location": "query",
          "required": false,
          "description": "Composite color in hexidecimal format"
        },
        "dark_color": {
          "location": "query",
          "required": false,
          "description": "Dark color in hexidecimal format"
        },
        "light_color": {
          "location": "query",
          "required": false,
          "description": "Light color in hexidecimal format"
        },
        "status": {
          "location": "query",
          "required": false,
          "description": "Status of the group"
        },
        "who": {
          "location": "query",
          "required": false,
          "description": "What the group calls its members"
        },
        "member": {
          "location": "query",
          "required": false,
          "description": "Member who RSVP'd"
        },
        "bio": {
          "location": "query",
          "required": false,
          "description": "Intro of member"
        },
        "event_context": {
          "location": "query",
          "required": false,
          "description": "Member's context within the event. Only returned in the context of an event"
        },
        "host": {
          "location": "query",
          "required": false,
          "description": "Boolean indicator for whether this member is a host for the event"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Member photo, if available. Members who registered via Facebook may not have highres photos"
        },
        "role": {
          "location": "query",
          "required": false,
          "description": "The leadership role of this member within the group, if any. Value may be one of assistant_organizer, coorganizer, event_organizer, organizer"
        },
        "self": {
          "location": "query",
          "required": false,
          "description": "Represents the authenticated member's relation to member. Returned with the \"fields\" request parameter includes \"self\" and the target member is not the authenticated member"
        },
        "actions": {
          "location": "query",
          "required": false,
          "description": "List of actions available for the authenticated member to perform. Currently only \"message\" is supported"
        },
        "blocks": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member blocks this member"
        },
        "common": {
          "location": "query",
          "required": false,
          "description": "Information the authenticated member has in common with this member"
        },
        "friends": {
          "location": "query",
          "required": false,
          "description": "Boolean indication of whether or not the authenticated member is a friend of the member"
        },
        "title": {
          "location": "query",
          "required": false,
          "description": "Organizer defined title of member. May be absent if not defined"
        },
        "pay_status": {
          "location": "query",
          "required": false,
          "description": "The member's pay status for ticketed events returned with \"pay_status\" is requested with the \"fields\" parameter."
        },
        "venue": {
          "location": "query",
          "required": false,
          "description": "Venue of event RSVP is hosted at. Will be omitted when venue is not yet defined or organizer has chosen to hide it from non-members."
        },
        "address_1": {
          "location": "query",
          "required": false,
          "description": "Line 1 of venue address"
        },
        "address_2": {
          "location": "query",
          "required": false,
          "description": "Line 2 of venue address"
        },
        "address_3": {
          "location": "query",
          "required": false,
          "description": "Line 3 of venue address"
        },
        "city": {
          "location": "query",
          "required": false,
          "description": "City of venue"
        },
        "country": {
          "location": "query",
          "required": false,
          "description": "Country code of venue"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "Approximate latitude"
        },
        "localized_country_name": {
          "location": "query",
          "required": false,
          "description": "The localized name of the venue's country"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "Approximate longitude"
        },
        "phone": {
          "location": "query",
          "required": false,
          "description": "Phone number of venue"
        },
        "repinned": {
          "location": "query",
          "required": false,
          "description": "true if the editor of the event altered the original venues pin location, false otherwise"
        },
        "state": {
          "location": "query",
          "required": false,
          "description": "State of venue where available"
        },
        "zip": {
          "location": "query",
          "required": false,
          "description": "ZIP code if, venue is in US or Canada"
        },
        "answer_error": {
          "location": "query",
          "required": false,
          "description": "One or more of the provided answers were longer than 250 characters"
        },
        "dues_required_error": {
          "location": "query",
          "required": false,
          "description": "Membership dues are awaiting payment"
        },
        "event_past_error": {
          "location": "query",
          "required": false,
          "description": "The event is now in the past"
        },
        "guests_error": {
          "location": "query",
          "required": false,
          "description": "A negative number of guests was provided"
        },
        "invalid_event_error": {
          "location": "query",
          "required": false,
          "description": "Event was invalid"
        },
        "invalid_response_error": {
          "location": "query",
          "required": false,
          "description": "Invalid RSVP response"
        },
        "refund_agreement_error": {
          "location": "query",
          "required": false,
          "description": "Failed to agree to a paid Event's refund policy"
        },
        "rsvp_closed_error": {
          "location": "query",
          "required": false,
          "description": "RSVPs have been closed for this event"
        },
        "rsvp_error_error": {
          "location": "query",
          "required": false,
          "description": "Catch all generic error"
        },
        "rsvper_not_authorized_error": {
          "location": "query",
          "required": false,
          "description": "Attempted to RSVP  another member on their behalf as a non organizer"
        },
        "too_few_spots_error": {
          "location": "query",
          "required": false,
          "description": "Event capacity has been reached"
        },
        "too_many_guests_error": {
          "location": "query",
          "required": false,
          "description": "More than the permitted number of guests for this event was provided"
        },
        "desc": {
          "location": "query",
          "required": false,
          "description": "Boolean value controling sort order of results. Defaults to false"
        },
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of optional fields to append to the response"
        },
        "order": {
          "location": "query",
          "required": false,
          "description": "The sort order of returned RSVPs. Valid values include \"name\", \"social\", or \"time\". Defaults to \"name\""
        }
      },
      "summary": "Creates or updates an existing RSVP",
      "uri": "/{urlname}/events/{event_id}/rsvps/",
      "notes": "The RSVP with be attributed to the currently authenticated member. Organizers may define a set of survey questions they intend members to answer when RSVPing. Members RSVPing may provide answers to those questions by supplying parameter names that correspond with question identifiers. To resolve any defined survey questions, you can inspect the Event Get's response body for the 'survey_questions' field If the Event requires payment, you are required to send an 'agree_to_refund' parameter set to true. This represents the authenticated Member's agreement to understanding the Event's refund policy. Note: When space is not available, \"yes\" responses may be coerced into a waitlist response. This indicates that the authenticated member has expressed interest in attending when space becomes available. OAuth authenticated applications should request the rsvp permission scope"
    },
    "TopicCategories": {
      "version": "3",
      "name": "TopicCategories",
      "httpMethod": "GET",
      "parameters": {
        "fields": {
          "location": "query",
          "required": false,
          "description": "A comma-limited list of optional fields to append to the response"
        },
        "lat": {
          "location": "query",
          "required": false,
          "description": "An optional approximate latitude to center a request for \"best_topics\". When not provided, lat associated with member is used"
        },
        "lon": {
          "location": "query",
          "required": false,
          "description": "An optional approximate longitude to center a request for \"best_topics\". When not provided, lon associated with member is used"
        },
        "radius": {
          "location": "query",
          "required": false,
          "description": "An radius (in miles) to center a request for \"best_topics\". When not provided, the members default alert radius is used"
        },
        "best_topics": {
          "location": "query",
          "required": false,
          "description": "Represents the best topic matches for this category, returned when the \"fields\" request parameter value includes \"best_topics\""
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric photo ID"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic-category"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        },
        "category_ids": {
          "location": "query",
          "required": false,
          "description": "List of numeric category ids associated with this topic category"
        },
        "photo": {
          "location": "query",
          "required": false,
          "description": "Photo representing this category"
        },
        "base_url": {
          "location": "query",
          "required": false,
          "description": "A base url that can be use to construct a photo url from its components"
        },
        "highres_link": {
          "location": "query",
          "required": false,
          "description": "Link for full sized photo"
        },
        "photo_link": {
          "location": "query",
          "required": false,
          "description": "Link for standard sized photo"
        },
        "thumb_link": {
          "location": "query",
          "required": false,
          "description": "Link for thumbnail sized photo"
        },
        "type": {
          "location": "query",
          "required": false,
          "description": "Type of photo. One of \"event\" or \"member\""
        },
        "shortname": {
          "location": "query",
          "required": false,
          "description": "Unique string identifier for this category"
        },
        "sort_name": {
          "location": "query",
          "required": false,
          "description": "Name used for sorting"
        }
      },
      "summary": "Returns a list high level topic categories",
      "uri": "/find/topic_categories/",
      "notes": "No parameters are required. Authenticated members may request \"best_topics\" using the \"fields\" request parameter. By default these topics will selected based on groups in the member's location. Alternatively you may supply a \"lat\", \"lon\", and \"radius\" to center these topic suggestions"
    },
    "FindTopics": {
      "version": "3",
      "name": "FindTopics",
      "httpMethod": "GET",
      "parameters": {
        "page": {
          "location": "query",
          "required": false,
          "description": "Number of results to return in a single set of results"
        },
        "query": {
          "location": "query",
          "required": true,
          "description": "The text to topic text search for"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "The description of the topic"
        },
        "group_count": {
          "location": "query",
          "required": false,
          "description": "The number of groups using this topic"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "member_count": {
          "location": "query",
          "required": false,
          "description": "The number of members interested in this topic"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        }
      },
      "summary": "Find topics by name",
      "uri": "/find/topics/",
      "notes": "This endpoint uses HTTP Link header based pagination."
    },
    "RecommendGroupTopics": {
      "version": "3",
      "name": "RecommendGroupTopics",
      "httpMethod": "GET",
      "parameters": {
        "exclude_topics": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of topic ids to exclude from the recommendations"
        },
        "lang": {
          "location": "query",
          "required": false,
          "description": "Language topic originates from"
        },
        "other_topics": {
          "location": "query",
          "required": false,
          "description": "A comma-delimited list of topic ids to inform recommendations"
        },
        "page": {
          "location": "query",
          "required": false,
          "description": "Target number of recommendations to return. Defaults to 36."
        },
        "text": {
          "location": "query",
          "required": false,
          "description": "Free form text search"
        },
        "description": {
          "location": "query",
          "required": false,
          "description": "The description of the topic"
        },
        "group_count": {
          "location": "query",
          "required": false,
          "description": "The number of groups using this topic"
        },
        "id": {
          "location": "query",
          "required": false,
          "description": "Numeric topic id"
        },
        "member_count": {
          "location": "query",
          "required": false,
          "description": "The number of members interested in this topic"
        },
        "name": {
          "location": "query",
          "required": false,
          "description": "Display name of the topic"
        },
        "urlkey": {
          "location": "query",
          "required": false,
          "description": "The unique keyword used to identify this topic"
        }
      },
      "summary": "Recommends suggestions for group topics based on a text search or other topics",
      "uri": "/recommended/group_topics/",
      "notes": ""
    }
  }
}